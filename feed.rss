<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel><title>Marcos Cobeña Morián</title>
<description>I write software to solve people's problems</description>
<link>https://marcoscobena.com</link>
<item>
  <title>Xamarin.Forms XAML: Colors</title>
  <guid>https://marcoscobena.com/?i=xf-xaml-colors</guid>
  <description>&lt;h3&gt;Colors.xaml&lt;/h3&gt;

&lt;p&gt;Every color's placed here: it's super convenient to have all together, it helps us identify repeated ones, for instance. We try to keep them order alphabetically, although it's not a must: simply helps some of us to quickly locate them —in C# we have a drop-down menu just on top of the editor to navigate between members, but currently, VS for Mac at least, doesn't have any similar.&lt;/p&gt;

&lt;p&gt;Conventions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Key: {Identifier}Color for &lt;code&gt;Color&lt;/code&gt; or {Identifier}ColorString for &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Value: lowercase hex format (you can opt for uppercase, but choosing one will keep consistency)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RGB most of the times, although ARGB works pretty well in scenarios where backgrounds are semitransparent, or gradients too&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;```xaml
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ResourceDictionary 
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="XamarinCrumbs.XamarinForms.Colors"&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Color x:Key="AccentColor"&amp;gt;#50e3c2&amp;lt;/Color&amp;gt;
&amp;lt;x:String x:Key="AccentColorString"&amp;gt;#50e3c2&amp;lt;/x:String&amp;gt;

&amp;lt;Color x:Key="DefaultTextColor"&amp;gt;#abb3c8&amp;lt;/Color&amp;gt;

&amp;lt;Color x:Key="SecondaryTextColor"&amp;gt;#868ea4&amp;lt;/Color&amp;gt;

&amp;lt;Color x:Key="WhiteColor"&amp;gt;#ffffff&amp;lt;/Color&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/ResourceDictionary&gt;
```&lt;/p&gt;

&lt;p&gt;You've probably asked your-self why WhiteColor's defined when there's already White in &lt;code&gt;Xamarin.Forms.Color&lt;/code&gt;: sometimes it's intelligent to "duplicate" them for supporting future tonality changes, f.e.&lt;/p&gt;

&lt;p&gt;Moreover, you've seen in above XAML there's the same color twice: it makes sense when you need to consume such for controls like &lt;a href="https://github.com/luberda-molinet/FFImageLoading"&gt;FFImageLoading&lt;/a&gt;'s, which don't accept a &lt;code&gt;Color&lt;/code&gt;, but a &lt;code&gt;string&lt;/code&gt; in hex format.&lt;/p&gt;

&lt;p&gt;Although I've personally prefered naming colors by their actual value (LightGreenColor, for example), I've ended up choosing those which give a hint on where they're applied: DefaultTextColor, SeparatorColor, things like these.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS.&lt;/em&gt;: On 2017 I wrote this small thing, &lt;a href="?i=abanico-a-few-hours-with-xamarin-forms-and-skiasharp"&gt;Abanico&lt;/a&gt;, to understand how color wheels work. It's Xamarin.Forms too, with SkiaSharp:&lt;/p&gt;

&lt;p&gt;&lt;img src="items/images/jun-21-2017-22-47-38.gif" alt="" /&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 09 Oct 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Xamarin.Forms XAML</title>
  <guid>https://marcoscobena.com/?i=xf-xaml</guid>
  <description>&lt;p&gt;In the same way we continuously refactor our C# code we should trait XAML one equally. As we layout screens there uses to be pieces which can be reused here and there. After some years working with Xamarin.Forms —plus some more with WPF and co.— I've learnt from others, and my own experience, how to scaffold good XAML which maintains its good shape as time goes by.&lt;/p&gt;

&lt;p&gt;Split into chapters, I'll try to cover everything expressed in XAML:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="?i=xf-xaml"&gt;"StyleCop" for XAML and App structure (this one)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="?i=xf-xaml-colors"&gt;Colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Control Templates&lt;/li&gt;
&lt;li&gt;Converters&lt;/li&gt;
&lt;li&gt;Font Styles&lt;/li&gt;
&lt;li&gt;Global Styles&lt;/li&gt;
&lt;li&gt;Sizes&lt;/li&gt;
&lt;li&gt;Styles&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;"StyleCop" for XAML&lt;/h3&gt;

&lt;p&gt;Nowdays, I don't know anything which checks styling in XAML files —haven't spent much time looking for to be honest. However, each one of us has a different way of writting XAML. Also, Visual Studio applies different formatting in Windows and macOS. For all this, it's not difficult to end up having a mix of styles when the project grows.&lt;/p&gt;

&lt;p&gt;XAML's a much easier language to define than C#, so are the rules I try to follow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;One attribute per line —we call this Merge-friendly XAML. The main reason's just that: merges are easier to handle when changes appear per line, instead of having to look which attribute/s were changed among a bunch;

&lt;ol&gt;
&lt;li&gt;As an exception to this rule we like to write &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Key&lt;/code&gt; ones in the same line where the control's defined&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;120 chars per line; it helps us work with multiple files openned as columns.&lt;/li&gt;
&lt;li&gt;Empty lines around controls' XML nodes: look below how &lt;code&gt;Label&lt;/code&gt; breezes inside the &lt;code&gt;ContentView&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This' an example following above rules:&lt;/p&gt;

&lt;p&gt;```xaml
&lt;ContentView
    VerticalOptions="Start"&gt;
    &lt;ContentView.Padding&gt;
        &lt;Thickness
            Top="{StaticResource DefaultMargin}"
            Right="{StaticResource DefaultMargin}"
            Bottom="{StaticResource DefaultMargin}"/&gt;
    &lt;/ContentView.Padding&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Label x:Name="theLabel"
    Text="{Binding Key}"
    Style="{StaticResource 20BoldFontStyle}"
    TextColor="{StaticResource WhiteColor}"/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/ContentView&gt;
```&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update (4/10/2018):&lt;/strong&gt; Daniel Martín's recommended through &lt;a href="https://twitter.com/danimart1991/status/1047735254046453761"&gt;this tweet&lt;/a&gt; to have a look to &lt;a href="https://github.com/Xavalon/XamlStyler"&gt;XamlStyler&lt;/a&gt;: although it's focused on VS on Windows, they provide a CLI through NuGet which could fit under macOS.&lt;/p&gt;

&lt;h3&gt;App.xaml&lt;/h3&gt;

&lt;p&gt;At the opposite of what we'd think, I've found better with time to leave this file "empty". The quotes mean it's actually not empty, but blends other sources which do have XAML of value inside.&lt;/p&gt;

&lt;p&gt;This, for example, is a typical App.xaml:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xaml
&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;Application 
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:XamarinCrumbs.XamarinForms"
    x:Class="XamarinCrumbs.XamarinForms.App"&amp;gt;
    &amp;lt;Application.Resources&amp;gt;
        &amp;lt;ResourceDictionary&amp;gt;
            &amp;lt;ResourceDictionary.MergedDictionaries&amp;gt;
                &amp;lt;local:Colors /&amp;gt;
                &amp;lt;local:ControlTemplates /&amp;gt;
                &amp;lt;local:Converters /&amp;gt;
                &amp;lt;local:FontStyles /&amp;gt;
                &amp;lt;local:GlobalStyles /&amp;gt;
                &amp;lt;local:Sizes /&amp;gt;
                &amp;lt;local:Styles /&amp;gt;
            &amp;lt;/ResourceDictionary.MergedDictionaries&amp;gt;
        &amp;lt;/ResourceDictionary&amp;gt;
    &amp;lt;/Application.Resources&amp;gt;
&amp;lt;/Application&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Whoever may open this file for the first time will quickly know how stuff's placed within the project.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 04 Oct 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Xamarin.Forms Design Framework</title>
  <guid>https://marcoscobena.com/?i=Xamarin-Forms-Design-Framework-b23a2f12cce5</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Xamarin.Forms Design Framework&lt;/p&gt;

&lt;p&gt;In my personal trip to leverage all those small problems I found in my day to day, there’s one which sistematically reappears: I’m about to…   --------&lt;/p&gt;

&lt;h3&gt;Xamarin.Forms Design Framework&lt;/h3&gt;

&lt;p&gt;In my personal trip to leverage all those small problems I found in my day to day, there’s one which sistematically reappears: I’m about to start a new Xamarin.Forms project for X platforms — please note the plural — but just have its design for one of them. For instance: I want my app to target Android &amp;amp; iOS, but just have the Android design.&lt;/p&gt;

&lt;p&gt;The reasons why this happen would give for a different thread but I feel them as an homogeneus mix of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Xamarin.Forms’ missunderstood, or we didn’t explain it quite well: it’s felt like Flutter — it appeared! — when it’s not&lt;/li&gt;
&lt;li&gt;We don’t want to increase the time and money by spending a few more days with the rest of designs, for one reason or another we don’t see its valueI’ve been thinking a lot on this and nowadays have a strong opinnion which proposes one possible exit:&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;Xamarin.Forms Design Framework&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Most of the times, when I’m working with a Zeplin project for a Forms app, the first servers as a handful guide of margins/paddings, sizes and colors. It’s not so much whether the status bar has a particular background color, or the button has any tweak which makes it look different. Obviously, those are things which in the end need to be done, but aren’t at the top of value.&lt;/p&gt;

&lt;p&gt;Imagine we had something like &lt;a href="http://design.xamarin.com"&gt;http://design.xamarin.com&lt;/a&gt; where our Designers could head on and learn without the first scroll what actually Xamarin.Forms’ all about. In their language.&lt;/p&gt;

&lt;p&gt;After this, it could propose a Design Framework which would isolate from platform specifics and would concentrate on letting Designers express our apps in an agnostic way. A quick example to explain this: a button in such Framework would be a flat box with text inside: as a Developer, I can gather its width &amp;amp; height, its relative position to the parent view, margins with close controls, padding with its internal title and even its font size &amp;amp; color, which could also be done latter by Platform Translators.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/1000/0*t7UJdpwx2KGsTC1N" alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/@halgatewood?utm_source=medium&amp;amp;utm_medium=referral"&gt;Hal Gatewood&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;br /&gt;
Platform Translators are the pieces which our Designer could fulfill to tell us how buttons should look like in iOS, in a closer aspect, or which’s the predominant font family to use in Android.&lt;/p&gt;

&lt;p&gt;Such Design Framework could be seen as an imaginary device which focuses on wireframing, and then could have it’s Forms backend, letting us express the UIs internally with XAML.&lt;/p&gt;

&lt;p&gt;Even more, all this also sets the scenario up for something like a WYSIWYG editor, where XAML brights, now yes, serving as a bridge where Designers and Developers can interact. XAML was conceived with this in mind more than a decade ago but the reality is it’s heavily focused on just Developers. Let’s change this.&lt;/p&gt;

&lt;p&gt;Designers could have templates for Sketch or PhotoShop where every control is just there to drag &amp;amp; drop into their designs, in the same way there are toolkits for the most known platforms.&lt;/p&gt;

&lt;p&gt;The truth’s we are moving into an ecosystem where our apps can be mobile or desktop or cloud, but such can’t only rely in the Development side. If we don’t make our Designers happier — with its direct impact on the later development — we’ll keep having a very beatiful app on X, with a “free” version on Y and Z.&lt;/p&gt;

&lt;p&gt;And the best: there’s nothing to change on Forms. There’s nothing dependant on development tools, or SDKs. Sketching’s nothing new. It’s more of a mind change.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 10 Jun 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Fri 6: Sum up &amp;amp; fuget.org</title>
  <guid>https://marcoscobena.com/?i=Fri-6--Sum-up---fuget-org-defecbf27385</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Fri 6: Sum up &amp;amp; fuget.org&lt;/p&gt;

&lt;p&gt;The end of the week’s here and summing up what have worked on these days, most of time’s been reading other’s source code. Years ago I may…   --------&lt;/p&gt;

&lt;h3&gt;Fri 6: Sum up &amp;amp; fuget.org&lt;/h3&gt;

&lt;p&gt;The end of the week’s here and summing up what have worked on these days, most of time’s been reading other’s source code. Years ago I may have received this task as OK… I’ll do it; nowadays, I see it as a great opportunity to learn how others do the same I daily do.&lt;/p&gt;

&lt;p&gt;My mate Javi Suárez’s just introduced me the latest Frank Krueger’s joy: &lt;a href="http://www.fuget.org"&gt;fuget.org&lt;/a&gt;. It’s immediately came to my mind the idea of picking just those portions of NuGet packages you’re actually interested on and go ahead.&lt;/p&gt;

&lt;p&gt;I’ve multiple times had the idea of something simpler than NuGet, but more complex than pasting classes here and there —and stronger by the way. Something similar to JavaScript’s NPM, but maybe having code in IL —have to work the idea out a little bit.&lt;/p&gt;

&lt;p&gt;(Take into account I wrote this while listening to this “Peaceful Meditation” list at Spotify: )&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 05 Apr 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Thu 5: Analysing an app written by others</title>
  <guid>https://marcoscobena.com/?i=Thu-5--Analysing-an-app-written-by-others-ab9c50246d5a</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Thu 5: Analysing an app written by others&lt;/p&gt;

&lt;p&gt;From Wednesday to Friday I’ll be working on an analysis of a Xamarin.Forms app to detect those places where performance can be gained and…   --------&lt;/p&gt;

&lt;h3&gt;Thu 5: Analysing an app written by others&lt;/h3&gt;

&lt;p&gt;From Wednesday to Friday I’ll be working on an analysis of a Xamarin.Forms app to detect those places where performance can be gained and which actions can be performed to mitigate such. It’s a production app which serve as the entry point to an entire business, thus awesome to have the chance to work on this.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/0*vbffrCWTz924jPae." alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/@jilburr?utm_source=medium&amp;amp;utm_medium=referral"&gt;Jilbert Ebrahimi&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;It came up to my mind a talk Federico Mena spent a few years ago —maybe more than a few— on how to start developing software: read what others write. Although I won’t be actually writing within these days am learning different ways of doing things, and really cool ones.&lt;/p&gt;

&lt;p&gt;In the other side, it’s curious how we all have similar issues, which in the end are even more important and low level, such us deciding whether navigation happens just after tapping and the destiny loads on the demand, or first load everything and then navigates.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Oh, and one great productivity tip! I’ve finally discovered how can hide macOS’ badges —I was actually interested in hiding Outlook’s unread messages one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://apple.stackexchange.com/questions/163490/quickly-remove-badge-from-app"&gt;&lt;strong&gt;Quickly remove badge from app&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;Is it possible to quickly remove a notification badge from an app in the Dock? I'm looking for a solution faster than…&lt;/em&gt;apple.stackexchange.com&lt;/a&gt;&lt;a href="https://apple.stackexchange.com/questions/163490/quickly-remove-badge-from-app"&gt;&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 04 Apr 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Wed 4: Meetings</title>
  <guid>https://marcoscobena.com/?i=Wed-4--Meetings-2556117737e8</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Wed 4: Meetings&lt;/p&gt;

&lt;p&gt;I’ve spent almost the entire day with meetings.   --------&lt;/p&gt;

&lt;h3&gt;Wed 4: Meetings&lt;/h3&gt;

&lt;p&gt;I’ve spent almost the entire day with meetings.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/0*Ce9giJMX6AhHyiLo." alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/@dylandgillis?utm_source=medium&amp;amp;utm_medium=referral"&gt;Dylan Gillis&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;In the morning the app review, where learnt [again] such interactions need to happen more often: not every customer has the same needs, although we’re all humans in the end and communication’s the best tool in earth to round corners.&lt;/p&gt;

&lt;p&gt;In the afternoon, had the same on Wave Engine, where I didn’t finish the GTK# component to CRUD animation curves —similar to the one Unity bundles with the editor. This month Sergio and I’ll finish such, and work to remove Stetic files since the rename to VS for Mac Xamarin Studio’s no longer available for Windows thus Stetic visual editor goes the same.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 03 Apr 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Tue 3: Multiple instances of the same ViewModel</title>
  <guid>https://marcoscobena.com/?i=Tue-3--Multiple-instances-of-the-same-ViewModel-5e696e8dd793</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Tue 3: Multiple instances of the same ViewModel&lt;/p&gt;

&lt;p&gt;I have another issue of multiple instances of the same ViewModel live at the same time. Basically am navigating to the same page —after…   --------&lt;/p&gt;

&lt;h3&gt;Tue 3: Multiple instances of the same ViewModel&lt;/h3&gt;

&lt;p&gt;I have another issue of multiple instances of the same ViewModel live at the same time. Basically am navigating to the same page —after having some others in the middle— through 1) InsertPageBefore() and 2) PopToRoot().&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/0*atYJhzXMB636j8nr." alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/@creativeexchange?utm_source=medium&amp;amp;utm_medium=referral"&gt;The Creative Exchange&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;Xamarin Profiler’s always helped me sort those things out, and turns out haven’t used it lately, and after taking some snapshots I see the instances decrease to just 1. However, remember those snapshots force a GC’s collect, and &lt;a href="https://forums.xamarin.com/discussion/comment/322352/#Comment_322352"&gt;that way it’s&lt;/a&gt;. So, it turns out this’ a wonderful fast way to detect whether your VM’s actually referenced.&lt;/p&gt;

&lt;p&gt;Wasn’t there a way to see the back references for a given instance? My main concern isn’t having multiple instances live (which too), but the multiple navigations happening because of same code being executed on those places.&lt;/p&gt;

&lt;p&gt;Such VM’s a more elaborated flavor of this one —with a cancellation token to “assure” the loop is endless:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/MarcosCobena/XamarinFormsVisualStates/blob/master/XamarinFormsVisualStates/NFCViewModel.cs"&gt;&lt;strong&gt;MarcosCobena/XamarinFormsVisualStates&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;XamarinFormsVisualStates - Another approach to Visual States in Xamarin.Forms&lt;/em&gt;github.com&lt;/a&gt;&lt;a href="https://github.com/MarcosCobena/XamarinFormsVisualStates/blob/master/XamarinFormsVisualStates/NFCViewModel.cs"&gt;&lt;/a&gt;&lt;br /&gt;
Surely, the cancellation isn’t happening…&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 02 Apr 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Mon 2: Polly’s Retry policy to make network calls</title>
  <guid>https://marcoscobena.com/?i=Mon-2--Polly-s-Retry-policy-to-make-network-calls-224d70957b2c</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Mon 2: Polly’s Retry policy to make network calls&lt;/p&gt;

&lt;p&gt;The last day I picked a task to move some ops. from local to the cloud —there’s already an API for that.   --------&lt;/p&gt;

&lt;h3&gt;Mon 2: Polly’s Retry policy to make network calls&lt;/h3&gt;

&lt;p&gt;The last day I picked a task to move some ops. from local to the cloud —there’s already an API for that.&lt;/p&gt;

&lt;p&gt;And &lt;a href="https://github.com/App-vNext/Polly"&gt;Polly&lt;/a&gt; came to my mind. Don’t remember where but discovered it a few months ago through Planet Xamarin. Basically the app needs to send some sensible data “through the wire” and show the results; however, it can be possible there’s no network at such time.&lt;/p&gt;

&lt;p&gt;So ended up using Polly’s Retry policy: “I want this call to be executed and, if anything fails, retry up to 3 times”. And this’ the code for exactly that:&lt;/p&gt;

&lt;p&gt;My mate Juan asked me whether Polly can handle different paths for different exceptions, and it &lt;a href="https://github.com/App-vNext/Polly/issues/104"&gt;looks feasible&lt;/a&gt;, although haven’t tried for my-self.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 01 Apr 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Wed 28: One approach to Visual States</title>
  <guid>https://marcoscobena.com/?i=Wed-28--One-approach-to-Visual-States-730813111718</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Wed 28: One approach to Visual States&lt;/p&gt;

&lt;p&gt;After struggling a few times with animations that respond to ViewModel changes in Xamarin.Forms —and while official Visual States arrive to…   --------&lt;/p&gt;

&lt;h3&gt;Wed 28: One approach to Visual States&lt;/h3&gt;

&lt;p&gt;After struggling a few times with animations that respond to ViewModel changes in Xamarin.Forms —and while official Visual States arrive to stable— I started my own road to solve this particular issue: how to storyboard animations.&lt;/p&gt;

&lt;p&gt;Originally worked on this during last Christmas, as part of a point &amp;amp; click demo where had some sort of scripting logic. After that, I iterated it for the NFC view the current app am working on has. And, finally, for the same app, with the help of my mate Sergio, iterated it again to make it a little bit more elegant to use.&lt;/p&gt;

&lt;p&gt;I think it’s worth sharing. Basically, your ViewModels inherit IStateNotifier and pages IStateNotified, adding also to this last StateNotificationBehavior. With permission from our Designer, I’ve pulled just the NFC resources from above app to showcase what I can do nowadays.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*9o5SWTFk_2kBtKPKcGVAhQ.gif" alt="" /&gt;&lt;br /&gt;
Full storyboard runningAm really open to improve all this. During the last two weekends I’ve been reading Adam Pedley’s &lt;a href="https://xamarinhelp.com/more-functional-viewmodels-in-xamarin-forms-with-c/"&gt;series on functional ViewModels&lt;/a&gt;, and liked his approach of moving the states notion to just the view —this’ currently sorted out in VMs here. My main goal is performance, as my current scenarios involve a lot of bindings and the animations struggle a little bit, but please feel free to share any idea.&lt;/p&gt;

&lt;p&gt;You can find the repo &lt;a href="https://github.com/MarcosCobena/XamarinFormsVisualStates"&gt;here&lt;/a&gt;, including the sample app.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 27 Mar 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Tips &amp;amp; tricks to rely in VirtualBox</title>
  <guid>https://marcoscobena.com/?i=Tips---tricks-to-rely-in-VirtualBox-e9e28c8cd180</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Tips &amp;amp; tricks to rely in VirtualBox&lt;/p&gt;

&lt;p&gt;During the last years my VM needs were so much covered by Parallels and VMWare. Both are super reliable and, obviously, imply a cost. In…   --------&lt;/p&gt;

&lt;h3&gt;Tips &amp;amp; tricks to rely in VirtualBox&lt;/h3&gt;

&lt;p&gt;During the last years my VM needs were so much covered by Parallels and VMWare. Both are super reliable and, obviously, imply a cost. In that time too I’ve tried several times &lt;a href="https://www.virtualbox.org"&gt;VirtualBox&lt;/a&gt;, but always ended in the virtual HD corrupted so losing all inside. No good.&lt;/p&gt;

&lt;p&gt;One month ago I gave it again a try. And, don’t want to say it loudly, have had zero issues from then. Moreover, I think don’t need the other solutions anymore.&lt;/p&gt;

&lt;p&gt;VirtualBox’ a little bit more manual, and doesn’t have the Parallels mode where guest’ OS blends with host one —Coherence?; however, with some good tips, covers all my daily needs. Take into account am a macOS user which need Windows 10 virtualized, mostly to develop.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/0*bLpady9U79BnuGYf." alt="" /&gt;&lt;br /&gt;
“Two people in elegant shirts brainstorming over a sheet of paper near two laptops” by &lt;a href="https://unsplash.com/@helloquence?utm_source=medium&amp;amp;utm_medium=referral"&gt;Helloquence&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;So, the tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After trying the different options, the most I feel comfortable with is having the VM window at its maximum size to fit screen bounds —not maximized as macOS understand. In that case, pressing CMD once and moving to other desktops with CTRL + ←/→ feels nice —forgot to mention I commonly use three virtual desktops: main work, VM and Spotify 😎&lt;/li&gt;
&lt;li&gt;Maybe it’s because of my previous experiences, but I try to shut down the VM with Start, Shut down… I know am losing the magic pause options VM use to have, but gives more confidence the other way around&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;VM VirtualBox Extension Pack&lt;/a&gt;’s a must. I needed that to support USB sticks but know it empowers the guest in some other ways tooI’m sure forgetting something but will continue editing this as it comes to my mind. If you have any other tip please share it as well —thanks in advance!&lt;/li&gt;
&lt;/ul&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 22 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Thu, 22: Charles with Android, VirtualBox’ HD size &amp;amp; UWP debugging</title>
  <guid>https://marcoscobena.com/?i=Thu--22--Charles-with-Android--VirtualBox--HD-size---UWP-debugging-284998a21a5e</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Thu, 22: Charles with Android, VirtualBox’ HD size &amp;amp; UWP debugging&lt;/p&gt;

&lt;p&gt;As part of changing endpoints at eShopOnContainers solution I wanted to double check every request was being received correctly, so came…   --------&lt;/p&gt;

&lt;h3&gt;Thu, 22: Charles with Android, VirtualBox’ HD size &amp;amp; UWP debugging&lt;/h3&gt;

&lt;p&gt;As part of changing endpoints at eShopOnContainers solution I wanted to double check every request was being received correctly, so came back to Charles Proxy.&lt;/p&gt;

&lt;p&gt;I rely on official Android emus so found out a &lt;a href="https://dzone.com/articles/charles-proxy-in-android-emulator"&gt;nice article&lt;/a&gt; to configure everything so Charles can detect the communication happening within the emu.&lt;/p&gt;

&lt;p&gt;The bad thing’s I was getting ERR&lt;em&gt;INCOMPLETE&lt;/em&gt;CHUNKED_ENCODING errors inside the emu so had to manually hook every HTTP response in the old less-fashioned way: breakpoints. (Any hint on that error and how to sort it out would be really appreaciated.)&lt;/p&gt;

&lt;p&gt;Once everything was done —in macOS with VS for Mac— I switched to Windows, so can test UWP too. I’m having a really good experience with VirtualBox this time by the way—am thinking of publishing some notes with tips &amp;amp; tricks.&lt;/p&gt;

&lt;p&gt;My previous VS 2017 installation lacked Xamarin stuff, but couldn’t go for it because was about to run out of space. Making your HD bigger in VirtualBox’ a little bit hand-made, but nothing too complicated:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Detach your HD image —make sure you stopped the VM in the formal way: Start, Shut down&lt;/li&gt;
&lt;li&gt;Run in a terminal (102400 are MB, so make your own calcs): &lt;em&gt;VBoxManage modifymedium “Windows 10.vdi” — resize 102400&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Attach the HD back again, run it, and open Computer Management&lt;/li&gt;
&lt;li&gt;Within HDs, just expand your current partition to fulfill the rest of available spaceI learnt all of this from &lt;a href="https://www.jesusamieiro.com/how-to-resize-a-virtual-machines-disk-in-virtualbox/"&gt;this article&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=7Aqx-VHv2_k"&gt;this video&lt;/a&gt;; however, it was something like a mix of both which took me to succeed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, trying to debug PCL code with the UWP app, none of my breakpoints were hitting, but my friend Sergio immediately pointed me to the cause: look at that Debugging information piece (set as Full):&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/1000/1*9paf348GHCuucXvSRcLEfQ.png" alt="" /&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 21 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wed, 21: Xamarin Inspector for Forms &amp;amp; NamedSizes</title>
  <guid>https://marcoscobena.com/?i=Wed--21--Xamarin-Inspector-for-Forms---NamedSizes-fea033823240</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Wed, 21: Xamarin Inspector for Forms &amp;amp; NamedSizes&lt;/p&gt;

&lt;p&gt;Was it me the only one in Earth who didn’t know Xamarin Inspector now shows not only the native OS’ UI hierarchy but also Forms one? I was…   --------&lt;/p&gt;

&lt;h3&gt;Wed, 21: Xamarin Inspector for Forms &amp;amp; NamedSizes&lt;/h3&gt;

&lt;p&gt;Was it me the only one in Earth who didn’t know &lt;a href="https://docs.microsoft.com/en-us/xamarin/tools/inspector/"&gt;Xamarin Inspector&lt;/a&gt; now shows not only the native OS’ UI hierarchy but also Forms one? I was struggling with a mysterious margin and BOOM, Inspector showed me the path :-)&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/0*7pMarMbujb1W_lFY." alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/@igorovsyannykov?utm_source=medium&amp;amp;utm_medium=referral"&gt;Igor Ovsyannykov&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;For some reason I thought a control which’s not visible computes its margin even so. But no, as always the issue’s between the monitor and the chair.&lt;/p&gt;

&lt;p&gt;The UI refactoring was finally finished! Phew, after all am super happy with the result, as using a custom font and increasing the entire sizes was a blast.&lt;/p&gt;

&lt;p&gt;On that last piece, I followed the recommendation from yesterday and also my mate Sergio’s one of using Forms’ built-in &lt;a href="https://developer.xamarin.com/api/type/Xamarin.Forms.NamedSize/"&gt;NamedSize&lt;/a&gt;s, where having source code at GitHub really helped understand &lt;a href="https://github.com/xamarin/Xamarin.Forms/blob/b96f65bdd9e7e931971338b122a8940e2a35ccc7/Xamarin.Forms.Platform.Android/Forms.cs#L429"&gt;the underneath calcs&lt;/a&gt; to render its different sizes.&lt;/p&gt;

&lt;p&gt;The app now shines in a 7’’ tablet, running Full HD, but also on more smaller form factors. What I learnt? My next project will start yes or yes with font styles and, if fits, with named sizes and, if fits, with Control Templates, all in this order.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 20 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Tuesday, 20/3/2018</title>
  <guid>https://marcoscobena.com/?i=Tuesday--20-3-2018-f42e8eb10d25</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Tuesday, 20/3/2018&lt;/p&gt;

&lt;p&gt;Yesterday I started a 1–2 days task on Microsoft-Xamarin’s eShopOnContainers solution. I haven’t heard before of this and it’s a really…   --------&lt;/p&gt;

&lt;h3&gt;Tuesday, 20/3/2018&lt;/h3&gt;

&lt;p&gt;Yesterday I started a 1–2 days task on Microsoft-Xamarin’s &lt;a href="https://github.com/dotnet-architecture/eShopOnContainers"&gt;eShopOnContainers&lt;/a&gt; solution. I haven’t heard before of this and it’s a really good opportunity to learn from a globe how to build a full architecture, from client to server sides, made of micro-services —relying on Docker, by the way.&lt;/p&gt;

&lt;p&gt;During the afternoon went a few hours back to my other project, and gave final touches to the XAML refactoring I started last week —moving to Control Templates to simplify styling mostly.&lt;/p&gt;

&lt;p&gt;I had a comment in one of those entries recommending me to rename font-related styles to something like SmallFontStyle, Medium bla bla bla and so on, and is actually a nice idea, as I’m increasing font-sizes maybe today or tomorrow. He pointed me this as a way to put Designers and Developers in the same road, and I totally agree. Thanks Dani for the feedback!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 19 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Playing with Xamarin.Forms for Web</title>
  <guid>https://marcoscobena.com/?i=Playing-with-Xamarin-Forms-for-Web-cde48f1e12b4</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Playing with Xamarin.Forms for Web&lt;/p&gt;

&lt;p&gt;On Saturday I was playing a little bit with Frank’s OOUI, moreover Ooui.Wasm and Forms packages. The first allows to work with web’s DOM…   --------&lt;/p&gt;

&lt;h3&gt;Playing with Xamarin.Forms for Web&lt;/h3&gt;

&lt;p&gt;On Saturday I was playing a little bit with Frank’s &lt;a href="http://ooui.mecha.parts/"&gt;OOUI&lt;/a&gt;, moreover Ooui.Wasm and Forms packages. The first allows to work with web’s DOM from C# running in client side, the second’s a Xamarin.Forms backend for web.&lt;/p&gt;

&lt;p&gt;At home I have a 10 years old PC, with Windows 10 —running to maximize performance, except ClearType, which can’t live without nowadays. With Visual Studio Code, and Frank’s guide, could launch my first “n times clicked!” button.&lt;/p&gt;

&lt;p&gt;I told Frank through Twitter what changes had to do into server.py because I chose Python 3.x and there were some changes, but obviously someone had already noticed that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="https://twitter.com/1Marcos2Cobena/status/975033623308132354"&gt;&lt;/a&gt;
  (Click above to see the entire thread.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because of having my web in GitHub, I commonly rely in &lt;a href="http://www.mono-project.com/docs/web/aspnet/#aspnet-hosting-with-xsp"&gt;Mono’s XSP&lt;/a&gt; web server to test things out before committing. And it works too with Ooui —why not? Posted all this into &lt;a href="https://github.com/praeclarum/Ooui/issues/88"&gt;that issue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was playing with Buttons, Labels, StackLayouts, ActivityIndicators and so on. Also, moving things into an isolated ContentPage and overriding OnAppearing().&lt;/p&gt;

&lt;p&gt;I really liked what I saw. Frank again has done an amazing and beautiful job —since a few years, for me, everything he touches simply rules. My mate Javi Suárez’s already pushed some commits into Ooui to enable more controls too. Today I woke up with the idea of moving &lt;a href="https://play.google.com/store/apps/details?id=com.marcoscobena.buenosdiasaro"&gt;¡Buenos días!&lt;/a&gt; into Forms (fixing the images bug along the way), and thanks to OOUI can finally have the web too.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 18 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>How to centralize font-related styling</title>
  <guid>https://marcoscobena.com/?i=2018-3-15</guid>
  <description>&lt;p&gt;One of the much things you learn when work with different people’s how they
handle those same things you work on. A few weeks ago I spent two or three days
on a Forms app where styles were pretty much taken into serious consideration,
from my point of view.&lt;/p&gt;

&lt;p&gt;I loved how they were handling font-related stuff that have started applying
that approach in mine. It’s quite simple, i.e.:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    &lt;Style x:Key="16FontStyle" TargetType="Label"&gt;
        &lt;Setter Property="FontSize" Value="16" /&gt;
    &lt;/Style&gt;&lt;/p&gt;

&lt;p&gt;    &lt;Style 
        x:Key="16BoldFontStyle" 
        BasedOn="{StaticResource 16FontStyle}" 
        TargetType="Label"&gt;
        &lt;Setter Property="FontAttributes" Value="Bold" /&gt;
    &lt;/Style&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Every &lt;code&gt;Label&lt;/code&gt; consumes these sort of styles. And one of the following tasks have
to work on is replacing the font family, but only have to do that change in a
single place. The same, increasing globally the font size because it feels too
small in some devices.&lt;/p&gt;

&lt;p&gt;How do you handle these things? Have a different approach which feel really
work? I’m sure there’s still plenty of space to grow. Thanks in advance if you
share anything!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 15 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Let's use Control Templates</title>
  <guid>https://marcoscobena.com/?i=2018-3-14</guid>
  <description>&lt;p&gt;I don’t know whether this happens to others as well but I still see my-self
“discovering” new Xamarin.Forms' —actually in general— features as times goes
by. Quoted discovering mostly because [in this case] knew its existence;
however, didn’t apply it on a project of mine before. These all words to talk
about Control Templates.&lt;/p&gt;

&lt;p&gt;In my project there was an initial effort of building the entire UI conforming
current design by those days, and we’ve reached a point where want to generally
increase its font size, but had lots of &lt;code&gt;FontSize=X&lt;/code&gt; everywhere in XAML.&lt;/p&gt;

&lt;p&gt;So, instead of just moving this into styles, I decided to move all that repeated
code into Control Templates, where the &lt;code&gt;TemplateBinding&lt;/code&gt; asteroid came perfect
for me, as we bing stuff to current Page/VM.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 14 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Pushing our-selves into our users' perspective</title>
  <guid>https://marcoscobena.com/?i=2018-3-13</guid>
  <description>&lt;p&gt;Today I’ve finally deployed every NFC tag within our office to actual test the
app. Independently on what our apps are all about, it reaaally helps a lot to
put your-self in the user’s perspective. I mean not only using the app on a real
device with a fake user or with fake data, but having to solve a real goal.&lt;/p&gt;

&lt;p&gt;It’s funny because this’ not a common scenario have found out within the last
years developing apps, sometimes because of our side —simply there’s no trigger
to do that—, sometimes because of the business in place —working on a bank app
you cannot real test it so easily, you know.&lt;/p&gt;

&lt;p&gt;However, today I’ve felt it’s actually another face of the polygon we,
developers, need to put care on: pushing our customers to prepare the field to
move us a little bit more inside too, and pushing our-selves to see the value of
doing this, even it’s another time-consuming point.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 13 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Cannot connect to local IIS Express</title>
  <guid>https://marcoscobena.com/?i=2018-3-12</guid>
  <description>&lt;p&gt;Hmm, when I’ve gone to locally debug my ASP.NET site which provides the API to
my app, a got an alert saying something like We couldn’t connect to the local
IIS Express server. Luckily,
&lt;a href="https://stackoverflow.com/a/36801686"&gt;StackOverflow’s&lt;/a&gt; always there when you
need it. I’d just add needed to run VS as Admin.&lt;/p&gt;

&lt;p&gt;Most of my day has consisted on writing SQL queries to build a new scenario
within our app, and I’ve missed a looot a way of friendly writing this in Excel
maybe? but having the SQL back for “free”. Any ideas on existing stuff is
reaaally welcomed.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 12 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Gathering Android's density &amp; Entity Framework's CLI</title>
  <guid>https://marcoscobena.com/?i=2018-3-9</guid>
  <description>&lt;p&gt;Yesterday we had our customer at office in order to review how the project’s
going on. He told us which’s the final device our app will run on.&lt;/p&gt;

&lt;p&gt;Creating a new emulator with Xamarin’s Android Devices gem —I’ve been using it
almost daily during the last months and works quite good &amp;amp; stable— I wanted to
set the most similar properties to the actual one, and with density didn’t
really know its value: however, knew the diagonal and screen size in px so &lt;a href="http://kingscalculator.com/en/other-calculators/pixel-density-calculator"&gt;this
calculator&lt;/a&gt;
gave me the density.&lt;/p&gt;

&lt;p&gt;In other aspects, I’ve been updating our database schema so had to work with
Entity Framework’s CLI, where my friend Sergio helped a lot: for the record,
these are the commands I used from PowerShell:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS YourCSProjInChargeOfDB&amp;gt; dotnet ef migrations list
PS &amp;gt; dotnet ef migrations list --context AContext
PS &amp;gt; dotnet ef migrations add ANewMigration
PS &amp;gt; dotnet ef database update --context AContext
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 11 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Using again my sort of Visual State management</title>
  <guid>https://marcoscobena.com/?i=2018-3-6</guid>
  <description>&lt;p&gt;Today I’ve doing a variety of things from contacting one of our customers,
estimating an incoming project tooo actually work on a task from the first one.&lt;/p&gt;

&lt;p&gt;Basically needed to add a sort of loading state to a summary view which pulls
the results from the API, thus we don’t want success/failure banners to show
before, mostly to avoid a heart attach in our users.&lt;/p&gt;

&lt;p&gt;&lt;a href="/?i=2018-2-8"&gt;One month ago&lt;/a&gt; I wrote down my own version of a "Visual State"
management which, from my point of view, simplifies the known version from
WPF/Windows 8 aaand gives fine control over the storyboard to execute,
everything with a minimal footprint and already usable on current Xamarin.Forms
stable version.&lt;/p&gt;

&lt;p&gt;So have done the fade in using above stuff, and liked how it still feels
comfortable and solves the need quite well :-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 06 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>VS for Mac bugs &amp; LiteDB learning</title>
  <guid>https://marcoscobena.com/?i=2018-3-5</guid>
  <description>&lt;p&gt;I’ve started the day filling two bugs with VS for Mac had written down last
week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=60722"&gt;https://bugzilla.xamarin.com/show_bug.cgi?id=60722&lt;/a&gt; —the area to choose a
device at toolbar wasn’t aligned with its corresponding touch one, but seems
fixed and ready for 7.4!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=61249"&gt;https://bugzilla.xamarin.com/show_bug.cgi?id=61249&lt;/a&gt; —didn’t found any other
one previously and particularly find this so useful: enabling direct search
when pasting into CMD+. search bar&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My mate Juan called me during the morning to show a small but nice refactoring
on the data layer of the app I was working on with them last week. He moved from
SQLite to &lt;a href="https://github.com/mbdavid/LiteDB"&gt;LiteDB&lt;/a&gt;, mostly because there was
no need for relational data, and SQLite was much more than actually needed.&lt;/p&gt;

&lt;p&gt;I particularly moved my point of view during last years from having a shared
start-up project for incoming needs into spending a few days at the beginning
thinking what actually suits better for that current reality; for many reasons:
control over codebase, growing bottom-up, etc. It’s also a good approach in
life: going shopping because of a need instead of going shopping looking for
what we may need. The second always takes to unneeded stuff.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 05 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Back with Wave Engine &amp; some Visual Studio for Mac bugs</title>
  <guid>https://marcoscobena.com/?i=2018-3-1</guid>
  <description>&lt;p&gt;Today I’ve been back to collaborating with Wave Engine (yay!) I’ve been
assigned, along with my friend &amp;amp; mate Sergio, the easing curves component in
Gtk#. Sergio had already done an amazing job by including a maths library which
calcs derivatives in a fraction of time. And the component already looks
gorgeous.&lt;/p&gt;

&lt;p&gt;Oh, and filled/added more info on a few bugs in Visual Studio for Mac:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=60281"&gt;https://bugzilla.xamarin.com/show_bug.cgi?id=60281&lt;/a&gt; —ALT + Up/down arrows
change spaces for tabs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=59973"&gt;https://bugzilla.xamarin.com/show_bug.cgi?id=59973&lt;/a&gt; —clicking on a search
result doesn’t take to the specific line in XAML files&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I like a lot this product from Xamarin (have been using it since SharpDevelop
👴) and would like it to shine on those small things I find on my daily job. If
you’re in the same position, go on and help your favorite products become even
better! It’s only a bit of your time compared with how much you gain using it.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 01 Mar 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>SQLite &amp; Material Design Frames on iOS</title>
  <guid>https://marcoscobena.com/?i=2018-2-27</guid>
  <description>&lt;p&gt;Today I’ve needed to debug how our DB is physically created —tables and PKs— and
Pulido (thanks man!) told me to enable tracing so every query gets printed (we
found it
&lt;a href="http://igrali.com/2015/03/12/output-sqlite-queries-using-sqlite-net-in-universal-apps/"&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;connection = new SQLiteAsyncConnection(DatabasePath) { Trace = true };&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Our app uses Material Design card views here and there, and we already have a
custom &lt;code&gt;Frame&lt;/code&gt; which disables shadows on iOS because of default ones are quite
dark and wide. Between
&lt;a href="https://alexdunn.org/2017/05/01/xamarin-tips-making-your-ios-frame-shadows-more-material/"&gt;this&lt;/a&gt;
Alex Dunn’s article,
&lt;a href="https://medium.com/material-design-for-ios/part-1-elevation-e48ff795c693"&gt;this&lt;/a&gt;
other one on moving elevation to iOS and
&lt;a href="https://stackoverflow.com/questions/9761189/whats-the-best-way-to-add-a-drop-shadow-to-my-uiview"&gt;this&lt;/a&gt;
last one on applying shadows to &lt;code&gt;UIView&lt;/code&gt; we got almost identical shadows on both
platforms. Yeah!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 28 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>xUnit &amp; SQLite</title>
  <guid>https://marcoscobena.com/?i=2018-2-26</guid>
  <description>&lt;p&gt;On past Friday I found a bug in the screen was working related to how things are
stored in the DB —SQLite, actually. My mates had already done an Unit Testing
project, powered by xUnit, so have gone in and added a test which reproduces my
issue.&lt;/p&gt;

&lt;p&gt;To be honest, I come from NUnit. Doing pair programming with a new workmate who
have joined the company today, we found out &lt;a href="https://xunit.github.io/docs/comparisons.html"&gt;this comparison
table&lt;/a&gt; which answered to my
scaffolding questions —and I’ve liked a lot how xUnit makes things simpler, i.e.
using &lt;code&gt;IDisposable.Dispose()&lt;/code&gt; for the tear down.&lt;/p&gt;

&lt;p&gt;Talking about the disposing, we want the DB to be reset prior to any test run,
and initially dropped the DB file with &lt;code&gt;System.IO.File&lt;/code&gt; helpers. Obviously this
went into a race condition where SQLite throws some read-only exceptions and
&lt;a href="https://github.com/oysteinkrog/SQLite.Net-PCL/issues/264"&gt;this thread&lt;/a&gt; helped
us to solve it —a simple “VACUUM” and done.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 26 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>FFImageLoading's SVGCachedImage &amp; converters chaining</title>
  <guid>https://marcoscobena.com/?i=2018-2-22</guid>
  <description>&lt;p&gt;After enjoying so much crafting a screen, today I’ve worked on the small details
and continued with bindings.&lt;/p&gt;

&lt;p&gt;We have SVGs everywhere, and tint those on demand. I’ve wanted to style some to
avoid duplicate XAML here and there but this specifically doesn’t seem to work
with FFImageLoading’s &lt;code&gt;SvgCachedImage&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    &lt;Style x:Key="24By24BlueSvgImageStyle" TargetType="svg:SvgCachedImage"&gt;  
        &lt;Setter Property="HeightRequest" Value="24" /&gt;  
        &lt;Setter Property="WidthRequest" Value="24" /&gt;  
        &lt;Setter Property="Transformations"&gt;  
            &lt;Setter.Value&gt;  
                &lt;collection:List x:TypeArguments="{x:Type svgwork:ITransformation}"&gt;  
                    &lt;transformations:TintTransformation  
                        HexColor="{StaticResource HexLightBlueColor}"  
                        EnableSolidColor="true" /&gt;  
                &lt;/collection:List&gt;  
            &lt;/Setter.Value&gt;  
        &lt;/Setter&gt;  
    &lt;/Style&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;(This exact approach happened after trying the simplest ones, like having the
&lt;code&gt;TintTransformation&lt;/code&gt; directly as child of the &lt;code&gt;Setter&lt;/code&gt;’s &lt;code&gt;Value&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;I think this’ a bug on such control, so will fill it just in case.&lt;/p&gt;

&lt;p&gt;Finally, I’ve found a solution for converters chaining, where I needed a
&lt;code&gt;!Any(list)&lt;/code&gt; operation:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    &lt;converters:ValueConverterGroup x:Key="NotAnyConverter"&gt;  
        &lt;converters:AnyConverter /&gt;  
        &lt;converters:InverseBoolConverter /&gt;  
    &lt;/converters:ValueConverterGroup&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;Above magic comes from
&lt;a href="https://gist.github.com/QiMata/b674d8b5a9e8a65910c9"&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 22 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Git-LFS &amp; CarouselView &amp; Xamarin.Forms Chrome's shortcut</title>
  <guid>https://marcoscobena.com/?i=2018-2-21</guid>
  <description>&lt;p&gt;Today I’ve started to help in a new project where Design is quite strict —which
I like 🤘&lt;/p&gt;

&lt;p&gt;Cloning the repo, it’s set up with Git-LFS and I moved to SSH keys a month ago
or so. However, &lt;a href="https://github.com/git-lfs/git-lfs/issues/2186"&gt;LFS only works through
HTTPS&lt;/a&gt; so back to alternate
credentials. All of this within Visual Studio Team Services.&lt;/p&gt;

&lt;p&gt;The screen am working on starts with a carousel —a carousel!— and
&lt;a href="https://github.com/alexrainman/CarouselView"&gt;CarouselView&lt;/a&gt; fits perfectly. I’ve
only missed properties to customize its page selectors’ margin, but it’s not so
so important.&lt;/p&gt;

&lt;p&gt;What I can’t believe is how the hell have lived without this Chrome shortcut
—guess can be replicated in any other browser too:&lt;/p&gt;

&lt;p&gt;&lt;img src="items/images/XamarinFormsChromeSearch.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Instead of typing once and again “xamarin.forms “ and whatever now simply “xf” +
TAB and whatever. I’m so proud of this 🤠&lt;/p&gt;

&lt;p&gt;Finally, I’ve tried &lt;code&gt;RelativeLayout&lt;/code&gt; once again buuut keep thinking’s somewhat
useless when things can grow up hor. or ver. (i.e. a &lt;code&gt;Label&lt;/code&gt; with +1 line). Know
could do it by code, but after using LiveXAML’s difficult to switch back 🤷‍♂️&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 21 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>SVGs in Xamarin.Forms &amp; Git's cherry picking</title>
  <guid>https://marcoscobena.com/?i=2018-2-20</guid>
  <description>&lt;p&gt;It may sound strange but today’s been my welcome into using SVGs in
Xamarin.Forms, and FFImageLoading’s helped a lot —have some mates here which are
already heavily using it.&lt;/p&gt;

&lt;p&gt;If you’re in the same position as me, read
&lt;a href="https://github.com/luberda-molinet/FFImageLoading/wiki/SVG-support"&gt;this&lt;/a&gt;
before going on, as needs some setup. I experienced the same issue as &lt;a href="https://github.com/luberda-molinet/FFImageLoading/issues/914"&gt;this
user&lt;/a&gt; but ended up
sorting it out —read my comment at bottom.&lt;/p&gt;

&lt;p&gt;Honestly, I think will try to, from today, add every asset as SVG since Zeplin,
for instance, supports that export option, and you avoid messing with Android’s
densities, iOS' &lt;code&gt;@Nx&lt;/code&gt;, etc.; giving our users the best result in their screens.&lt;/p&gt;

&lt;p&gt;The only thing which worries me’s that FFImageLoading depends on SkiaSharp for
drawing SVGs, and read some months ago each time you work with a Skia’s canvas
the amount of memory reserved corresponds to a bitmap of screen size. But
probably FFImageLoading already handles this.&lt;/p&gt;

&lt;p&gt;In other aspects, at the end of the day committed my changes, and pushed them,
buuut discovered a bug I introduced with a few files changed. After reverting
that commit for two (2) times, discovered you can cherry-pick a commit and don’t
commit it back again, but leave it at staging, so you simply can reset here and
there:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git cherry-pick -n PROBLEMATIC_COMMIT_HASH&lt;/code&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 20 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Connecting your app with an ASP.NET API running on a local VM</title>
  <guid>https://marcoscobena.com/?i=2018-2-19</guid>
  <description>&lt;p&gt;My current project involves an ASP.NET server side with both a small web and its
API. I needed to debug things locally to go faster, thus wanted to connect my
app in macOS to the API in my virtualized Windows 10. In order to access such
endpoint
&lt;a href="https://stackoverflow.com/questions/35247847/bad-request-invalid-hostname-asp-net-visual-studio-2015/41895739"&gt;this&lt;/a&gt;
article helped quite a lot.&lt;/p&gt;

&lt;p&gt;Just would like to highlight some small details, which made me got it working:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The applicationhost.config file isn’t the one located under &lt;code&gt;Program
Files\Blablabla&lt;/code&gt;, but inside the solution root: for instance,
&lt;code&gt;C:\Users\Marcos\Repositorios\MyProject\src\.vs\config&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The correct binding which worked for me is as follows:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;site name="..." id="2"&amp;gt;
    &amp;lt;application path="/" applicationPool="Clr4IntegratedAppPool"&amp;gt;
        &amp;lt;virtualDirectory path="/" physicalPath="C:\Users\Marcos\Repositorios\MyProject\src\MyProjectServer\MyProjectApi" /&amp;gt;
    &amp;lt;/application&amp;gt;
    &amp;lt;bindings&amp;gt;
        &amp;lt;binding protocol="http" bindingInformation="*:53034:localhost" /&amp;gt;
        &amp;lt;!-- This one! --&amp;gt;
        &amp;lt;binding protocol="http" bindingInformation="10.4.1.51:53034:*" /&amp;gt;
    &amp;lt;/bindings&amp;gt;
&amp;lt;/site&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ol start="3"&gt;
&lt;li&gt;&lt;p&gt;If you want to connect to the attached SQL Server DB —as for connecting with
Management Studio:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;this command tells which instance I have in my machine:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\Program Files\Microsoft SQL Server\130\Tools\Binn&amp;gt;SqlLocalDB.exe
info&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;and this whether my instance is on or off:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\Program Files\Microsoft SQL Server\130\Tools\Binn&amp;gt;SqlLocalDB.exe
info MSSQLLocalDB&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, Stephane Delcroix replied to my post at Planet Xamarin’s Twitter
account with a &lt;a href="https://github.com/xamarin/Xamarin.Forms/pull/1317"&gt;PR&lt;/a&gt;, already
merged, where he adds ValueTuples support to Xamarin.Forms! Thanks Stephane 😇&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 19 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Falling in love with ValueTuples and a small heart break</title>
  <guid>https://marcoscobena.com/?i=2018-2-15</guid>
  <description>&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Having Valentine’s Day so close in date, today I’ve felt in love with
ValueTuples. Why you would say: because it allowed me to super super easy build
models to wire up with the UI, something like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;return new (Title: $”Action {index + 1}”, Exercise: currentExercise,
ValidatedSession: currentValidatedSession);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Already “old” Tuples were doing a great job for me, because even &lt;code&gt;Item1&lt;/code&gt;, etc.
was feeling ugly when binding in XAML, it still was allowing me go fast
iterating. But discovered that beautiful naming in ValueTuples and moved on.&lt;/p&gt;

&lt;p&gt;However, Xamarin.Forms’ XAML currently doesn’t support referencing a named
property from ValueTuples —I guess it comes from XAMLC phase. So had to finally
create some models and work with them from that on.&lt;/p&gt;

&lt;p&gt;My question is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Has anyone sorted out a way to make that work? And, do you see it as
    interesting as I do?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh, and &lt;a href="https://github.com/xamarin/Xamarin.Forms/issues/1891"&gt;found a bug&lt;/a&gt; with
DataTriggers which cannot reference an enum value.&lt;/p&gt;

&lt;p&gt;And another one, &lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=59448"&gt;already
filled&lt;/a&gt;, where
&lt;code&gt;IsClippedToBounds&lt;/code&gt; doesn’t work with Fast Renderers.&lt;/p&gt;

&lt;p&gt;We could say it’s been a buggy day.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://media.giphy.com/media/oSUtmrhRz5te0/giphy.gif" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;(I could stay riveted with this GIF.)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 15 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Suave scroll-less lists in Xamarin.Forms</title>
  <guid>https://marcoscobena.com/?i=2018-2-13</guid>
  <description>&lt;p&gt;The screen am working on needs something like a &lt;code&gt;ListView&lt;/code&gt; inside a
&lt;code&gt;ScrollView&lt;/code&gt;, which’s nothing recommended —on a Xamarin.Android app had enabled
nesting before but I try to avoid going Custom Rendering from the beginning.
Other times have needed this ended up writing a converter which calculates
&lt;code&gt;amountOfItems * RowHeight&lt;/code&gt; to avoid any scrolling, but today wanted to dig a
little bit for a better approach.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://media.giphy.com/media/l41Ygr7sR5limRkek/giphy.gif" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;And I’ve discovered
&lt;a href="https://github.com/SuavePirate/DynamicStackLayout"&gt;DynamicStackLayout&lt;/a&gt;, exactly
what was looking for. It’s as easy to use as removing the &lt;code&gt;ListView&lt;/code&gt; declaration
—and its attributes— for &lt;code&gt;DynamicStackLayout&lt;/code&gt;, and boom:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    &lt;suave:DynamicStackLayout
        ItemsSource="{Binding FakeData}"&gt;
        &lt;suave:DynamicStackLayout.ItemTemplate&gt;
            &lt;DataTemplate&gt;
                &lt;templates:ExerciseSummaryItemTemplate /&gt;
            &lt;/DataTemplate&gt;
        &lt;/suave:DynamicStackLayout.ItemTemplate&gt;
    &lt;/suave:DynamicStackLayout&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;Thanks Alex Dunn, really nice thing 😊&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 13 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Rapid styling ListViews</title>
  <guid>https://marcoscobena.com/?i=2018-2-12</guid>
  <description>&lt;p&gt;Today I’ve been working on a XAML page and, again, have needed some fake data to
populate a &lt;code&gt;ListView&lt;/code&gt;’s &lt;code&gt;ItemsSource&lt;/code&gt;. A trick I find so useful for that,
without building custom models which represent’s Design copies, is to simply
bind an array of n items:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;within your ViewModel — here for instance 3:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;public IEnumerable&amp;lt;int&amp;gt; FakeData =&amp;gt; Enumerable.Range(0, 3);&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;within your &lt;code&gt;Page&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;&amp;amp;lt;ListView ItemsSource="{Binding FakeData}" [...]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now I can concentrate on the item template without putting so much effort on the
temporal fake data.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 12 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Embedding JSON responses conditionally</title>
  <guid>https://marcoscobena.com/?i=2018-2-9</guid>
  <description>&lt;p&gt;&lt;a href="https://marcoscobena.com/?i=2018-2-7"&gt;Using JSON files to replicate calls&lt;/a&gt; has a
downside: you can end up bundling those in the final package, increasing its
size and looking ugly. I had never done before embedding something
conditionally, but there was Stack Overflow with a
&lt;a href="https://stackoverflow.com/questions/14224316/embed-a-resource-conditionally-in-a-csproj"&gt;solution&lt;/a&gt;
for this:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;&amp;lt;ItemGroup Condition="'$(Configuration)' == 'Debug’"&amp;gt;
    &amp;lt;EmbeddedResource Include="..\Files\Debug\FakeExercises.json"&amp;gt;
      &amp;lt;Link&gt;Services\Exercise\FakeExercises.json&amp;lt;/Link&amp;gt;
    &amp;lt;/EmbeddedResource&amp;gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;Just Debug compilations will move the file on, Release and so on will be cristal
clear.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 11 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Thursday</title>
  <guid>https://marcoscobena.com/?i=2018-2-8</guid>
  <description>&lt;p&gt;During Christmas I was working on a small game prototype, fully backed by the
joy I had going through Thimbleweed Park. Basically enabled a way to write down
state-based logic in a ViewModel, which informs the View on just a few messages
where this last only reacts. Everything powered by Tasks.&lt;/p&gt;

&lt;p&gt;Today I woke up thinking could do better with the screen am on currently, and
decided to implement that of above. I’m super lucky of being sat down ten steps
away from Dani Cáceres, the one I know in person who better manages Tasks in
depth.&lt;/p&gt;

&lt;p&gt;And asked him to review my code. And, obviously, had stuff to improve. The most
significant’s a corner case where a Task could be there forever, so he
introduced &lt;code&gt;CancellationToken.Register()&lt;/code&gt;: a straight way to dispose stuff when
the cancellation happens, and fit perfectly in my scenario.&lt;/p&gt;

&lt;p&gt;Thanks Dani! 🙂&lt;/p&gt;

&lt;p&gt;Back to the logic, my VM know exposes the following:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    public async Task StartStateMachineAsync()
    {
        if (&lt;em&gt;cancellationTokenSource != null &amp;amp;&amp;amp; !&lt;/em&gt;cancellationTokenSource.IsCancellationRequested)
        {
            return;
        }&lt;/p&gt;

&lt;p&gt;        _cancellationTokenSource = new CancellationTokenSource();
        var token = _cancellationTokenSource.Token;&lt;/p&gt;

&lt;p&gt;        while (!token.IsCancellationRequested)
        {
            MessagingCenter.Send(this, NFCUnavailableMessage);
            await Task.Delay(SecondsToHoldBetweenStates);&lt;/p&gt;

&lt;p&gt;            var isNFCSupported = CheckNFCSupport();&lt;/p&gt;

&lt;p&gt;            if (isNFCSupported)
            {
                await PoolForNFCAvailableAsync();
            }
            else
            {
                continue;
            }&lt;/p&gt;

&lt;p&gt;            MessagingCenter.Send(this, ReadyToReadMessage);
            await Task.Delay(SecondsToHoldBetweenStates);&lt;/p&gt;

&lt;p&gt;            var nfcTagId = await TagDetectedAsync(_cancellationTokenSource.Token);&lt;/p&gt;

&lt;p&gt;            MessagingCenter.Send(this, ReadSuccessfulMessage);
            await Task.Delay(SecondsToHoldBetweenStates);&lt;/p&gt;

&lt;p&gt;            await TryNavigatingToMatchingControlAsync(nfcTagId);
        }
    }&lt;/p&gt;

&lt;p&gt;    public void StopStateMachine()
    {
        _cancellationTokenSource.Cancel();
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;(Yes, it’s all about handling NFC detection triggering some anims. in UI.)&lt;/p&gt;

&lt;p&gt;Every piece of logic in on the VM. &lt;em&gt;Every&lt;/em&gt;. This’ the View:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    protected override void OnAppearing()
    {
        base.OnAppearing();&lt;/p&gt;

&lt;p&gt;        SubscribeMessages();
        ViewModel.StartStateMachineAsync().ConfigureAwait(false);
    }&lt;/p&gt;

&lt;p&gt;    protected override void OnDisappearing()
    {
        base.OnDisappearing();&lt;/p&gt;

&lt;p&gt;        if (!_isAndroidMainActivityPausedBecauseOfNFCDetection)
        {
            UnsubscribeMessages();
            ViewModel.StopStateMachine();
            ResetImagesToTheirInitialState();
        }
    }&lt;/p&gt;

&lt;p&gt;    private void ResetImagesToTheirInitialState()
    {
        nfcUnavailableImage.Opacity = 0.12f;
        nfcReadyImage.Opacity = 0;
        nfcJustNFCImage.Opacity = 0;
        nfcJustOKImage.Opacity = 0;
    }&lt;/p&gt;

&lt;p&gt;    private void SubscribeMessages()
    {
        MessagingCenter.Subscribe&lt;NFCViewModel&gt;(this, NFCViewModel.NFCUnavailableMessage,
                                                async _ =&gt;
        {
            await nfcReadyImage.FadeTo(0);
            nfcJustNFCImage.Scale = 1;
            nfcJustOKImage.Scale = 0;
        });
        [...]
    }
    
    private void UnsubscribeMessages()
    {
        MessagingCenter.Unsubscribe&lt;NFCViewModel&gt;(this, NFCViewModel.NFCUnavailableMessage);
        [...]
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;That’s all. Probably this’ so obvious for you, or discover loads of downsides.
Whatever it comes to your mind, please share it. For me it’s like got something
really interesting to supply with MVVM, but it’s “my son”.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 08 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wednesday</title>
  <guid>https://marcoscobena.com/?i=2018-2-7</guid>
  <description>&lt;p&gt;I’ve been working on a screen playing with NFC discoveral, and have used for the
very first time NFCForms plug-in. It’s nice because avoids all the boilerplate
code needed to setup NFC, and gives back a few events to notice when tags are
coming in.&lt;/p&gt;

&lt;p&gt;Such returns ids in a &lt;code&gt;byte[]&lt;/code&gt; forms, where each position represents 2 hex.
chars. How to covert it to a more convenient string?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var​ nfcTag = BitConverter.ToString(bytes).Replace("-", string.Empty);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I learnt that from &lt;a href="https://stackoverflow.com/questions/623104/byte-to-hex-string"&gt;this
thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since we consume a REST API and wanted to make some tests with a wrist-band we
have here at the office, my mate Sergio pointed me to capture the JSON payloads,
save it within the project and reproduce calls with a fake service, where &lt;a href="https://stackoverflow.com/a/34356170"&gt;this
method&lt;/a&gt; is sooo handy for reading from
embedded resources.&lt;/p&gt;

&lt;p&gt;Maybe this’ so simple but have read a little bit on how this op. works:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (items?.FirstOrDefault() == null)
{ […] }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;The operator &lt;code&gt;?.&lt;/code&gt; —inside
&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-conditional-operators"&gt;null-conditional&lt;/a&gt;
set— returns the right side of the expression if left isn’t &lt;code&gt;null&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;
otherwise, so the chain with &lt;code&gt;==&lt;/code&gt; fits perfect in this case.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 07 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Tuesday</title>
  <guid>https://marcoscobena.com/?i=2018-2-6</guid>
  <description>&lt;p&gt;I’m back to Plain Concepts, and have joined a beautiful Xamarin.Forms project.&lt;/p&gt;

&lt;p&gt;Asking the Designer for some info on a screen discovered how to capture a
screenshot and copy it directly into the clipboard in macOS:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CMD&lt;/code&gt; + &lt;code&gt;CTRL&lt;/code&gt; + &lt;code&gt;MAY&lt;/code&gt; + &lt;code&gt;4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Very funny to press with a single hand.&lt;/p&gt;

&lt;p&gt;Those assets was asking for needed a small tweak to turn one color into another
one, in order to compose an animation, and GIMP’s been there to the rescue
again:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.gimp.org/en/plug-in-exchange.html"&gt;https://docs.gimp.org/en/plug-in-exchange.html&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 06 Feb 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Tuesday</title>
  <guid>https://marcoscobena.com/?i=2018-1-30</guid>
  <description>&lt;p&gt;Finally my mate Marcos Antonio and I —yep, both Marcos— ‘ve found out the root
for this issue:&lt;/p&gt;

&lt;p&gt;```
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: 
Unhandled Exception:
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.TypeInitializationException: The type initializer for 'AnAwesomeApp.Views.Controls.CollectionWrapLayoutView' threw an exception. ---&gt; System.TypeInitializationException: The type initializer for 'ReactiveUI.RxApp' threw an exception. ---&gt; System.TypeInitializationException: The type initializer for 'System.Reactive.Concurrency.TaskPoolScheduler' threw an exception. ---&gt; System.TypeInitializationException: The type initializer for 'System.Reactive.Concurrency.ConcurrencyAbstractionLayer' threw an exception. ---&gt; System.TypeInitializationException: The type initializer for 'System.Reactive.Concurrency.NewThreadScheduler' threw an exception. ---&gt; System.NullReferenceException: Object reference not set to an instance of an object
  at System.Reactive.PlatformServices.SystemClock.Register (System.Reactive.Concurrency.LocalScheduler scheduler) &amp;lt;0x103959fa0 + 0x00174&gt; in &amp;lt;&amp;lt;\M-b\M^@\M-&amp;amp;&gt;
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: Unhandled managed exception:
Exception has been thrown by the target of an invocation. (System.Reflection.TargetInvocationException)
  at System.Reflection.MonoCMethod.InternalInvoke (System.Object obj, System.Object[] parameters) &amp;lt;0x100c4b000 + 0x0006c&gt; in &lt;d680a8bf3a2a4c8dbbfde665ba81f6f2#008dcf0648eed9dfc59fadc50c407e2c&gt;:0 
  at System.RuntimeType.CreateInstanceMono (System.Boolean nonPublic) &amp;lt;0x100ba1040 + 0x0011b&gt; in &lt;d680a8bf3a2a4c8dbbfde665ba81f6f2#008dcf0648eed9dfc59fadc50c407e2c&gt;:0 
  at System.RuntimeType.CreateInstanceSlow (System.Boolean publicOnly, System.Boolean skipCheckThis, System.Boolean fillCache, System.Threading.StackCrawlMark&amp;amp; stackMark) &amp;lt;0x100ba0ff0 + 0x0003f&gt; in &lt;d680a8bf3a2a4c8dbbfde665ba81f6f2#008dcf0648eed9dfc59fadc50c407e2c&gt;:0 
  at System.RuntimeType.CreateInstanceDefaultCtor (System.Boolean publicOnly, System.Boolean skipCheckThis, System.Boolean fillCache, System.Threading.StackCrawlMark&amp;amp; stackMark) &amp;lt;0x100ba07c0 + 0x00057&gt; in &lt;d680a8bf3a2a4c8dbbfde665ba81f6f2#008dcf0648&amp;lt;\M-b\M^@\M-&amp;amp;&gt;
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical: Stacktrace:
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical: 
Native stacktrace:
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  0   AnAwesomeApp.iOS                    0x000000010401bdb4 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 236452
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  1   libsystem&lt;em&gt;platform.dylib            0x0000000183edbb50 _sigtramp + 52
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  2   libsystem&lt;/em&gt;pthread.dylib             0x0000000183ee12f8 &lt;redacted&gt; + 396
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  3   libsystem&lt;em&gt;c.dylib                   0x0000000183d3afbc abort + 140
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  4   AnAwesomeApp.iOS                    0x000000010415ad40 xamarin&lt;/em&gt;get&lt;em&gt;block&lt;/em&gt;descriptor + 5036
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  5   AnAwesomeApp.iOS                    0x0000000104063800 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 529904
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  6   AnAwesomeApp.iOS                    0x000000010401b914 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 235268
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  7   AnAwesomeApp.iOS                    0x000000010401a724 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 230676
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  8   AnAwesomeApp.iOS                    0x0000000104012334 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 196900
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  9   AnAwesomeApp.iOS                    0x00000001010449b8 sqlite3&lt;em&gt;db&lt;/em&gt;readonly + 8426368
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  10  AnAwesomeApp.iOS                    0x0000000100a68bb0 sqlite3&lt;em&gt;db&lt;/em&gt;readonly + 2282872
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  11  AnAwesomeApp.iOS                    0x0000000100fef3b4 sqlite3&lt;em&gt;db&lt;/em&gt;readonly + 8076668
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  12  AnAwesomeApp.iOS                    0x000000010402b698 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 300168
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  13  AnAwesomeApp.iOS                    0x00000001040a7d0c &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 809724
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  14  AnAwesomeApp.iOS                    0x00000001040aafb0 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 822688
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  15  AnAwesomeApp.iOS                    0x000000010400eb80 &lt;em&gt;ZN7plcrash3BIT5async24dwarf&lt;/em&gt;cfa&lt;em&gt;state&lt;/em&gt;iteratorIyxE4nextEPjPNS1&lt;em&gt;28plcrash&lt;/em&gt;dwarf&lt;em&gt;cfa&lt;/em&gt;reg&lt;em&gt;rule&lt;/em&gt;tEPy + 182640
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  16  AnAwesomeApp.iOS                    0x0000000104161d10 xamarin&lt;em&gt;localized&lt;/em&gt;string&lt;em&gt;format&lt;/em&gt;9 + 3236
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  17  AnAwesomeApp.iOS                    0x0000000100a67f48 sqlite3&lt;em&gt;db&lt;/em&gt;readonly + 2279696
Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:  18  libdyld.dylib                       0x0000000183c9c56c &lt;redacted&gt; + 4&lt;/p&gt;

&lt;h1&gt;Jan 30 13:24:02 iPhone-de-Marcos AnAwesomeApp.iOS[320] &lt;Notice&gt;: critical:&lt;/h1&gt;

&lt;p&gt;Got a SIGABRT while executing native code. This usually indicates
a fatal error in the mono runtime or one of the native libraries &lt;/p&gt;

&lt;h1&gt;used by your application.&lt;/h1&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;Where was the issue? Well, there was a missalignment in some packages from the
group Akavache–ReactiveUI–ReactiveX–SQLite. Although we had double checked this
at the beginning there should be anything we forgot because it didn’t work by
that day.&lt;/p&gt;

&lt;p&gt;It looks so clear now as were getting some other &lt;code&gt;MissingMethodException&lt;/code&gt; at
&lt;code&gt;Activator.CreateInstance()&lt;/code&gt; which I bet was because the exact type wasn’t
present in the final bundle.&lt;/p&gt;

&lt;p&gt;It’s resembled what Dominique Pochat —an Escalation Engineer on COM at
Microsoft— told me 12 (sigh) years ago:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Never trust customers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He pushed me to check everything by my own, as sometimes customers don’t really
understand the underlying happening, and the issues can come from the most
stupid corners. More than a decade later: thanks again Dominique for your
learnings!&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://gist.github.com/cvan/8630f847f579f90e0c014dc5199c337b"&gt;https://gist.github.com/cvan/8630f847f579f90e0c014dc5199c337b&lt;/a&gt; —how to
enable HTTPS, &lt;em&gt;free&lt;/em&gt;, with your own domain at GitHub Pages&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://webmasters.stackexchange.com/questions/37907/how-to-use-cloudflare-and-namecheap-email-forwarding-at-the-same-time/58651#58651"&gt;https://webmasters.stackexchange.com/questions/37907/how-to-use-cloudflare-and-namecheap-email-forwarding-at-the-same-time/58651#58651&lt;/a&gt;
—how to enable mail forwarding after setting above (I’m still waiting those
48 hours…)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 29 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Monday</title>
  <guid>https://marcoscobena.com/?i=2018-1-29</guid>
  <description>&lt;p&gt;I’ve been working during the last two weeks on a Getting Started package to
start future projects at DevsDNA. One of the things was asked for is supporting
.NET Standard 2.0 from the very beginning, to be ready for upcoming movements in
the .NET ecosystem.&lt;/p&gt;

&lt;p&gt;Doing some tests with out beta version I stumbled upon lot of errors when adding
such to a Xamarin.iOS project —within a Forms solution— and decided to move into
a bug at Xamarin.iOS product:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xamarin/xamarin-macios/issues/3349"&gt;https://github.com/xamarin/xamarin-macios/issues/3349&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Álex Soto’s confirmed this as a bug, and added a repro. project which will help
Xamarin guys to troubleshoot it easier. You probably won’t ever read this Álex
but thanks man!&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://carbon.now.sh"&gt;https://carbon.now.sh&lt;/a&gt; —beauty code screenshots, although we’d breaking
readability for handicapped people&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/PowerShell/PowerShell"&gt;https://github.com/PowerShell/PowerShell&lt;/a&gt; —cross-platform PowerShell, macOS
included&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://gist.github.com/a4099181/074a6c3dd524ea0d343382137492399c"&gt;https://gist.github.com/a4099181/074a6c3dd524ea0d343382137492399c&lt;/a&gt;
—PowerShell script to turn packages.config into PackageReferences within
CSPROJs (now you get above link)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 28 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Saturday</title>
  <guid>https://marcoscobena.com/?i=2018-1-27</guid>
  <description>&lt;p&gt;This week haven’t touched any single line on Joy but en-joy-ed 🤭 working on the
Flappy Bird pixel copy. I borrowed some code on how to make the bird jump but
more than jumping it was actually getting frozen. However, I found the key in
some way:&lt;/p&gt;

&lt;p&gt;&lt;img src="items/images/FlappyBirdGame.gif" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Since the Internet’s full of Flappy Bird resources I may start using more
original assets, but I don’t have support for sprite sheets —should consider
adding this however.&lt;/p&gt;

&lt;p&gt;Making the bird jump happens within the game it-self, but found walls something
to pull out into somewhat like a component. It came to my mind how Wave Engine
—my very little experience working on games’ mostly with it— adds entities to
the scenes.&lt;/p&gt;

&lt;p&gt;Instead of supporting that list from a beginning simply wrote down how I’d like
to work with it:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    public class FlappyBird : Game
    {
        [...]&lt;/p&gt;

&lt;p&gt;        public FlappyBird() : base(32, 32)
        {
            [...]&lt;/p&gt;

&lt;p&gt;            wall = new Wall(this);
        }&lt;/p&gt;

&lt;p&gt;        public override void Load()
        {
            [...]&lt;/p&gt;

&lt;p&gt;            wall.Load();
        }&lt;/p&gt;

&lt;p&gt;        public override void Think(TimeSpan timeSincePreviousCall)
        {
            wall.Think(timeSincePreviousCall);&lt;/p&gt;

&lt;p&gt;            if (birdY &amp;lt; 0)
            {
                birdY = 0;
                birdYSpeed = 0;
            }
            else if (wall.Touches(birdX, birdY) || birdY &gt;= PaintingSize.Height)
            {
                Load();
                return;
            }&lt;/p&gt;

&lt;p&gt;            [...]
        }&lt;/p&gt;

&lt;p&gt;        public override void Paint()
        {
            Erase(SKColors.White);&lt;/p&gt;

&lt;p&gt;            wall.Paint();
            Paint(bird, (int)birdX, (int)birdY);
        }
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;Simply by passing &lt;code&gt;Game&lt;/code&gt; to &lt;code&gt;Wall&lt;/code&gt; this last turns into a sub-game, which
immediately gives context to new users on how to fill it of code. I’m thinking
on standardize this with an interface.&lt;/p&gt;

&lt;p&gt;Finally, I still don’t handle the bird actually passing through the gap, too
because I don’t feel comfortable with the calcs needed for so, and am also
considering to simplify as much as possible the collision detection.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Fri, 26 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Friday</title>
  <guid>https://marcoscobena.com/?i=2018-1-26</guid>
  <description>&lt;p&gt;I’ve been recently playing a little bit with NuGet site and really liked its
simplicity. How packages are uploaded, updated, edited, etc. Today I discovered
that if you want to publish a prerelease version there’s no checkbox out there,
nor a complex system for this, but adding a suffix to your version:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;1.0.0-beta&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;, for instance. Want to exit the beta world? Just remove that suffix and upload
it.&lt;/p&gt;

&lt;p&gt;Aaand, take note deleting packages isn’t possible, the most you can achieve’s
unlisting them, which’s fine too.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 25 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Thursday</title>
  <guid>https://marcoscobena.com/?i=2018-1-25</guid>
  <description>&lt;h3&gt;MAP_JIT error when launching a Xamarin.iOS app (II)&lt;/h3&gt;

&lt;p&gt;After multiple attempts on delaying RxUI execution we still get the same error
—notice the appearance of Akavache:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
    System.TypeInitializationException: The type initializer for ‘Akavache.BlobCache’ threw an exception.
    System.TypeInitializationException: The type initializer for ‘System.Reactive.Concurrency.DefaultScheduler’ threw an exception.
    System.TypeInitializationException: The type initializer for ‘System.Reactive.Concurrency.ConcurrencyAbstractionLayer’ threw an exception.
    System.TypeInitializationException: The type initializer for ‘System.Reactive.Concurrency.NewThreadScheduler’ threw an exception.
    System.NullReferenceException: Object reference not set to an instance of an object
     at System.Reactive.PlatformServices.SystemClock.Register (System.Reactive.Concurrency.LocalScheduler [...]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;We figured out one of the SQLite packages within the iOS project was not version
aligned with the rest; however, this neither solved the issue.&lt;/p&gt;

&lt;p&gt;One important piece’s that the same code building in MacInCloud —with iOS SDK
10.x I guess— does run fine, and my mate’s machine’s 11.x. Since we think there
must be any difference related to that which surfaces the issue.&lt;/p&gt;

&lt;p&gt;Talking with him I learned Forms’
&lt;a href="https://github.com/xamarin/Xamarin.Forms/blob/2d9288eee6e6f197364a64308183725e7bd561f9/Xamarin.Forms.Core/DependencyService.cs"&gt;DependencyService&lt;/a&gt;’s
actually lazy when instantiating.&lt;/p&gt;

&lt;h3&gt;WhenTheAppWasBuilt&lt;/h3&gt;

&lt;p&gt;Adding it to a .NET Standard 2.0 lib. obviously the date returned was set at
2000s so Googled for it and discovered how &lt;code&gt;AssemblyVersion&lt;/code&gt; attribute can be
brought back to .NET Standard ecosystem. We’ve noted all this down within the
&lt;a href="https://github.com/DevsDNA/WhenTheAppWasBuilt#how-to-use-it"&gt;package
documentation&lt;/a&gt;.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 24 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wednesday</title>
  <guid>https://marcoscobena.com/?i=2018-1-24</guid>
  <description>&lt;h3&gt;MAP_JIT error when launching a Xamarin.iOS app&lt;/h3&gt;

&lt;p&gt;My coworker Marcos Antonio's having an issue with a Xamarin.iOS app closing at
start-up running in Release on an iPod Touch, so we made pair debugging
together. What the device output pad shows at VS for Mac is this error:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;System Policy: MAP_JIT requires the dynamic-codesigning entitlement
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;In the beginning, reading JIT recalls AOT’s not disabled. However, it’s, so we
go through the Devices window within Xcode and discover the actual issue going
down the log: Rx’s &lt;code&gt;SystemClock&lt;/code&gt; is throwing a &lt;code&gt;NullReferenceException&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://media.giphy.com/media/3orieTLuLv7piizGs8/giphy.gif" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;After some time debugging, aligning Rx packages from core project to iOS one, we
discovered that as soon as you avoid any code regarding ReactiveUI —in our case—
the app starts. So, our assumption comes from Rx trying to be initialized before
time.&lt;/p&gt;

&lt;p&gt;How to fix this? We currently have no solution, but reading along Xamarin’s
Forums, Stack Overflow and so on, if you experience a MAP_JIT issue we can say
that’s not the actual issue, so go back to raw logs and keep looking for a
managed stack trace, which surely there it’ll be waiting for care.&lt;/p&gt;

&lt;h3&gt;SSH keys (part III/n)&lt;/h3&gt;

&lt;p&gt;I’ve discovered my issues with SSH keys isn’t macOS being updated but a computer
restart. Calling &lt;code&gt;ssh-add&lt;/code&gt; acts on the current SSH agent running, but doesn’t
persist over restarts. Think will automate it in any way.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 23 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Tuesday</title>
  <guid>https://marcoscobena.com/?i=2018-1-23</guid>
  <description>&lt;p&gt;Working on our own lib. to bundle all that stuff we usually need on each project
I stumbled upon one issue when creating the unit testing project: VS for Mac
doesn't detect Unit Tests from .NET Standard libraries, independent of the NUnit
version used —2.x to 3.x. F**k!&lt;/p&gt;

&lt;p&gt;After trying with newer and older NUnit versions finally had no other way than
going back to a common .NET lib., actually the project type suggested within VS.&lt;/p&gt;

&lt;p&gt;Fully embracing .NET Standard from the perspective of a macOS user’s somewhat
like a pain nowadays...&lt;/p&gt;

&lt;p&gt;On other aspects, I finally found a quick solution to avoid a specific StyleCop
rule within one of our projects —we have a global StyleCop.Settings file at our
solution root. Simply add a similar file &lt;em&gt;in your project root&lt;/em&gt; knowing that
will be load just after the global one, so freely disable that what you want:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;StyleCopSettings Version="105"&amp;gt;
  &amp;lt;Analyzers&amp;gt;
    &amp;lt;Analyzer AnalyzerId="StyleCop.CSharp.DocumentationRules"&amp;gt;
      &amp;lt;Rules&amp;gt;
        &amp;lt;Rule Name="ElementsMustBeDocumented"&amp;gt;
          &amp;lt;RuleSettings&amp;gt;
            &amp;lt;BooleanProperty Name="Enabled"&amp;gt;False&amp;lt;/BooleanProperty&amp;gt;
          &amp;lt;/RuleSettings&amp;gt;
        &amp;lt;/Rule&amp;gt;
      &amp;lt;/Rules&amp;gt;
    &amp;lt;/Analyzer&amp;gt;
  &amp;lt;/Analyzers&amp;gt;
&amp;lt;/StyleCopSettings&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;That sort of cascade loading resembled to GAC priorities when loading assemblies
back in 2000s —am getting old, I know.&lt;/p&gt;

&lt;p&gt;I got to this from &lt;a href="https://stackoverflow.com/a/3296152"&gt;this&lt;/a&gt; Stack Overflow
thread.&lt;/p&gt;

&lt;p&gt;Also I’m trying to learn in those free mins. which are the “new” C# 7 features
I could actually use in my daily routine, and this’ the one I’m more enjoying
actually:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    var number = 42;&lt;/p&gt;

&lt;p&gt;    if (number is int integer)
    {
        Console.WriteLine($"It's an integer! {integer}");
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;How much time I’d have spent casting number to int, and accessing it after… And
how elegant’s this solution now 😍&lt;/p&gt;

&lt;p&gt;If you want “the link” for those features go
&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7"&gt;here&lt;/a&gt;.
Welcome!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 22 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Monday</title>
  <guid>https://marcoscobena.com/?i=2018-1-22</guid>
  <description>&lt;p&gt;It turns out &lt;a href="http://marcoscobena.com/?i=2018-1-19"&gt;the fix&lt;/a&gt; I found last day to
fix SSH connection with GitHub applies equally to Visual Studio Team Services:
the SSH agent was missing the key I created specifically for it. So,
SourceTree’s fully working with my multi-keys env. SSH ✌️&lt;/p&gt;

&lt;p&gt;Looking for something in Google came up to a Xamarin.Forms app where navigation
was being handled entirely through messaging, and the actual code in charge of
pushing and popping pages placed at main &lt;code&gt;App&lt;/code&gt;’s code behind.&lt;/p&gt;

&lt;p&gt;You ask for navigation like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;MessagingCenter.Send(new NavigationMessage { PageType = typeof(YourPageToGo)},
NavigationMessageTitle);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;; and receive it in the same way:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    MessagingCenter.Subscribe&lt;NavigationMessage&gt;(this, NavigationMessageTitle, message =&gt;
    {
        switch (message.PageType)
        {
            case typeof(YourPageToGo):
                var page = new YourPageToGo();
                MainPage.Navigation.PushAsync(page);
                break;
            [...]
        }
    });
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;I have some concerns regarding awaiting the navigation to happen, since your
loose that. However, it’s something which could be workaround-ed.&lt;/p&gt;

&lt;p&gt;It always recalls my attention what it’s possible to achieve with vanilla
Xamarin.Forms, without MVVM frameworks, just using what you already have.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 21 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Sunday</title>
  <guid>https://marcoscobena.com/?i=2018-1-21</guid>
  <description>&lt;p&gt;This week, in order to make the library more solid, decided to write a small
Flappy Bird alike game with it. However, it wasn’t possible: I had focused on
the scripting side but the underlying code was not powerful enough to handle
more dynamic sort of games. I had a powerful state-based way of writing games,
and just that.&lt;/p&gt;

&lt;p&gt;So went downstairs and started rewriting from bottom up —and named Joy it
finally.&lt;/p&gt;

&lt;p&gt;With some ideas from LÖVE 2D, Joy’s now capable of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;drawing images in (x, y), and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;detect touchs within an area&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;; everything with a more human API (naming mostly).&lt;/p&gt;

&lt;p&gt;This’ the playground have been using for the initial steps:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    public class FooGame : Game
    {
        [...]&lt;/p&gt;

&lt;p&gt;        public FooGame() : base(32, 32)
        { }&lt;/p&gt;

&lt;p&gt;        public override void Load()
        {
            accumulatedTime = TimeSpan.Zero;
            framesPerSecond = 0;
            hue = 0;
            image = LoadImage("TicTacToe.png");
            imageX = 0;
            leftArea = new SKRect(0, 0, 16, 32);
            rightArea = new SKRect(16, 0, 32, 32);
        }&lt;/p&gt;

&lt;p&gt;        public override void Think(TimeSpan timeSincePreviousCall)
        {
            accumulatedTime += timeSincePreviousCall;
            framesPerSecond++;
            
            if (accumulatedTime &gt;= TimeSpan.FromSeconds(1))
            {
                System.Diagnostics.Debug.WriteLine($"{framesPerSecond} FPS");
                accumulatedTime = TimeSpan.Zero;
                framesPerSecond = 0;
            }
            
            hue = (hue + 1) % 360;&lt;/p&gt;

&lt;p&gt;            if (DetectsTouchAt(leftArea))
            {
                imageX--;
            }
            else if (DetectsTouchAt(rightArea))
            {
                imageX++;
            }
        }&lt;/p&gt;

&lt;p&gt;        public override void Paint()
        {
            var color = SKColor.FromHsl(hue, 50, 50);
            Erase(color);&lt;/p&gt;

&lt;p&gt;            Paint(image, imageX, 0);
        }
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;, producing this output:&lt;/p&gt;

&lt;p&gt;&lt;img src="items/images/FooGame.gif" alt="" /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I’ve been thinking the way Joy exposes touchs isn’t suitable for more complex
situations, so probably will work it out a little bit. However, I think have all
the basic pieces to finally write that Flappy Bird prototype.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 20 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Friday</title>
  <guid>https://marcoscobena.com/?i=2018-1-19</guid>
  <description>&lt;p&gt;Keeping with the Azure class —AZR110 at Xamarin University— it got to a point
where following up in Mac was a little bit harder because of the lack the wizard
when adding new table controllers. This’ something you should do manually and I
was running out of time. It’d be so nice to have VS Mac version aligned to
Windows one in this aspect too.&lt;/p&gt;

&lt;p&gt;Updating macOS High Sierra to 10.13.2 all my GitHub repos. set up with SSH
stopped working with a wonderful “authentication failed” message. It turned out
was as easy as adding again the keys:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-add -K ~/.ssh/YOUR_PRIVATE_KEY_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 18 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Thursday</title>
  <guid>https://marcoscobena.com/?i=2018-1-18</guid>
  <description>&lt;p&gt;For the very first time I created an ASP.NET MVC project within VS for Mac and
published in Azure &lt;a href="https://blog.xamarin.com/publish-azure-visual-studio-mac/"&gt;everything from the
Mac&lt;/a&gt;. And, to be
honest, worked like a charm. After struggling with .NET Standard differences
between Windows and Mac this was a light of hope. (Just kidding.)&lt;/p&gt;

&lt;p&gt;In other aspects, got an e-mail that &lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=61120"&gt;Xamarin just fixed the
bug&lt;/a&gt; I reported last month.
Sounds good!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 17 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wednesday</title>
  <guid>https://marcoscobena.com/?i=2018-1-17</guid>
  <description>&lt;p&gt;In a quick sentence: I feel Xamarin ecosystem isn’t currently ready for fully
working with .NET Standard libraries. And can fully understand it, as we’re all
moving our stuff to .NET Standard but, you know, are in the process.&lt;/p&gt;

&lt;p&gt;In order to have a ready-from-departure Xamarin.Forms app bundling .NET Standard
this must be done from Windows. (Have latest stable versions on both sides.) Or,
you can modify CSPROJs created in Mac to move from packages.config to bundled in
dependencies.&lt;/p&gt;

&lt;p&gt;I haven’t been able to build a Xamarin.iOS —Forms actually— app which consumes a
.NET Standard 2.0 library where both consume a NuGet package having another core
.NET Standard lib. with Android and iOS ones. Take that!&lt;/p&gt;

&lt;p&gt;To be honest, most of the issues came from ReactiveUI and Refit. iOS build
barked on missing dependencies, double ones, etc.&lt;/p&gt;

&lt;p&gt;More in depth, most of my issues came from using ReactiveUI alpha packages,
which I needed because don’t rely on WPF’s PresentationFramework DLL and target
.NET Standard. It was crazy to play adding and removing stuff to check whether
the NuGet package could be installed —and building— in a blank Forms app.&lt;/p&gt;

&lt;p&gt;However, I learnt a few interesting things, as for instance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sometimes I saw the dependencies computed didn’t match those actual. Using
&lt;code&gt;dotnet&lt;/code&gt; CLI, it cleans NuGets everywhere in my machine:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dotnet nuget locals all -c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;(&lt;code&gt;-l&lt;/code&gt; will list the dirs. so you can get in and double check.)&lt;/p&gt;

&lt;p&gt;Oh, and noticed VS for Mac &lt;a href="https://forums.xamarin.com/discussion/19743/how-to-enable-word-wrap-in-text-editor"&gt;doesn’t support word
wrapping&lt;/a&gt;
:-( Never needed this before but going through a build output it’d have been so
handy.&lt;/p&gt;

&lt;p&gt;So, I decided to get rid of NuGet packaging today, and focus on the value,
which’s the libs. content. Will be back to packaging in a close future and for
sure will success then 🤞&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 16 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Tuesday</title>
  <guid>https://marcoscobena.com/?i=2018-1-16</guid>
  <description>&lt;p&gt;I promise my-self the next time will create a new Xamarin.Forms project, the
core library will be moved to .NET Standard 2.0 from instant zero —because if
not, I could became crazy, again.&lt;/p&gt;

&lt;p&gt;If not doing this at the beginning, but later on, this will help me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;am I getting these errors after upgrading the project?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share/dotnet/sdk/2.0.0/Sdks/Microsoft.NET.Sdk/build/Microsoft.NET.Sdk.DefaultItems.targets(5,5):
Error: Duplicate 'EmbeddedResource' items were included. The .NET SDK includes
'EmbeddedResource' items from your project directory by default. You can either
remove these items from your project file, or set the
'EnableDefaultEmbeddedResourceItems' property to 'false' if you want to
explicitly include them in your project file. For more information, see
https://aka.ms/sdkimplicititems. The duplicate items were: 'App.xaml';
'ExamplePage.xaml' (Example.Core)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;; then my solution is
&lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=58897"&gt;here&lt;/a&gt;. More exactly, this
must be the project file:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ItemGroup&amp;gt;
    &amp;lt;EmbeddedResource Remove="ExamplePage.xaml" /&amp;gt;
&amp;lt;/ItemGroup&amp;gt;
&amp;lt;ItemGroup&amp;gt;
    &amp;lt;None Remove="ExamplePage.xaml" /&amp;gt;
&amp;lt;/ItemGroup&amp;gt;
&amp;lt;ItemGroup&amp;gt;
    &amp;lt;EmbeddedResource Include="ExamplePage.xaml" /&amp;gt;
&amp;lt;/ItemGroup&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;Three times the same file? Yup, three times. Don’t ask.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Xamarin has a &lt;a href="https://developer.xamarin.com/guides/xamarin-forms/under-the-hood/net-standard/"&gt;quick
guide&lt;/a&gt;
on moving projects from PCL to .NET Standard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m becoming a PhD. in .NET Standard Compatibility Issues.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://media.giphy.com/media/ZWhA850E7azfO/giphy.gif" alt="" /&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 15 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Monday</title>
  <guid>https://marcoscobena.com/?i=2018-1-15</guid>
  <description>&lt;p&gt;A few things have learnt today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Android’s &lt;code&gt;Resource.Id.Content&lt;/code&gt; points to the root view of that &lt;code&gt;Activity&lt;/code&gt;
you’re asking on, for instance:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var rootView = CrossCurrentActivity.Current.Activity.FindViewById(Resource.Id.Content);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the clearest picture —dynamic indeed— for .netstandard vs .NET ecosystem
versioning:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://immo.landwerth.net/netstandard-versions/#"&gt;http://immo.landwerth.net/netstandard-versions/#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;would you like to switch to SSH with your Visual Studio Team Services
projects but get once and again an authentication error?
&lt;a href="https://stackoverflow.com/a/46990403"&gt;This&lt;/a&gt;’ your answer&lt;/li&gt;
&lt;/ul&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 14 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Saturday</title>
  <guid>https://marcoscobena.com/?i=2018-1-13</guid>
  <description>&lt;p&gt;I’m really happy with the achievements this week. Although started it increasing
the descriptive level of the first frame —a Frame is actually a room, a scene
where player can interact—, ended up proposing my-self a new goal of writing Tic
Tac Toe game with my small engine/library.&lt;/p&gt;

&lt;p&gt;And got it yesterday afternoon! CPU’s not the most clever of his class —haven’t
spent time on a Minimax algorithm— but chooses randomly the next movement.&lt;/p&gt;

&lt;p&gt;&lt;img src="items/images/TicTactToe.gif" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;What for me is the most important piece is working on this small game made me
improve the API exposed for Scripts, for example:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    DrawAt("TicTacToe_Cross.png", selectedItem.Area.Value.Location);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Now we can draw images at whatever position in any instant. I find this so
powerful, really. (Another day will talk about the &lt;code&gt;Painter&lt;/code&gt;, which’s the on in
charge of actually drawing —by the way, relies on SkiaSharp).&lt;/p&gt;

&lt;p&gt;So, how does the Script looks like?&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    Script = new Task(async () =&gt;
    {
        // Consts.
        var topWiningRow = new Item[] { topLeftItem, topCenterItem, topRightItem };
        var middleWiningRow = new Item[] { middleLeftItem, middleCenterItem, middleRightItem };
        [...]&lt;/p&gt;

&lt;p&gt;        // Vars.
        var cpuItems = new List&lt;Item&gt;();
        var playerItems = new List&lt;Item&gt;();
        var random = new Random();&lt;/p&gt;

&lt;p&gt;        // Funcs.
        Func&lt;IEnumerable&lt;Item&gt;, IEnumerable&lt;Item&gt;, bool&gt; aContainsAllInB = (a, b) =&gt;
        {
            [...]&lt;/p&gt;

&lt;p&gt;            return areAllContained;
        };
        Func&lt;List&lt;Item&gt;, bool&gt; wins = items =&gt;
        {
            [...]&lt;/p&gt;

&lt;p&gt;            return really;
        };&lt;/p&gt;

&lt;p&gt;        // Logic
        while (Items.Any())
        {
            Show("You move.");&lt;/p&gt;

&lt;p&gt;            var selectedItem = await Interaction();
            playerItems.Add(selectedItem);
            Items.Remove(selectedItem);
            DrawAt("TicTacToe_Cross.png", selectedItem.Area.Value.Location);&lt;/p&gt;

&lt;p&gt;            if (wins(playerItems))
            {
                Show("You win!");
                break;
            }&lt;/p&gt;

&lt;p&gt;            if (!Items.Any())
            {
                Show("Withdraw.");
                break;
            }&lt;/p&gt;

&lt;p&gt;            Show("CPU is thinking...");
            await Task.Delay(1500);&lt;/p&gt;

&lt;p&gt;            var cpuRandomItemIndex = random.Next(Items.Count);
            var cpuRandomItem = Items[cpuRandomItemIndex];
            cpuItems.Add(cpuRandomItem);
            Items.Remove(cpuRandomItem);
            DrawAt("TicTacToe_Circle.png", cpuRandomItem.Area.Value.Location);&lt;/p&gt;

&lt;p&gt;            if (wins(cpuItems))
            {
                Show("CPU wins!");
                break;
            }&lt;/p&gt;

&lt;p&gt;            if (!Items.Any())
            {
                Show("Withdraw.");
                break;
            }
        }
    });
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;In an async/await fashion the entire game’s expressed in just a few lines of
code —and I see some refactoring available there… Yesterday was thinking too
that this’ actually powerful to show children how to code small games, introduce
them into the art of programming and keep those in a quite small managed
environment. Will have to think about this a little bit more.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Fri, 12 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Thursday</title>
  <guid>https://marcoscobena.com/?i=2018-1-11</guid>
  <description>&lt;p&gt;Following with yesterday task, double checked the &lt;code&gt;HttpClient&lt;/code&gt; was being
refreshed correctly in both Android &amp;amp; iOS and jumped to add some unit tests.&lt;/p&gt;

&lt;p&gt;Our &lt;code&gt;BaseViewModel&lt;/code&gt; relies on ReactiveUI so the first issue I encountered was
NUnit console barking on a missing PresentationFramework.dll (WPF, actually).
Asking Google found a comment on a GitHub issue where Geoffrey Huntley
recommends to consume myget packages as ReactiveUI is on 8.0 (pre-stage
packages) where WPF dependency has already being removed.&lt;/p&gt;

&lt;p&gt;And it worked! However, as soon as in my tests any &lt;code&gt;PropertyChanged&lt;/code&gt; event is
being fired a get another exception on a missing type (don’t remember which one
was now). No problem, a workaround is to encapsulate such prop. setting
—actually already is— and fake it like:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    mockViewModel.Setup(vm =&gt; vm.SetBusy(true, It.IsAny&lt;bool&gt;()))
                 .Verifiable();
    mockViewModel.Setup(vm =&gt; vm.SetBusy(false, It.IsAny&lt;bool&gt;()))
                 .Verifiable();
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;(We already had such encapsulation because don’t want every parent VM to force a
loading overlay.)&lt;/p&gt;

&lt;p&gt;Since I want to test a &lt;code&gt;protected&lt;/code&gt; method in a base class, my initial attempt
has been to make my tests class inherit such; however, finally found a better
approach of adding a &lt;code&gt;FakeViewModel&lt;/code&gt; class in the tests project and use this
last for testing:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    public class FakeViewModel : BaseReactiveViewModel
    {
        [...]&lt;/p&gt;

&lt;p&gt;        public async Task&lt;bool&gt; Test(Func&lt;Task&lt;bool&gt;&gt; operation)
        {
            var result = await ExecuteInternetBoundCallAsync(() =&gt; operation());&lt;/p&gt;

&lt;p&gt;            return result;
        }&lt;/p&gt;

&lt;p&gt;        public override void SetBusy(bool busyState, bool disableBusy)
        {
            // Intentionally blank
        }&lt;/p&gt;

&lt;p&gt;        protected override Task RefreshTokenAndGatewaysAsync()
        {
            return Task.FromResult(Unit.Default);
        }
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Test()&lt;/code&gt; is our friendly endpoint here. One of the tests I was looking for is
making sure after 1 and/or max. retries it ends up returning the expected value,
so this &lt;code&gt;Operation()&lt;/code&gt; allows me to easily set each test up:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    Task&lt;bool&gt; Operation()
    {
        if (howManyFailsBeforeSuccess &gt; 0)
        {
            howManyFailsBeforeSuccess--;&lt;/p&gt;

&lt;p&gt;            var ex = ApiException.Create(new HttpResponseMessage(HttpStatusCode.Unauthorized));
            throw ex.Result;
        }&lt;/p&gt;

&lt;p&gt;        return Task.FromResult(true);
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;And, finally, a test looks like:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    [Test]
    public async Task GettingUnauthorizedThreeTimesForcesARetryAndWorks()
    {
        howManyFailsBeforeSuccess = MaxRetries;&lt;/p&gt;

&lt;p&gt;        var success = await mockViewModel.Object.Test(Operation);&lt;/p&gt;

&lt;p&gt;        Assert.IsTrue(success);
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;I’d like to ask you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;would you have done the &lt;code&gt;FakeViewModel&lt;/code&gt; approach in a different/better way?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks in advance!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 10 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wednesday</title>
  <guid>https://marcoscobena.com/?i=2018-1-10</guid>
  <description>&lt;p&gt;Back to pre-Christmas project —Avianca’s Xamarin.Forms app for Android &amp;amp; iOS—
I’m assigned a bug on gettings 401s because token refreshes don’t seem to work.
Our app uses Refit to build the gateways provided through intermediate NuGet
packages built from our server-side workmates.&lt;/p&gt;

&lt;p&gt;Applying a retrial politic to refresh token, I’ve discovered the need to&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;refresh the token, which internally creates a new &lt;code&gt;HttpClient&lt;/code&gt;, and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;recreate the gateways, to start working with such&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some projects ago my workmates and I came up with this handy method at our
&lt;code&gt;BaseViewModel&lt;/code&gt; —have simplified code a little bit for the sake of clearness:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    protected async Task&lt;T&gt; ExecuteInternetBoundCallAsync&lt;T&gt;(Func&lt;Task&lt;T&gt;&gt; operation, int pendingRetries = DefaultPendingRetries)  
    {  
        var isThereConnection = CheckInternetConnectionAndAlert();  
      
        if (!isThereConnection)  
        {   
            return default(T);  
        }  
      
        T result;  
        var retry = false;  
        IsBusy = true;  
      
        try  
        {  
            result = await operation();  
        }  
        catch (Exception ex) when (ex is Refit.ApiException)  
        {  
            result = default(T);  
      
            var apiException = ex as Refit.ApiException;  
      
            if (apiException.StatusCode == HttpStatusCode.Unauthorized &amp;amp;&amp;amp; pendingRetries &gt; 0)  
            {  
                retry = true;  
            }  
            else  
            {  
                HandleStatusCode(apiException.StatusCode);  
            }  
        }  
        catch  
        {  
            result = default(T);  
      
            // Alert on something went wrong  
        }  
        finally  
        {   
            IsBusy = false;  
        }  
      
        if (retry)  
        {  
            // Refresh token &amp;amp; gateways  
            result = await ExecuteInternetBoundCallAsync(operation, pendingRetries - 1);  
        }  
      
        return result;  
    }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;C# Exception catching fits so good here. So, from our VMs, we can do things
like:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;    var data = await ExecuteInternetBoundCallAsync&lt;DataModel&gt;(async () =&gt; await dataGateway.GetAsync());&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;; with the goal of making the call retry up to &lt;code&gt;DefaultPendingRetries&lt;/code&gt; times.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Oh! There’s too a new version of
&lt;a href="https://github.com/DevsDNA/WhenTheAppWasBuilt/"&gt;WhenTheAppWasBuilt&lt;/a&gt; 😎&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 09 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Tuesday</title>
  <guid>https://marcoscobena.com/?i=2018-1-9</guid>
  <description>&lt;p&gt;After some time with the idea in mind and some other more working on a
prototype, finally knowing when an app was built is an easy task. Since years
ago I’ve missed this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(Customer) Hey there’s a bug here&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(Me) OK, I’ll write it down to fix it; which version do you have?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(C) Mmm, where can I see that?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(M) Sorry you can’t; when did you install the app?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(C) Don’t remember, maybe a few days ago&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(M) OK, that’s fine&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I tried to repro the bug on the latest, going backward until I found the
problematic commit. This was a typical scenario.&lt;/p&gt;

&lt;p&gt;Today, you just initialize
&lt;a href="https://github.com/DevsDNA/WhenTheAppWasBuilt/"&gt;WhenTheAppWasBuilt&lt;/a&gt; and:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;(Customer) Hey there’s a bug here&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(Me) OK, I’ll write it down to fix it; which version do you have?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(C) Mmm, where can I see that?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(M) Could you please shake your device?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(C) Sure, here says it was built on yesterday, at 3:06 am&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(M) Perfect, you have the latest release from CD, thanks!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://media.giphy.com/media/3ohhwto87UNnoy3kic/giphy.gif" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;The idea is to enable WhenTheAppWasBuilt only while in development, and get rid
of it when going public.&lt;/p&gt;

&lt;p&gt;My previous implementation contained a way to show the alert when the screen was
oriented as landscape, but was not consistent with apps only supporting portrait
mode. Also, I tried detecting native shake gestures but default Xamarin.iOS’
&lt;code&gt;AppDelegate&lt;/code&gt; doesn’t inherit from &lt;code&gt;UIResponder&lt;/code&gt;, and was a little mess too.&lt;/p&gt;

&lt;p&gt;Thankfully found out &lt;a href="https://github.com/rdelrosario/xamarin-plugins/tree/master/DeviceMotion"&gt;DeviceMotion
plug-in&lt;/a&gt;
(thanks Rendy and co.!) which allows my initial idea from a different
perspective.&lt;/p&gt;

&lt;p&gt;In some other aspects, a few links I found handy after reinstalling Mac OS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/codemillmatt/visual-studio-mac-launcher"&gt;https://github.com/codemillmatt/visual-studio-mac-launcher&lt;/a&gt; —run it and
you’ll get a new/different VS app in your Dock&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.android.com/filetransfer/"&gt;https://www.android.com/filetransfer/&lt;/a&gt; —easily move files between your
computer and device, one way or another&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.xamarin.com/guides/android/getting_started/installation/android-emulator/xamarin-device-manager/"&gt;https://developer.xamarin.com/guides/android/getting_started/installation/android-emulator/xamarin-device-manager/&lt;/a&gt;
—I had read on Javi Suárez’s Twitter timeline it was useful so went on and
tried it (mainly to avoid installing back Android Studio), and definitely
recommend it to anyone 🙂 PS: it’s not true VS 7.4 is a requirement, as
stable one’s currently 7.3.* and it just works&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://gist.github.com/MarcosCobena/3b30e251249221478d1e17f02b6bab7b"&gt;https://gist.github.com/MarcosCobena/3b30e251249221478d1e17f02b6bab7b&lt;/a&gt; —my
Visual Studio for Mac custom key bindings, as feel much more confortable
with them&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wow, quite productive day!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 08 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Monday</title>
  <guid>https://marcoscobena.com/?i=2018-1-8</guid>
  <description>&lt;p&gt;Back from Christmas holidays with a cool task! Yeray asked me to play with
native Spotify SDKs 😙 Looking for a little bit it turns out Aaron Bockover
—this resembled me past days of Gnome’s Banshee— &lt;a href="https://github.com/abock/spotify-ios-sdk/tree/master/Xamarin"&gt;had already
done&lt;/a&gt; the initial
steps for iOS one, so took his job and continued it a little bit up to
initializing Spotify’s authentication all from Xamarin.iOS 😇&lt;/p&gt;

&lt;p&gt;I’ve spent the afternoon giving some love to our
&lt;a href="https://github.com/DevsDNA/GradientBoxView"&gt;DevsDNA.GradientBoxView&lt;/a&gt; control,
adding UWP support. Got it working in the end, but &lt;a href="https://github.com/xamarin/Xamarin.Forms/issues/1530"&gt;filled a
bug&lt;/a&gt; because
Xamarin.Forms’ Custom Renderers seem to not work from a third library.&lt;/p&gt;

&lt;p&gt;Nowadays I almost don’t open Visual Studio in Windows and had to work with its
2017 version for that UWP piece, and had the feeling after a few hours my
experience was buggy: don’t know why but the UWP lib. lost its references to
Xamarin.Forms NuGet package, updating such back and forth made the build to
break (restarting fixed it however), and saw my-self closing and opening it once
and again. I feel Mac version is more stable in terms of Xamarin development,
but am not a heavy Windows user these days.&lt;/p&gt;

&lt;p&gt;Pst! Don’t want to say it louder, but you can use below comments already 🙌&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 07 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Thursday</title>
  <guid>https://marcoscobena.com/?i=2018-1-4</guid>
  <description>&lt;p&gt;I’m working on a video-game. Actually have been working on it since Christmas
began. I think will keep posting details mostly during weekends —have an
agreement with my-self of not working on anything which could do in my daily
job.&lt;/p&gt;

&lt;p&gt;However, today I came across &lt;a href="https://www.youtube.com/watch?v=lql2yFXzKUs"&gt;this promising
video&lt;/a&gt; on creating Adventure Games
in Clojure (OK, you already know what sort of game it's), and a light turned on
in my head: I need something like scripting.&lt;/p&gt;

&lt;p&gt;Since am on an early stage and just have a quite small prototype, am in the
process of rewriting it with a brand new script-alike description: each
&lt;code&gt;GameFrame&lt;/code&gt; now has a &lt;code&gt;Script&lt;/code&gt; prop. which allows to do things like:&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Script = new Task(async () =&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;    {
        await Show("Suena la alarma: 7:00 am.");
        
        while (timesAlarmSnoozed &amp;lt; 3)
        {
            await InteractionWith(alarmClock);
            timesAlarmSnoozed++;
        }&lt;/p&gt;

&lt;p&gt;        await Show("Me levanté...");
    });
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;A few hours before I couldn’t handle this sort of logic, just more simpler ones.
Now, am thrilled with the incoming possibilities this’ offering 🤘&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 03 Jan 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Thursday</title>
  <guid>https://marcoscobena.com/?i=2017-12-21</guid>
  <description>&lt;p&gt;Maybe this’ totally newbie but I’ve used for the very first time git’s
fast-forward thing. For my future me: quite useful when you have a branch
outdated and there are no changes on it from the last merge back, so simply you
move it “fast forward”.&lt;/p&gt;

&lt;p&gt;Our app blends native stuff with WebViews, and have to detect when navigating to
key URLs in order to fire something native —read the VoIP stuff I was working
with Twilio. It turns out making a redirection in Angular makes the page update
its location (what you see in the browser’s bar) but doesn’t imply a 302 HTTP
code, so it’s not detected within the WebView. We’re still working on a fix for
this.&lt;/p&gt;

&lt;p&gt;I’ve learned how to integrate Disqus on my pure-JavaScript-powered website! The
bad news’ don’t know why but making tests in localhost made Disqus thought every
comment now’s made locally too :-S In the meantime have closed the discussion.
But there it’s at bottom!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 20 Dec 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wednesday</title>
  <guid>https://marcoscobena.com/?i=2017-12-20</guid>
  <description>&lt;p&gt;Since the nature of DevsDNA we use to work in a team made of people from our
company as well from others –customer included. We have dailies, and exchange
info through Skype, but always have had the feeling improvements made related to
code don’t arrive to others in order to follow the same path altogether.&lt;/p&gt;

&lt;p&gt;A few weeks ago had the idea of Dear Developer comments: small letters in the
middle of source code which explains to others how to handle things directly in
context. For instance, a few days ago we made a large merge of 3 RESX files into
a single one, and I particularly was afraid this wouldn’t get to others, so add
this chunk as a TXT along with the final RESX:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;code&gt;PLEASE_README_BEFORE_ADDING_STRINGS.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt;Dear Developer,&lt;/p&gt;

&lt;p&gt;From December 13th we've merged EN (Strings.resx, default one), ES and PT dictionaries to just one 
with everything in Spanish on it, as it comes from Zeplin. Please don't add anything else on it 
different to Spanish.&lt;/p&gt;

&lt;p&gt;In a later phase final customer will provide back English and Portuguese translations.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Marcos&lt;/p&gt;

&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;It has a few characteristic things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;it’s honest: I explain the issue, the reason for the change made;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it’s sweetie: from me to my rest of workmates, and those can contact me back
if want more information&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maybe this’ somewhat stupid in the era we live, but it’s the most simple way
have found out to tell others to take care of things as a team of people working
for the sake of quality. It resembled those README.txt from the 90s I read once
and again.&lt;/p&gt;

&lt;p&gt;PS: Anyone knows an UI-based RESX editor for Mac? I can do it directly in XML
but definitely an Excel-like editor is much more convenient. If it’s non
existent may be a good pet project to work on.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 19 Dec 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Tuesday</title>
  <guid>https://marcoscobena.com/?i=2017-12-19</guid>
  <description>&lt;p&gt;I’ve had the chance to add a small anim. in the page am working out. Which’s the
best easing function to fit? &lt;a href="http://easings.net"&gt;http://easings.net&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the middle of the day &lt;a href="https://bugzilla.xamarin.com/show_bug.cgi?id=61094"&gt;the disappearing caret
bug&lt;/a&gt; reproduced, and
followed Lluis steps to gather the IDE logs: (within VS for Mac) Help &gt; Open
Log Directory. I didn’t remember such this easy way to access every log in a
single folder, for the next time will have a look there before.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 18 Dec 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Monday</title>
  <guid>https://marcoscobena.com/?i=2017-12-18</guid>
  <description>&lt;p&gt;(Starting from today I’ll begin writting down What I Learned Today —WILT seems a
nice acronym.)&lt;/p&gt;

&lt;p&gt;It seems Twilio’s Xamarin components are somewhat abandoned: took 1.2.3 from
last days of Xamarin Components and crashes in Android, so back to 1.1; however,
can’t consume 1.1 in iOS because is pre-Unified API, so am using 1.2.3 in this
platform. But have done my first calls in both! 🎉&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 17 Dec 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>XAML things, merging RESX and 10.0.2.2 #XamarinForms</title>
  <guid>https://marcoscobena.com/?i=XAML-things--merging-RESX-and-10-0-2-2--XamarinForms-b7ab15533176</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# XAML things, merging RESX and 10.0.2.2 #XamarinForms&lt;/p&gt;

&lt;p&gt;Monday, 11th Finally I made the PR to ApiIntersect.   --------&lt;/p&gt;

&lt;h3&gt;XAML things, merging RESX and 10.0.2.2 #XamarinForms&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Monday, 11th&lt;/strong&gt;&lt;br /&gt;
Finally I made &lt;a href="https://github.com/xamarin/ApiInteresect/pull/3"&gt;the PR to ApiIntersect&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Redesigning a page I’ve found quite useful &lt;a href="https://developer.xamarin.com/guides/xamarin-forms/user-interface/styles/"&gt;Xamarin.Forms’ Styles&lt;/a&gt; to reduce the verbosity in XAML. Sometimes I just used to see a control as the main refactoring option; however, Styles are a good way too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, 12th&lt;/strong&gt;&lt;br /&gt;
Today’s been the &lt;a href="https://developer.xamarin.com/guides/xamarin-forms/application-fundamentals/triggers/"&gt;DataTrigger&lt;/a&gt; day 😊 Styling a page I needed something like iOS’ &lt;a href="https://developer.apple.com/documentation/uikit/uisegmentedcontrol"&gt;UISegmentedControl&lt;/a&gt;, without the borders. Trigger came quite handy when tinting items depending on its selection state:&lt;/p&gt;

&lt;p&gt;&lt;Label Text="Option 1"&gt;&lt;br /&gt;
 &lt;Label.Triggers&gt;&lt;br /&gt;
 &lt;DataTrigger TargetType=”Label” Binding=”{Binding Option1Selected}” Value=”false” &gt;&lt;br /&gt;
 &lt;Setter Property=”TextColor” Value=”Red” /&gt;&lt;br /&gt;
 &lt;/DataTrigger&gt;&lt;br /&gt;
 &lt;DataTrigger TargetType=”Label” Binding=”{Binding Option1Selected}” Value=”true” &gt;&lt;br /&gt;
 &lt;Setter Property=”TextColor” Value=”Green” /&gt;&lt;br /&gt;
 &lt;/DataTrigger&gt;&lt;br /&gt;
 &lt;/Label.Triggers&gt;&lt;br /&gt;
&lt;/Label&gt;However, I didn’t find a quick way to share those triggers among different controls: already know Styles would do the job, but have applied some others before to the same controls and can’t simply add the triggers to them. Am looking for another way. Anyone would know any idea?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wednesday, 13th&lt;/strong&gt;&lt;br /&gt;
LiveXAML is one the most powerful tools when styling UI with Forms. Period. Thanks to Yeray who bought licenses for everyone at DevsDNA 😙&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*ua4EiwJkYsq7uY6kVn6rZw.jpeg" alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/photos/0wdPEt-ufqs?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Todd Diemer&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;We were reported with an issue with i18n and, in the end, had to do with having 3 different RESX files not consistent between them. Google-ing for a merge tool for such I stumbled upon &lt;a href="https://stackoverflow.com/a/32103645"&gt;this answer&lt;/a&gt; which, taken into a new Console Project, solved the issue in a fraction of time.&lt;/p&gt;

&lt;p&gt;By the end of the day pushed some small changes to the &lt;a href="https://github.com/DevsDNA/GradientBoxView"&gt;GradientBoxView’s README&lt;/a&gt;, to clear things a little bit, and make it look more professional. I didn’t like nor the previous Example nor its screenshots, so made a new one for all. Looking for device frames I came up into &lt;a href="https://mockuphone.com"&gt;this site&lt;/a&gt; which just takes a screenshot (emulator is OK) and returns everything wrapped up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thursday, 14th&lt;/strong&gt;&lt;br /&gt;
I started the day by filling a bug on a little thing which once solved would make my days smoother:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="https://twitter.com/1Marcos2Cobena/status/941226957861244928"&gt;&lt;/a&gt;
  Continuing with the page design I needed a new ListView so in order to populate it with fake data while LiveXAMLing had to look again how used to do such. &lt;a href="https://stackoverflow.com/q/28738090"&gt;For the records&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When the ViewModel time came in created also a new snippet in VS so writting new props. ready for ReactiveUI would be quicker:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*P0WkSZ3_RGXIyIuefopVuA.png" alt="" /&gt;&lt;br /&gt;
Simply write $name$ in lowercase and finally make upper first letter in just the prop. declaration&lt;strong&gt;Friday, 15th&lt;/strong&gt;&lt;br /&gt;
Working on a new task with Twilio had to connect an Android app running in an emulator with an ASP.NET MVC server hosted locally, at 127.0.0.1:8080. Did you know pointing to 10.0.2.2 inside the emu forwards communication to the first? I didn’t, super handy.&lt;/p&gt;

&lt;p&gt;Our app needs to handle outgoing VoIP calls though Twilio, and the following days will be implementing the in-call screen, plus the attached service to handle the call it-self. Looks funny!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 17 Dec 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Lottie in UWP, NuGetizer-3000 and GradientBoxView #XamarinForms</title>
  <guid>https://marcoscobena.com/?i=Lottie-in-UWP--NuGetizer-3000-and-GradientBoxView--XamarinForms-2deeec043db8</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Lottie in UWP, NuGetizer-3000 and GradientBoxView #XamarinForms&lt;/p&gt;

&lt;p&gt;Monday, 4th I finally could spend some time on UWP for Lottie. Had to reinstall my whole Windows 10 + VS 2017 from scratch as latest UWP…   --------&lt;/p&gt;

&lt;h3&gt;Lottie in UWP, NuGetizer-3000 and GradientBoxView #XamarinForms&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Monday, 4th&lt;/strong&gt;&lt;br /&gt;
I finally could spend some time on UWP for Lottie. Had to reinstall my whole Windows 10 + VS 2017 from scratch as latest UWP SDK works with latest VS only (it saved also some extra space in my SSD which’s good too). Martijn’s already approved &lt;a href="https://github.com/martijn00/LottieXamarin/pull/114"&gt;the latest changes&lt;/a&gt; so expect to have it merged soon :-)&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*pPDzN59Ek9_pH88AUZyg8g.jpeg" alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/photos/B6e96uSIApE?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Kirstyn Paynter&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;I’m in the process of publishing our “DNAGradientBoxView” NuGets, and have learned about &lt;a href="https://github.com/NuGet/Home/wiki/NuGetizer-3000"&gt;NuGetizer 3000&lt;/a&gt;, an easy way to create NuGets directly from VS. To be honest it’s my first time creating packages, and am struggling a little bit, but expect to have this all sorted out soon. Am currently trying the &lt;a href="https://github.com/NuGet/Home/wiki/NuGetizer-Core-Scenarios#bait-and-switch"&gt;bait-and-switch technique&lt;/a&gt;, which adds platform-specific code by just referencing a NuGet from the PCL project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, 5th&lt;/strong&gt;&lt;br /&gt;
Hooray!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="https://twitter.com/1Marcos2Cobena/status/938003588827058176"&gt;&lt;/a&gt;
  I keep struggling with NuGet packaging –am focused on doing this with the IDE. After recreating the solution n + 1 times I’ve received again the same error, which seems half-fixed from their side:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/NuGet/Home/issues/4597"&gt;&lt;strong&gt;NuGetizer api intersection does not support referenced assemblies · Issue #4597 · NuGet/Home&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;Details about Problem There needs to be a way to specify reference assembly paths for the ApiIntersect tool. Currently…&lt;/em&gt;github.com&lt;/a&gt;&lt;a href="https://github.com/NuGet/Home/issues/4597"&gt;&lt;/a&gt;&lt;br /&gt;
It looks like Bait and Switch can’t be done from VS, so will go back to nuspec files and Terminal 🤷🏻‍♂️&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wednesday, 6th&lt;/strong&gt;&lt;br /&gt;
Bank holiday!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thursday, 7th&lt;/strong&gt;&lt;br /&gt;
Bank holiday too, but have spent some time updating my &lt;a href="http://marcoscobena.com/#/home"&gt;web&lt;/a&gt; and &lt;a href="http://marcoscobena.com/#/now"&gt;Now&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;I’ve kept with my determination to make NuGetizer-3000 work for my little project, and decided to clone &lt;a href="https://github.com/xamarin/ApiInteresect"&gt;ApiIntersect&lt;/a&gt; repo to debug the exception I got. Going through the code I’ve finally understood why Bait-and-switch doesn’t work in my scenario: it can’t work when the platform implementation inherits a class which’s out of the intersection with a .NET client profile. However, ApiIntersect wasn’t handling this fine –at least giving a hint on the issue–, so I’ll make a PR to improve this for others.&lt;/p&gt;

&lt;p&gt;And, finally, I published GradientBoxView! –also in &lt;a href="https://github.com/DevsDNA/GradientBoxView"&gt;GitHub&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.nuget.org/packages/DevsDNA.GradientBoxView"&gt;&lt;strong&gt;DevsDNA.GradientBoxView 1.0.1&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;An empowered Xamarin.Forms' BoxView with 2-color gradients.&lt;/em&gt;www.nuget.org&lt;/a&gt;&lt;a href="https://www.nuget.org/packages/DevsDNA.GradientBoxView"&gt;&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Friday, 8th&lt;/strong&gt;&lt;br /&gt;
Bank holiday!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 12 Dec 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Lottie, scroll’s headers and GradientBoxView #XamarinForms</title>
  <guid>https://marcoscobena.com/?i=Lottie--scroll-s-headers-and-GradientBoxView--XamarinForms-2e0afb12a4a</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Lottie, scroll’s headers and GradientBoxView #XamarinForms&lt;/p&gt;

&lt;p&gt;Monday, 27th Back to the Xamarin.Forms project after holidays :-) Yeray assigned me to polish a task on a Lottie anim. within a splash view…   --------&lt;/p&gt;

&lt;h3&gt;Lottie, scroll’s headers and GradientBoxView #XamarinForms&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;*Monday, 27th&lt;br /&gt;
*&lt;/em&gt;Back to the Xamarin.Forms project after holidays :-) Yeray assigned me to polish a task on a Lottie anim. within a splash view –the one in charge of logging in silently.&lt;/p&gt;

&lt;p&gt;We needed something like Task.WhenAll(lottieAnimation, loggingIn) but Lottie for Xamarin.Forms doesn’t reflect when the anim. ends. I worked on &lt;a href="https://github.com/martijn00/LottieXamarin/pull/114"&gt;this PR&lt;/a&gt; which adds a handy OnEnd event for both Android &amp;amp; iOS (anyone out there which would add UWP please?)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, 28th&lt;/strong&gt;&lt;br /&gt;
In the redesign task am working on have needed again a top view attached to parent’s top, with an underlying ScrollView/ListView flowing below. You want the scroll’s content to begin just below the attached view, so adding a padding seems perfect. Finally, I’ve given with one way to make this dynamic, through binding the attached’s height to the scroll’s padding, thanks to a Converter:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wednesday, 29th&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*1vbZ5v_Lhx5srfzqs8qF0w.jpeg" alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/photos/kP1AxmCyEXM?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ilnur Kalimullin&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;I’ve needed again something like a gradient view within Xamarin.Forms. Looking for existing NuGets &lt;a href="https://github.com/tbaggett/xfgloss"&gt;XFGloss&lt;/a&gt; looked pretty promising, although after playing a little bit with it’s much more complex than my needs. In the end I found some Custom Renderers for Android &amp;amp; iOS through Xamarin Forums and adapted such for a new GradientBoxView, which accepts both a start color and an end one, and is very handy for placing wherever may be needed. It’s in our minds to publish it from DevsDNA.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thursday, 30th&lt;/strong&gt;&lt;br /&gt;
Today has been the end of current sprint so have spent the whole day closing stuff.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, 1st&lt;/strong&gt;&lt;br /&gt;
Airplane to Tenerife to our Christmas Dinner! 🎉&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 05 Dec 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Design should worry us more. And just-Debug LiveXAML #Xamarin #XamarinForms</title>
  <guid>https://marcoscobena.com/?i=Design-should-worry-us-more--And-just-Debug-LiveXAML--Xamarin--XamarinForms-24c11327ccd6</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Design should worry us more. And just-Debug LiveXAML #Xamarin #XamarinForms&lt;/p&gt;

&lt;p&gt;Past Tuesday I spent a talk at Madrid on the mindset change have experienced last years working with people who really care on Design…   --------&lt;/p&gt;

&lt;h3&gt;Design should worry us more. And just-Debug LiveXAML #Xamarin #XamarinForms&lt;/h3&gt;

&lt;p&gt;Past Tuesday I spent a talk at Madrid on the mindset change have experienced last years working with people who really care on Design, mainly aimed at Xamarin ecosystem. One of my goals was to make people conscious of the need to get our hands dirtier when developing apps, as not the entire value comes from C# files.&lt;/p&gt;

&lt;p&gt;I’m sorry because it’s in pure Spanish (with some Andalusian), but it may be easy to follow up:&lt;/p&gt;

&lt;p&gt;If you see the practice exercise where give out paper to everyone, it’s basically the template I made back in February and which nowadays use to implement apps. You can find it &lt;a href="http://marcoscobena.com/#/app-screen-creation-template"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*_Kh8TzABRb5lAqAz69Ftnw.jpeg" alt="" /&gt;&lt;br /&gt;
Photo by &lt;a href="https://unsplash.com/photos/FwF_fKj5tBo?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Alice Achterhof&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;Taking advantage of going to Madrid I spent Tuesday and Wednesday mornings working at Google Campus. I thought there could be any issue –slow Wi-Fi, no free plug-ins, no empty space at all, etc.; however, everything went smooth and would definitely work there again for 1 or 2 days –no more because of my back, I thank any elaborated chair which cares of it.&lt;/p&gt;

&lt;p&gt;I finally gave a try to LiveXAML: liked it a lot. Initially was just adding the NuGet package with the idea of removing it after PR-ing my branch back but find out a way to make StyleCop not bark with LiveXAML’s minified.cs: after looking for different solutions, the one I most liked was telling first to avoid such file, as if it was a design-generated one. It can be done by adding this to Settings.StyleCop XML file:&lt;/p&gt;

&lt;p&gt;&lt;Parsers&gt;&lt;br /&gt;
 &lt;Parser ParserId=”StyleCop.CSharp.CsParser”&gt;&lt;br /&gt;
 &lt;ParserSettings&gt;&lt;br /&gt;
 &lt;CollectionProperty Name=”GeneratedFileFilters”&gt;&lt;br /&gt;
 [...]&lt;br /&gt;
 &lt;!-— Avoid LiveXAML’s minified.cs too --&gt;&lt;br /&gt;
 &lt;Value&gt;minified.cs$&lt;/Value&gt;&lt;br /&gt;
 &lt;/CollectionProperty&gt;&lt;br /&gt;
 &lt;/ParserSettings&gt;&lt;br /&gt;
 &lt;/Parser&gt;&lt;br /&gt;
&lt;/Parsers&gt;Adding LiveXAML’s NuGet doesn’t touch any DLL, adding references, but adds an Import step while compiling, so I wanted as well to get rid of it when not being in Debug mode. Some CSPROJ magic and done (pay attention to the second condition):&lt;/p&gt;

&lt;p&gt;&lt;Import Project=”..\..\packages\LiveXAML.1.3.8\build\LiveXAML.targets” Condition=”Exists(‘..\..\packages\LiveXAML.1.3.8\build\LiveXAML.targets’) And ‘$(Configuration)’==’Debug’” /&gt;And voilá! LiveXAML’s just here in Debug, and nobody will notice it in Release 😇&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 14 Nov 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Just-PCL OpenID authentication in #XamarinForms, Firebase and limited resources</title>
  <guid>https://marcoscobena.com/?i=Just-PCL-OpenID-authentication-in--XamarinForms--Firebase-and-limited-resources-53591bb20887</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Just-PCL OpenID authentication in #XamarinForms, Firebase and limited resources&lt;/p&gt;

&lt;p&gt;10 (ten) years after my first date with OpenID protocol, last week it was back to my life. By the former I reimplemented a bridge to…   --------&lt;/p&gt;

&lt;h3&gt;Just-PCL OpenID authentication in #XamarinForms, Firebase and limited resources&lt;/h3&gt;

&lt;p&gt;10 (ten) years after my first date with OpenID protocol, last week it was back to my life. By the former I reimplemented a bridge to authenticate users at public high schools, in PHP (with classes) 🤷🏻‍♂️ Also, I needed to learn a new path to Push Notifications with Azure. And some 1-to-1 consultancy hours.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*sxQyCvfHK09jpsMI7QcMEg.jpeg" alt="" /&gt;&lt;br /&gt;
The start line –Photo by &lt;a href="https://unsplash.com/photos/JBxsARdTrxY?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Goh Rhy Yan&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;My task this week was to enable OpenID authentication in the Xamarin.Forms app am currently working with. My mates already had set an Identity Server up so the pending stuff was in the client side.&lt;/p&gt;

&lt;p&gt;Initially I gave a try to Xamarin.Auth. To sum up –and be honest– it didn’t work for us. I don’t know exactly where within OpenID protocol the hand-shake breaks but, we moved to a different solution. (My guess comes from how Identity Server publishes the OpenID endpoint but I don’t really know, just suspecting.)&lt;/p&gt;

&lt;p&gt;Yeray sent me a pair of links where anyone was implementing that communication with a different package: IdentityModel. It came as fresh milk for me because:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;the user was also consuming an Identity Server, and&lt;/li&gt;
&lt;li&gt;there was no need to touch platforms, just PCL!In just a sentence, it’s all about Forms’ WebView being set with an initial authorization URL and, by hooking successive ones, you carry the entire process without going down to Custom Renderers. Isn’t it beauty? 😍&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, this’ the way to gather initial URL –AuthorizeRequest belongs to IdentityModel NuGet:&lt;/p&gt;

&lt;p&gt;public string GenerateAuthorizeUri()&lt;br /&gt;
{&lt;br /&gt;
 var authorizeRequest = new AuthorizeRequest(AuthorizeUri);var requestValues = new Dictionary&lt;string, string&gt;();&lt;br /&gt;
 requestValues.Add(“client&lt;em&gt;id”, ClientId);&lt;br /&gt;
 requestValues.Add(“response&lt;/em&gt;type”, ResponseType);&lt;br /&gt;
 requestValues.Add(“scope”, Scope);&lt;br /&gt;
 requestValues.Add(“redirect_uri”, RedirectUri);&lt;br /&gt;
 requestValues.Add(“nonce”, Guid.NewGuid().ToString(“N”));currentCrossSiteRequestForgeryToken = Guid.NewGuid().ToString(“N”);requestValues.Add(“state”, currentCrossSiteRequestForgeryToken);var authorizeUri = authorizeRequest.Create(requestValues);return authorizeUri;&lt;br /&gt;
}I’ve seen my-self checking many times &lt;a href="https://connect2id.com/learn/openid-connect"&gt;this OpenID guide&lt;/a&gt; on how the protocol happens step by step.&lt;/p&gt;

&lt;p&gt;The last chunk of the week I stumbled upon Push Notifications, with Azure’s Notification Hub. I’ve set this plenty of times during the last years; however, it’s been my first relying in Firebase, for Android. I always used GCM component from Xamarin, but it’s been ~4 years since the last update 👹&lt;/p&gt;

&lt;p&gt;Apart from I messed up with Android’s manifest and put the receiver stuff out of the application node without noticing (thanks Ciani!), it was a joy to configure. You can first send foo notifications from Firebase console and, when everything is OK, jump to Azure. Don’t became so much crazy gathering how to connect this with Firebase, you just need the legacy key provided from this last one’s settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.xamarin.com/samples/monodroid/Firebase/FCMNotifications/"&gt;This Xamarin guide&lt;/a&gt; on Firebase for Android was so helpful for me as well.&lt;/p&gt;

&lt;p&gt;After all these things, my learning from previous week come from a three hours consultancy for a local company which develop a mobile app with Xamarin. They came to see us to one of the Xamarin Dev Days from a year ago and, without previous knowledge, jumped into the world of Xamarin.Forms.&lt;/p&gt;

&lt;p&gt;It amazed me a lot seeing what they’ve achieved with so much limited resources. We use to think our job is kind off shit. Sometimes need someone from outside to tell us it’s great having into account our start line. And how much humble people with limited resources is…&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 07 Nov 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Unit Testing #XamarinForms controls, the simplest SwipeGestureRecognizer and no more…</title>
  <guid>https://marcoscobena.com/?i=Unit-Testing--XamarinForms-controls--the-simplest-SwipeGestureRecognizer-and-no-more--2ecf7d448fbf</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Unit Testing #XamarinForms controls, the simplest SwipeGestureRecognizer and no more…&lt;/p&gt;

&lt;p&gt;Following with previous week, I’ve kept with the carousel control. However, I started with one weird bug where a navigation between two…   --------&lt;/p&gt;

&lt;h3&gt;Unit Testing #XamarinForms controls, the simplest SwipeGestureRecognizer and no more Debug.WriteLine()&lt;/h3&gt;

&lt;p&gt;Following with previous week, I’ve kept with the carousel control. However, I started with one weird bug where a navigation between two Pages was taking too long.&lt;/p&gt;

&lt;p&gt;It’s funny because every time I stumble upon these things I go deep in my code and start measuring time between breakpoints –how handy is VS for Mac’s Breakpoint Actions:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*_RCs4suCdxCfUk6PWiIqfA.png" alt="" /&gt;&lt;br /&gt;
Instead of plenty of Debug.WriteLine() this came to save our lifesAnd, finally, after 1 or 2 h of no success I went through Xamarin Profiler and BOOM the issue was in a JSON deserialization process. Fixing was quick because decided to move away from such JSON and create the hierarchy on demand in C# –we weren’t expecting that to change in a dynamic fashion.&lt;/p&gt;

&lt;p&gt;So, first learning of the week, by Monday: every time I’ll have another performance issue&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I’ll rely on Xamarin Profiler and, if such didn’t help, then&lt;/li&gt;
&lt;li&gt;will debug manuallyAs I was telling above I kept with the carousel. Mainly my task was to add a cyclic behavior and support lower than 3 items. Also, in the end, allow to specify which item’s selected from the beginning.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Making the carousel cyclic was an easy task. Since the entire thing relies on an int index a few module ops. were needed. The complex stuff came with supporting lower than 3 items. I started to feel pain on any modification made in the future breaking my code so added a new nUnit project in order to protect our-selves from those.&lt;/p&gt;

&lt;p&gt;As the control heavily relies in animations, thus Xamarin.Forms libs, I reentered into &lt;a href="https://github.com/jonathanpeppers/Xamarin.Forms.Mocks"&gt;Jonathan Peppers’ Xamarin.Forms.Mocks&lt;/a&gt; NuGet. It helps you test straightforward your code with cool things as making every animation complete instantly. It saved my day.&lt;/p&gt;

&lt;p&gt;Also, making the CarouselControl offer a well-known binding scenario made me testing it quite easy and joyable:&lt;/p&gt;

&lt;p&gt;[Test]&lt;br /&gt;
 public void FirstItemIsFocusedByDefaultFromThree()&lt;br /&gt;
 {&lt;br /&gt;
 AddItems(3);  &lt;/p&gt;

&lt;p&gt;carouselControl.ItemsSource = items;  &lt;/p&gt;

&lt;p&gt;Assert.AreEqual(items[0], carouselControl.SelectedItem);&lt;br /&gt;
 }Finally, I had to support swipe gestures so at Page level any left or right swipe is directly taken as a left/right movement for the carousel. I became a little bit crazy looking for &lt;a href="https://github.com/xamarin/Xamarin.Forms/pull/1007/files"&gt;different swipe gesture implementations&lt;/a&gt; but finally, reusing PanGestureRecognizer was much easier and cleaner (ThresholdToFireSwipeGesture takes 100):&lt;/p&gt;

&lt;p&gt;Learnings? Things can be easier than we think –or we think too complex from the semaphore. Tests are helpful to feel confidence, and avoids debugging time. VS 4 Mac still has nice surprises to discover, like those beautiful “break”points :-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 30 Oct 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>The Carousel party in #Xamarin Forms</title>
  <guid>https://marcoscobena.com/?i=The-Carousel-party-in--Xamarin-Forms-70b96a692124</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# The Carousel party in #Xamarin Forms&lt;/p&gt;

&lt;p&gt;Back from my on-site visit I’ve joined a new Xamarin.Forms project –which’s both cool and engaging, since I wanted that change after being…   --------&lt;/p&gt;

&lt;h3&gt;The Carousel party in #Xamarin Forms&lt;/h3&gt;

&lt;p&gt;Back from my on-site visit I’ve joined a new Xamarin.Forms project –which’s both cool and engaging, since I wanted that change after being somewhat like a year with pure Xamarin.Android/iOS.&lt;/p&gt;

&lt;p&gt;My main task’s been to create a carousel control, where 3 items are showed at the same time and the one in the middle is aesthetically focused. Something similar to Finder’s Cover View, iTunes’ album carousel or this tvOS effect:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*hQcO0Qjsu8WeVbK6487dfQ.gif" alt="" /&gt;&lt;br /&gt;
🤔How many items are rendered at the same time? 3? 4? 5? maybe more?Before reading, please think about above question (just below the GIF).&lt;/p&gt;

&lt;p&gt;The answer is 4: if you’d see in slow-motion the animation just 4 items are rendered at a time, when most. This’ something I’ve learnt from making video-games, which’s part of my past as developer: what you see can largely differ from how things are actually made, and focus must be on the first.&lt;/p&gt;

&lt;p&gt;So, back to Xamarin.Forms, just playing with 4 ContentViews I can make the animations go back and forth. Let me show you just the case when user wants to go left:&lt;/p&gt;

&lt;p&gt;void Handle_BtnLeftTapped(object sender, System.EventArgs e)&lt;br /&gt;
 {&lt;br /&gt;
 if (thereAreAnimationsInProgress)&lt;br /&gt;
 {&lt;br /&gt;
 return;&lt;br /&gt;
 }  &lt;/p&gt;

&lt;p&gt;if (leftViewItemsSourceIndex &amp;lt; 0)&lt;br /&gt;
 {&lt;br /&gt;
 return;&lt;br /&gt;
 }  &lt;/p&gt;

&lt;p&gt;thereAreAnimationsInProgress = true;  &lt;/p&gt;

&lt;p&gt;currentlyHiddenView.TranslationX = -1 * 2 * offsetBetweenBoxes;  &lt;/p&gt;

&lt;p&gt;if (leftViewItemsSourceIndex == 0)&lt;br /&gt;
 {&lt;br /&gt;
 currentlyHiddenView.BindingContext = null;&lt;br /&gt;
 }&lt;br /&gt;
 else&lt;br /&gt;
 {&lt;br /&gt;
 currentlyHiddenView.BindingContext = ItemsSource.ElementAt(leftViewItemsSourceIndex - 1);&lt;br /&gt;
 }  &lt;/p&gt;

&lt;p&gt;Task.WhenAll(&lt;br /&gt;
 currentlyHiddenView.TranslateTo(currentlyHiddenView.TranslationX + offsetBetweenBoxes, 0),&lt;br /&gt;
 currentlyHiddenView.FadeTo(leftAndRightViewsOpacity),  &lt;/p&gt;

&lt;p&gt;currentlyLeftView.TranslateTo(currentlyLeftView.TranslationX + offsetBetweenBoxes, 0),&lt;br /&gt;
 currentlyLeftView.ScaleTo(centerBoxScaleFactor),&lt;br /&gt;
 currentlyLeftView.FadeTo(1),  &lt;/p&gt;

&lt;p&gt;currentlyCenterView.TranslateTo(currentlyCenterView.TranslationX + offsetBetweenBoxes, 0),&lt;br /&gt;
 currentlyCenterView.ScaleTo(1 / centerBoxScaleFactor),&lt;br /&gt;
 currentlyCenterView.FadeTo(leftAndRightViewsOpacity),  &lt;/p&gt;

&lt;p&gt;currentlyRightView.TranslateTo(currentlyRightView.TranslationX + offsetBetweenBoxes, 0),&lt;br /&gt;
 currentlyRightView.FadeTo(0))&lt;br /&gt;
 .ContinueWith(_ =&gt;&lt;br /&gt;
 {&lt;br /&gt;
 var temporalRightView = currentlyRightView;&lt;br /&gt;
 currentlyRightView = currentlyCenterView;&lt;br /&gt;
 currentlyCenterView = currentlyLeftView;&lt;br /&gt;
 currentlyLeftView = currentlyHiddenView;&lt;br /&gt;
 currentlyHiddenView = temporalRightView;  &lt;/p&gt;

&lt;p&gt;leftViewItemsSourceIndex--;  &lt;/p&gt;

&lt;p&gt;SetSelectedItemAndUpdateTitle();  &lt;/p&gt;

&lt;p&gt;thereAreAnimationsInProgress = false;&lt;br /&gt;
 });&lt;br /&gt;
 }The code I think’s self-explanatory:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;currently*View handles each of the 4 views we told before, and&lt;/li&gt;
&lt;li&gt;temporalRightView, since we want to move left, is the 4th in the row which’s placed hidden at right side, just before executing the storyboardPacked in a single XAML and XAML.CS tuple we have a carousel-alike control which, too, exposes ItemsSource and SelectedItem bindings, very handy to play well outside.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to write XAML it turned out Xamarin’s Previewer didn’t work for me anymore after updating to last stable. So, I gave a try to Gorilla Player. I’ve successfully worked on the carousel control with Gorilla, and performed quite well since is totally isolated from Visual Studio –I work in Mac.&lt;/p&gt;

&lt;p&gt;However, our ContentPages inherit ones linked to ReactiveUI, so such simply doesn’t work, which’s feasible. In the middle of the week I came into this article on LiveXAML, and saw the sky open:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="https://twitter.com/1Marcos2Cobena/status/920714659010891776"&gt;&lt;/a&gt;
  Jim couldn’t use Gorilla so I don’t have a pre-comparison on both but I’ll definitely give it a try. I have a hope this yes will render things other can’t nowadays.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve remembered this week that widely-known recurrent sentence from Steve Jobs: points are linked looking back: I was able to make this implementation because I had the chance to work on games.&lt;/p&gt;

&lt;p&gt;Whatever we do nowadays, will serve us in the future ☺️&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 24 Oct 2017 22:00:00 GMT</pubDate>
</item>
<item>
  <title>“Design should worry us more than code” #Xamarin</title>
  <guid>https://marcoscobena.com/?i=-Design-should-worry-us-more-than-code---Xamarin-fecc2b436e08</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# “Design should worry us more than code” #Xamarin&lt;/p&gt;

&lt;p&gt;This’ the title for the talk I’m giving on November 7th at Madrid:   --------&lt;/p&gt;

&lt;h3&gt;“Design should worry us more than code” #Xamarin&lt;/h3&gt;

&lt;p&gt;This’ the title for the talk I’m giving on November 7th at Madrid:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="https://twitter.com/XDevMadrid/status/918158111571095552"&gt;&lt;/a&gt;
  Thanks Dachi for the chance, since I’ve wanted this opportunity for long time now, and the day arrived :-)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The talk won’t be on how to design mobile apps, it isn’t targeted for pure Designers. It’ll drive us through how Developers can move closer to Designers in order to leverage what for me have direct impact in our final users: what they actually see.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*-UzVWdVAqeHlyzWMXDqCgw.jpeg" alt="" /&gt;&lt;br /&gt;
What you see vs. what they’re playing (&lt;a href="https://www.flickr.com/photos/11152520@N03/5504054428/in/photolist-9onHC9-5u5We-52uvA-3kCBco-9iRBQc-e4RfKs-PHrAk-a7KUBL-a7KXJW-a7H3Vi-brh9wV-g79Efk-52g32C-eB5X9f-9niaRu-5m47EH-4rJq5A-6oxw15-qRqitz-qz1fm3-qjUiY3-NuZaH-c2E1VU-c2DSQu-A9X5S-c2E4p3-9nf8nr-9niaSQ-6eEUF7-qRqjbB-8cRhFs-9niaFA-9nf8rp-82LH8n-9niaWb-9niaQ1-aArBNz-eJhBGW-c2E4CG-c2E1mS-9jxxY-eaAGae-oFcebk-c2E4X9-c2DSgo-4EwMDP-fKzEMh-c2DVU5-7XcSZ-9jxNW"&gt;Radcliffe Orchestra rehearsing&lt;/a&gt;)Why linked to Xamarin? Mainly because it’s my main toolset nowadays, and Xamarin.Forms specifically is reaching a point where complex UIs can be achieved, so I feel we need to go one step further.&lt;/p&gt;

&lt;p&gt;Also, studying Graphic Design has put me on a position where can better understand Designers, and why their decisions impact what we do, but almost no one talks about &lt;em&gt;how&lt;/em&gt; we do it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;On last week on-site visit, I spent 3 days at Inditex, mainly teaching how to find both performance and memory leak issues with Xamarin Profiler. As it always happens, have learnt a lot too, and come quite happy with the level people are achieving with Xamarin.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 17 Oct 2017 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Senseful StyleCop for Visual Studio –Mac and Windows #Xamarin</title>
  <guid>https://marcoscobena.com/?i=Senseful-StyleCop-for-Visual-Studio--Mac-and-Windows--Xamarin-e02fdf15d039</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Senseful StyleCop for Visual Studio –Mac and Windows #Xamarin&lt;/p&gt;

&lt;p&gt;I’ve switched from Beezy to prepare material for some days I’m spending this week on-site. More specifically how to improve performance in…   --------&lt;/p&gt;

&lt;h3&gt;Senseful StyleCop for Visual Studio –Mac and Windows #Xamarin&lt;/h3&gt;

&lt;p&gt;I’ve switched from Beezy to prepare material for some days I’m spending this week on-site. More specifically how to improve performance in Xamarin.Forms on Android.&lt;/p&gt;

&lt;p&gt;At the beginning of past week Yeray proposed me to invest time solving how to enable StyleCop for Mac and Windows with our own ruleset. We have such defined within a document uploaded to Slack but, we’re humans, sometimes simply don’t remember those.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*6it0DME2FbFhD0kWccl4Ag.jpeg" alt="" /&gt;&lt;br /&gt;
&lt;a href="https://www.flickr.com/photos/svenwerk/3973734146/in/photolist-749qHG-sawuca-4RkSLC-mPECsq-gYZ2MJ-5vX8W3-7WoTud-qmcBZT-rjhD93-WV9dZJ-6RuyMp-ffrMNW-9GMpXp-ffcv9M-dpZ5T2-6NPoaB-6dBMB-8DagT3-4Fbjbd-dhi9Sx-7tMJ1u-eGsEG9-e2v1Uv-9rbBRk-5FxAxc-8dnePX-nZfN9W-59k9Ld-rcLrra-57hBUQ-ffpQNq-hGE67y-9MWPF1-oNz8L-rwDQmJ-SwVDdo-bwmCe6-ffcw2v-bwHzYB-9AdWdA-4PUE1h-85tQJC-8VBSCT-bwHzV6-iCPqut-ffcGgz-jKp1ME-ffcuMH-jAjca-UqTKLL"&gt;Order&lt;/a&gt;It’s turned out actually was a lot easier to have StyleCop barking on rules not followed than defining the entire ruleset. StyleCop.MSBuild NuGet package does the first for us, just add it to every project and done. However, StyleCop.Settings XML is another world. I resigned from touching it manually but with the GUI provided in the package itself (tools subfolder). Visual Studio for Mac has an extension which allowed to do such in Mac but is broken nowadays.&lt;/p&gt;

&lt;p&gt;So turned Windows on in Parallels and went with that GUI. My only previous experience with StyleCop had almost every rule enabled (and leveraged as errors) and remember it more blocker than helpful, so disabled all of them and just enabled back those which conform our existing guidelines. What we really pursue is code looking familiar for every of us.&lt;/p&gt;

&lt;p&gt;As final: remember to place Settings file at the Solution level because replacing default one at packages will obviously not work in builds envs. I didn’t notice this at the beginning 👼&lt;/p&gt;

&lt;p&gt;The rest of the week I’ve been most of the time with Xamarin Profiler, working out my on-site visit. I’m writing down some notes on feelings have had using it, and found plenty of space to improve. I promised Rodrigo Moya I’d send him an e-mail with all that, serve this as my commitment. Thanks Rodrigo for giving me support this week, really appreciated.&lt;/p&gt;

&lt;p&gt;Investing on tools’ definitely worthy from time to time. Just having such StyleCop rules in a few clicks translates into more readable code. And it just took me half a day.&lt;/p&gt;

&lt;p&gt;Also, profiling Xamarin.Forms apps, I came to the idea again that most of time issues why things go slow, don’t work or consume so much memory come from our faults. I’ve been thinking on the idea of adding a quick profiling time to every sprint story, or sprint-wide. However, it gives more value to directly look for a specific problem. I’ve recalled this sentence my father –I think– used to tell me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Who doesn’t know where to go is in danger to get lost
  And that’s. All.&lt;/p&gt;
&lt;/blockquote&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 10 Oct 2017 22:00:00 GMT</pubDate>
</item>
<item>
  <title>The #Android’s FAB which liked to follow BottomBar #Xamarin</title>
  <guid>https://marcoscobena.com/?i=The--Android-s-FAB-which-liked-to-follow-BottomBar--Xamarin-57a805f646</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# The #Android’s FAB which liked to follow BottomBar #Xamarin&lt;/p&gt;

&lt;p&gt;I’ve been thinking more and more from my last 5 years or so the following: if our users just touch Design, why do we become so crazy with…   --------&lt;/p&gt;

&lt;h3&gt;The #Android’s FAB which liked to follow BottomBar #Xamarin&lt;/h3&gt;

&lt;p&gt;I’ve been thinking more and more from my last 5 years or so the following: if our users just touch Design, why do we become so crazy with source code? Why do we invest so much time in improving the backend if the frontend is actually what we perceive? It turns out I’ve been last week with an UI Review in Beezy for Android, so had time to think on the first as well.&lt;/p&gt;

&lt;p&gt;Part of that review has been to fix some wrong margins/paddings around items within RecyclerViews. We were setting such in code which means units are expressed in pixels, although Design asked for 16 dps. I’ve learnt how to reference in code units originally in dps, also taking advantage of dimens.xml files. This snippet shows how to gather 16 dps in pixel-size on an actual device:&lt;/p&gt;

&lt;p&gt;// 'v' stands for a View&lt;br /&gt;
var sixteenDps = TypedValue.ApplyDimension(ComplexUnitType.Dip, 16, v.Resources.DisplayMetrics);Android’s API uses to work on pxs (int, also, not float), so this is super handy. There’s also this other way to bring dps into action coming from dimens.xml:&lt;/p&gt;

&lt;p&gt;var offset = (int)view.Resources.GetDimension(Resource.Dimension.default&lt;em&gt;margin&lt;/em&gt;padding);If you mix both above, you have that. This stupid thing has allowed to start a standardization process heading a single point of truth for this as well 👌🏼&lt;/p&gt;

&lt;h4&gt;The BottomBar shyness with a coupled FAB&lt;/h4&gt;

&lt;p&gt;I’ve been tweeting during this week on this thing. The Design Review also asked to hide BottomBar when scrolling down the RecyclerView –as &lt;a href="https://material.io/guidelines/components/bottom-navigation.html#bottom-navigation-behavior"&gt;Material Design suggests&lt;/a&gt;. After digging on this I came up with the idea there’s no easy-to-go way with our current UI hierarchy:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/1000/1*rP3mHI0tOOds53QlT9AIww.png" alt="" /&gt;&lt;br /&gt;
Xamarin Inspector (Workbooks) to rescue once again&lt;br /&gt;
A FAB which could be attached to the BottomBar needs –AFAIK– to live in the same plane as the second, together with the RecyclerView, and everything on direct top of a CoordinatorLayout. Such and the BottomBar now are (I made an initial refactoring past sprint), and second’s shyness now works, but FAB was feeling alone…&lt;/p&gt;

&lt;p&gt;So, I said: why don’t I animate it manually? Trade-off. And it worked! Thanks to accessing BottomBar’s source code could see the anims. durations, and this’ the final result:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*r36D_mUE1Q9f44qI--jLhg.gif" alt="" /&gt;&lt;br /&gt;
Pay attention to how one looks like pushing the other 🤠The initial animations I played with where Animation objects run with View.StartAnimation(), until I noticed the reverse flavor needed to be done manually, and didn’t like the result. So it ended being this way:&lt;/p&gt;

&lt;p&gt;Super simple, super easy to understand.&lt;/p&gt;

&lt;p&gt;Well, this week I’ve double checked that it’s important how you create an UI hierarchy from the very beginning –actually it’s important to spend time on it. If not, there’s the need to look for workarounds. Also, I’ve felt how standardization at an UI level also leverages consistency along your app, which in the end is what you and I see, and touch.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 03 Oct 2017 22:00:00 GMT</pubDate>
</item>
<item>
  <title>The refreshes bug and i18n</title>
  <guid>https://marcoscobena.com/?i=The-refreshes-bug-and-i18n-3d9ad2a9421b</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# The refreshes bug and i18n&lt;/p&gt;

&lt;p&gt;Past week’s been all about translation (thankfully didn’t get lost 👏🏼). On Monday I fixed one bug in Beezy which’s been there around…   --------&lt;/p&gt;

&lt;h3&gt;The refreshes bug and i18n&lt;/h3&gt;

&lt;p&gt;Past week’s been all about translation (thankfully didn’t get lost 👏🏼). On Monday I fixed one bug in Beezy which’s been there around since the early beginnings.&lt;/p&gt;

&lt;p&gt;On this last one, and to explain it super quickly, views were getting updated more than needed –on Android &amp;amp; iOS. This’ our architecture:&lt;/p&gt;

&lt;p&gt;API (cloud) 🔄 Akavache (&lt;code&gt;IObservable&lt;/code&gt; flavour) 🔄 ViewModels 🔄 Views&lt;/p&gt;

&lt;p&gt;Due to using Akavache in its reactive way, data use to come first from cache and second from API, so &lt;code&gt;PropertyChanged&lt;/code&gt;s were being fired at least twice in such cases. If it turns out VMs were exposing data to views with &lt;code&gt;ObservableCollection&lt;/code&gt; (we have our own implementation), it was common to see the final cell to support up to four or more refreshes. Issues with that? Ugly flickering effects and needless performance rise.&lt;/p&gt;

&lt;p&gt;My-self when the app flickersHowever, on Monday could made a fix to solve just that:&lt;/p&gt;

&lt;p&gt;void AddCommunities(IEnumerable&lt;GroupModel&gt; communities)&lt;br /&gt;
{&lt;br /&gt;
 if (communities == null || !communities.Any())&lt;br /&gt;
 return;// 1st time we just add all of them&lt;br /&gt;
 if (!_communities.Any())&lt;br /&gt;
 {&lt;br /&gt;
 Communities.AddRange(communities);&lt;br /&gt;
 return;&lt;br /&gt;
 }var existingCommunities = _communities.ToList();foreach (var community in communities)&lt;br /&gt;
 {&lt;br /&gt;
 var existingCommunity = existingCommunities.FirstOrDefault(c =&gt; c.GroupId == community.GroupId);if (existingCommunity != null)&lt;br /&gt;
 {&lt;br /&gt;
 // Criteria to decide whether an existing community should be overriden by a later one&lt;br /&gt;
 var shouldOverrideExistingOne = !existingCommunity.Title.Equals(community.Title);if (shouldOverrideExistingOne)&lt;br /&gt;
 Communities.Replace(existingCommunity, community);&lt;br /&gt;
 else&lt;br /&gt;
 continue;&lt;br /&gt;
 }&lt;br /&gt;
 else&lt;br /&gt;
 Communities.Add(existingCommunity);&lt;br /&gt;
 }&lt;br /&gt;
}Such applies for communities, our model, but the important piece is &lt;code&gt;shouldOverrideExistingOne&lt;/code&gt;: the criteria to decide whether a new version should override previous one. Now it doesn’t matter whether data comes more than once, there’s only one refresh in UI. I’m a happier person ☺️&lt;/p&gt;

&lt;p&gt;Regarding i18n, most of the work has been to carefully take strings out of code to our RESX files. But I’ve learned a few interesting things in this process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DoD should comprise i18n: doing this in each task is a less than an hour job. It took me four working days to go all over the entire codebase –and just iOS is covered. With the lack of confidence on covering the 100% strings. (Another option is at least a small subtask)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It anyone had to do this, my mate Sergio had a clever idea:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="https://twitter.com/1Marcos2Cobena/status/910109009658761216"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the middle of the process Matthew announced this lovely feature:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="https://twitter.com/matthewrdev/status/910665130727182336"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Converters –MvxValueConverter actually– have been a great solution to cover i18n in enums which are directly taken to UI: not only can translate during conversion, but also can gather back original enum by converting back. Apart’s been a good refactoring process tooThe refreshes bug finally was a lot easier to fix: instead of looking to superb solutions, sometimes I should just concentrate on a single point, and give such an elegant exit. This’ my learning for the week.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 24 Sep 2017 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Abanico, a few hours with Xamarin.Forms and SkiaSharp</title>
  <guid>https://marcoscobena.com/?i=abanico-a-few-hours-with-xamarin-forms-and-skiasharp</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's been a month and a half since I started to dig into the world of Graphic Design. The first module introduced, among other things, the notion of color wheel. And I felt the need to make my-self one of those :-)&lt;/p&gt;

&lt;p&gt;I've always kept an eye into &lt;a href="https://github.com/mono/SkiaSharp/"&gt;SkiaSharp&lt;/a&gt;, a cross-platform 2D library to make fast vector graphics. By one side the need, by other the opportunity to play with new stuff. And a few hours later, I have a hue color wheel to discover new palettes, introduce your children into the world of color or simply enjoy the "superb" opening animation:&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-868 aligncenter" src="items/images/jun-21-2017-22-47-38.gif" alt="jun-21-2017 22-47-38" width="320" height="258" /&gt;
&lt;em&gt;Abanico in action (Mac OS)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I considered from the beginning uploading it to the stores, iOS initially; then I noticed it fit better for desktops; then I realized didn't have time for that. So I've published it at &lt;a href="https://github.com/MarcosCobena/Abanico"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 20 Jun 2017 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Reflexiones</title>
  <guid>https://marcoscobena.com/?i=reflexiones</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A veces me gusta escribir sobre pensamientos que tengo, motivados en su mayoría por cómo desenvolverse mejor en la vida. Cada vez que escriba uno (al mes más o menos) te lo enviaré personalmente; solo déjame tu dirección:&lt;/p&gt;

&lt;p&gt;[contact-form to="marcoscm.digital@gmail.com" subject="Suscribirme a Reflexiones"][contact-field label="Correo electrónico (prometo no compartirlo)" type="email" required="1" /][/contact-form]&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 20 Mar 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Qué puedo hacer / What can I do</title>
  <guid>https://marcoscobena.com/?i=que-puedo-hacer</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p style="text-align:center;"&gt;👋🏼  Actualmente trabajo a tiempo completo como Senior Mobile Developer (desarrollando apps) en &lt;a href="http://devsdna.com"&gt;DevsDNA&lt;/a&gt;. Si crees que podemos ayudarte ¡escríbenos! &lt;a href="mailto:marcos@devsdna.com"&gt;marcos@devsdna.com&lt;/a&gt;
/
I'm currently working full-time as Senior Mobile Developer (developing apps) at &lt;a href="http://devsdna.com"&gt;DevsDNA&lt;/a&gt;. If you find we can help you write us! &lt;a href="mailto:marcos@devsdna.com"&gt;marcos@devsdna.com&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Apps&lt;/h3&gt;

&lt;p&gt;Para &lt;strong&gt;Android&lt;/strong&gt; y para &lt;strong&gt;iOS&lt;/strong&gt; (iPhone e iPad). Y para Windows. &lt;strong&gt;Nativas&lt;/strong&gt;: las sentirás como WhatsApp, Gmail o Facebook. Y &lt;strong&gt;preciosas&lt;/strong&gt;: me esfuerzo en hacer realidad la idea de los diseñadores, me tomo su trabajo muy enserio. No puedo diseñar como ellos, pero sí defenderme si la belleza estética no es la prioridad. También puedo hacer &lt;strong&gt;mapas de navegación&lt;/strong&gt;, incluso cómo serían a alto nivel cada una de las pantallas: botones, listas, campos de texto, etc.; y su &lt;strong&gt;UX&lt;/strong&gt; (eXperiencia de Usuario). La UX la valoro mucho.
/
For &lt;strong&gt;iOS&lt;/strong&gt; (iPhone &amp;amp; iPad) and &lt;strong&gt;Android&lt;/strong&gt;. Windows too. &lt;strong&gt;Native&lt;/strong&gt;: you'll feel such as WhatsApp, Gmail or Facebook. And &lt;strong&gt;beautiful&lt;/strong&gt;: I make strong efforts in turning real the Designers' idea, I take their job very seriously. I can't design as them, but I can do something if the aesthetic beauty is not the priority. I can as well make &lt;strong&gt;navigation maps&lt;/strong&gt;, even how each screen would be at a high level: buttons, lists, text fields, etc.; and its &lt;strong&gt;UX&lt;/strong&gt; (User eXperience). UX has a lot of value for me.&lt;/p&gt;

&lt;h3&gt;Formación / Training&lt;/h3&gt;

&lt;p&gt;Me encanta dar &lt;strong&gt;clases&lt;/strong&gt;. En los últimos años he visitado clientes a nivel &lt;strong&gt;nacional&lt;/strong&gt; e &lt;strong&gt;internacional&lt;/strong&gt; para formarles en desarrollo móvil con Xamarin: desde &lt;strong&gt;Xamarin.iOS&lt;/strong&gt; y &lt;strong&gt;Xamarin.Android&lt;/strong&gt; hasta &lt;strong&gt;Xamarin Test Cloud&lt;/strong&gt;, pasando por &lt;strong&gt;HockeyApp&lt;/strong&gt;. Me gusta mucho también la &lt;strong&gt;productividad&lt;/strong&gt; y la &lt;strong&gt;gestión de personas&lt;/strong&gt;, por lo que podría ayudar igualmente formando en ésa dirección. Llevo años aplicando &lt;strong&gt;Scrum&lt;/strong&gt; y convencido de que es una herramienta muy poderosa, y más aún apoyándome en &lt;strong&gt;GTD&lt;/strong&gt; como mi gestión personal.
/
I love spending &lt;strong&gt;classes&lt;/strong&gt;. Within the last years I've visited customers both &lt;strong&gt;national&lt;/strong&gt; and &lt;strong&gt;international&lt;/strong&gt; to train them in mobile development with Xamarin: from &lt;strong&gt;Xamarin.iOS&lt;/strong&gt; and &lt;strong&gt;Xamarin.Android&lt;/strong&gt; up to &lt;strong&gt;Xamarin Test Cloud&lt;/strong&gt;, going through &lt;strong&gt;HockeyApp&lt;/strong&gt;. I like a lot too &lt;strong&gt;productivity&lt;/strong&gt; and &lt;strong&gt;people management&lt;/strong&gt;, as I could help as well training in that path. I've been years applying &lt;strong&gt;Scrum&lt;/strong&gt; and convinced it's a powerful tool, even more relying in &lt;strong&gt;GTD&lt;/strong&gt; as my personal management.&lt;/p&gt;

&lt;h3&gt;Liderar proyectos / Lead projects&lt;/h3&gt;

&lt;p&gt;Siendo camarero durante la Universidad aprendí mucho sobre la &lt;strong&gt;atención a las personas&lt;/strong&gt;. Llevo más de 10 años como Desarrollador. Durante éste tiempo he tenido experiencia &lt;del&gt;pre&lt;/del&gt;ocupándome de &lt;strong&gt;ayudar&lt;/strong&gt; a nuestros equipos a que &lt;strong&gt;juntos&lt;/strong&gt; saquemos proyectos &lt;strong&gt;adelante&lt;/strong&gt;. Soy capaz de reformular ideas preestablecidas en equipos para la mejora del bien común. Me encanta acercarme a un compañero y preguntarle ¿te puedo ayudar en algo? Simplemente, porque siempre he querido que lo hiciesen conmigo.
/
Being waiter during the University I learned a lot on &lt;strong&gt;attending people&lt;/strong&gt;. I've been more than 10 years as Software Developer. During that time I've had experience &lt;del&gt;worrying&lt;/del&gt; &lt;strong&gt;helping&lt;/strong&gt; our teams to &lt;strong&gt;together&lt;/strong&gt; take projects &lt;strong&gt;further&lt;/strong&gt;. I'm able to reformulate pre-established ideas in teams for the benefit of the whole. I love to walk into a workmate and ask her/him whether I can help you with anything. Simply, because I've always wanted that for me.&lt;/p&gt;

&lt;h3&gt;Páginas web / Web sites&lt;/h3&gt;

&lt;p&gt;Tengo experiencia &lt;strong&gt;&lt;em&gt;full-stack&lt;/em&gt;&lt;/strong&gt; (desde servidor a cliente), aunque lo que más disfruto es con el &lt;strong&gt;&lt;em&gt;front-end&lt;/em&gt;&lt;/strong&gt;, lo que ves en tu navegador. Sobretodo, &lt;strong&gt;JavaScript&lt;/strong&gt;. No es mi foco actualmente, pero intento no despegarme. No puedo diseñar una página de hoy día, pero sí trasladar un diseño a &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt; y JavaScript. &lt;strong&gt;Maquetar&lt;/strong&gt; lo llaman. A mí me gusta más &lt;em&gt;hacer realidad&lt;/em&gt;. Para el servidor comencé con &lt;strong&gt;PHP&lt;/strong&gt; y me pasé a &lt;strong&gt;ASP.NET&lt;/strong&gt;, MVC lo último. También he mantenido durante más de 10 años &lt;strong&gt;WordPress&lt;/strong&gt; en hosting propio (el de mi &lt;a href="http://www.joseantoniocobena.com"&gt;padre&lt;/a&gt; sin ir más lejos), e incluso migraciones de éste a WordPress.com (esta web corre ahí).
/
I've got &lt;strong&gt;full-stack&lt;/strong&gt; experience (from server to client), although what I most enjoy is the &lt;strong&gt;front-end&lt;/strong&gt;, what you see in your browser. Over all, &lt;strong&gt;JavaScript&lt;/strong&gt;. It's not my focus nowadays, but I try not to forget it. I can't design a web site from nowadays, but I can take a design into &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt; and JavaScript. To &lt;strong&gt;layout&lt;/strong&gt; it's called. A like more turn into reality. For the server side I started with &lt;strong&gt;PHP&lt;/strong&gt; and moved to &lt;strong&gt;ASP.NET&lt;/strong&gt;, MVC the last. I too have supported during more than 10 years &lt;strong&gt;WordPress&lt;/strong&gt; self-hosted (that from my &lt;a href="http://www.joseantoniocobena.com"&gt;father&lt;/a&gt; to be honest), and even migrations from such to WordPress.com (this site runs there).&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 13 Mar 2017 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wrapping views in Xamarin.iOS</title>
  <guid>https://marcoscobena.com/?i=wrapping-views-in-xamarin-ios</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Current sprint, which ends just tomorrow, is being thrilling. Wonderful. We're crafting a beautiful app which goes beyond pixel respect, but content flow. I [think] can't say anything about it, our customer, but our skills developing apps are taking a level which I've always dreamed with, and that definitely makes me super happy. :-)&lt;/p&gt;

&lt;p&gt;Last week we eventually needed a wrap view for a few pieces of the design. Wrap view here means an UIView which horizontally adds some other views until the max width it's allowed, and then keeps stacking things in a new row just below. It's a well-known control in Windows world, but didn't find anything similar in iOS.&lt;/p&gt;

&lt;p&gt;As always, I look for what the community has achieved with Objective-C/Swift, and came up into this beautiful implementation of a wrapping UIView: &lt;a href="https://github.com/jmah/WrapDemo/blob/master/WrapDemo/MyWrappingView.m"&gt;MyWrappingView&lt;/a&gt;. I say beautiful not for my idealistic view of the world but due to the actual implementation of the wrapping thing, mainly focused into &lt;a href="https://github.com/jmah/WrapDemo/blob/master/WrapDemo/MyWrappingView.m#L57"&gt;this method&lt;/a&gt; (how layoutSubviews() calls "recursively" on every subview).&lt;/p&gt;

&lt;p&gt;What does a Xamarin guy when finds a ruby like this one? Yes, do port it to C#. And that I've &lt;a href="https://github.com/MarcosCobena/MyWrappingView"&gt;done&lt;/a&gt;. I still have had no time to make a fork-alike project in GitHub, but I'm making public the important bits, &lt;a href="https://github.com/MarcosCobena/MyWrappingView/blob/master/MyWrappingView.cs"&gt;MyWrappingView.cs&lt;/a&gt;, hoping anyone in the Internet will find it useful as well and, who knows, could build a small sample (replicating the original one, for instance) to make it faster to anyone else understand quickly how things go.&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-679 aligncenter" src="items/images/xtka03mbiynp0rvsrc.gif" alt="xtka03mbiynp0rvsrc" width="480" height="480" /&gt;
&lt;em&gt;First thought when you port a control and consider sharing it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I've tried to make the code C#-friendly, so anyone with knowledge on this last one will feel at home digging into it:&lt;/p&gt;

&lt;p style="text-align:center;"&gt;&lt;a href="https://github.com/MarcosCobena/MyWrappingView"&gt;MyWrappingView&lt;/a&gt;&lt;/p&gt;

&lt;p style="text-align:left;"&gt;One more thing! In order to make these things work fine with AutoLayout, if you want your view to dynamically grow in height (for instance, a cell in an UICollectionView), &lt;a href="https://gist.github.com/MarcosCobena/193a0ab48a77dea40744a8812248d586"&gt;don't forget to set MyWrappingView's preferred max layout width&lt;/a&gt;.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 21 Dec 2016 23:00:00 GMT</pubDate>
</item>
<item>
  <title>My UICollectionView doesn't refresh on new items</title>
  <guid>https://marcoscobena.com/?i=my-uicollectionview-doesnt-refresh-on-new-items</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Last week I was struggling with an UICollectionView -MvxCollectionView actually- which was not reacting to new items coming in the DataSource. For more turns I took, I didn't found the answer.&lt;/p&gt;

&lt;p&gt;I double checked the property I was binding in my ViewModel was an ObservableCollection&amp;lt;T&amp;gt;, also that modifying its content was firing anything in the DataSource but, in this last, it was just returning 0 sections for the very first time, which was correct by that one, and that was all.&lt;/p&gt;

&lt;p&gt;Between disassembling MvvmCross' MvxCollectionViewSource and looking through the source code at GitHub I noticed every time its ItemsSource prop. was set a new call to UICollectionView.ReloadData() was done as well.&lt;/p&gt;

&lt;p&gt;So, if new items arrive into the DataSource, and this reacts "refreshing" the collection, why I keep seing it empty? I don't remember currently if I found this at StackOverflow -Gosh bless it- or in iOS official API, but in iOS 10 ReloadData() &lt;strong&gt;must&lt;/strong&gt; be done from the UI thread, otherwise it can't assure the refresh to happen. From Xamarin perspective, something like:&lt;/p&gt;

&lt;pre&gt;UIApplication.SharedApplication.InvokeOnMainThread(() =&amp;gt; ReloadData());&lt;/pre&gt;

&lt;p&gt;And, magic, there were the items I was looking for :-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 11 Dec 2016 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Para los que nacimos en los 80, y para los que no</title>
  <guid>https://marcoscobena.com/?i=para-los-que-nacimos-en-los-80-y-para-los-que-no</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Nací en 1984. Octubre. Hace 32 años. He entendido siempre la treintena como asentamiento, y me ha tocado -está tocando- seguir aprendiendo. Pero no en plan víctima eh; todo lo contrario, de buen rollo :-) Hemos escuchado que la vida es un aprendizaje continuo pero, aquí, me refiero a cosas básicas. Disfruto siempre leyendo frases de Mr. Wonderful, reflexionando sobre ellas, y escuchando a Elsa Punset sobre Inteligencia emocional, pero no ha sido tanto el impacto que esto tenía en mí como hacerme una pregunta.&lt;/p&gt;

&lt;p&gt;Una pauta que yo mismo he tenido, y también he visto mucho a mi alrededor, es el no tener tiempo ni de pensar. Es la versión mejorada de cuando tus padres te llamaban para comer y gritabas desde tu habitación ¡ahora voy! Solo que aquí, ahora, probablemente nadie te lo recuerde una segunda vez. Ir por la vida sin pensar hace que encajes en casi todo. Además, si te pasa como a mí, que me cuesta decir NO, la cosa empeora. Te vuelves líquido: fluyes bien, pero vas donde la marea va.&lt;/p&gt;

&lt;p&gt;Con los 30 comencé a preocuparme de cuál quería que fuese mi papel en esta vida. Probé nuevas cosas en el trabajo, estuve en una relación que me enseñó mucho, viajé más de lo que tenía por costumbre, etc. Pero los años pasan y, en el fondo, sentía que todavía no sabía lo que quería. Me suele calmar mucho cuando me encuentro en una situación así acudir a los libros, y recordé que en la Universidad leí uno sobre productividad personal, Organízate con eficacia (de David Allen), que intentaba dar una respuesta a ese “saber lo que uno quiere”.&lt;/p&gt;

&lt;p&gt;De forma muy resumida, porque hay literatura en Internet que lo explica mucho mejor que yo, es trazar una línea que una lo que haces hoy con lo que quieres hacer en la vida. Parecerá una estupidez, pero cuántas cosas hacemos hoy que no tienen nada que ver con lo que queremos en la vida… Un ejemplo: yo antes nadaba. Comencé porque iba acompañado y además recibíamos clases, y ambas eran una motivación para mí. Cuando decidí seguir por libre comencé a escaquearme: ¡ahora voy! Pasé al grupo de los que financiamos los gimnasios sin pisarlos. Entonces me pregunté ¿para qué c&lt;em&gt;*&lt;/em&gt;jo voy yo a nadar? En esas fechas había comenzado a coger la rutina de pararme a pensar sobre qué quería hacer en la vida, y ya había descubierto algunos de mis propósitos y principios; comenzaba a tener una visión clara de por dónde ir los próximos años, y un pequeño conjunto de metas y objetivos. Y podía ver cómo conectaban desde un punto a otro.&lt;/p&gt;

&lt;p&gt;Yo quiero a largo plazo estar sano. Me gustaría ser mayor pero con una calidad de vida buena. Para mi buena es poder llevarme a mis nietos en una furgoneta a pasar el día, y no morir en el trayecto de ida. Pero no quiero estar cuadrado por otro lado. Quiero estar normal. Por mi trabajo paso muchas horas sentado y la espalda a veces me molesta, cosa que la natación fortalece, pero también paso tiempo físicamente solo y la natación en cambio poco ayuda ahí. Si he hablado de tener nietos, es porque me encantaría tener hijos (plural); y compartir lo que nadie sabe con una pareja que lo sepa todo. ¿Pero cómo voy a encontrar una pareja si no conozco gente nueva? ¿Y ahora te preguntarás tú: qué tiene que ver esto con nadar? Y yo me dije, ¿y no hay algo que una todo: practicar deporte, conocer gente y pasar un buen rato? Pues para mí eso está siendo bailar salsa (y bachata). Del gimnasio me di de baja.&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-607 aligncenter" src="items/images/16373930560_74d67e2aa1_b.jpg" alt="16373930560_74d67e2aa1_b" width="1024" height="683" /&gt;&lt;/p&gt;

&lt;p&gt;Oportunidades de probar la salsa antes había tenido varias, incluso fui a una clase para probar hace unos años. Pero no sabía por qué iba. Porque estaba de moda quizá. Solo al pararme a pensar, un poco (tampoco nos obsesionemos), vi que esto podía encajar muy bien con lo que yo necesitaba.&lt;/p&gt;

&lt;p&gt;Preguntarte ¿para qué? está siendo para mí una herramienta muy poderosa. Cuesta muchísimo responderte con honestidad a ti mismo, y decirte las cosas no como quieres que sean sino como son. Pero cada uno de nosotros sabe perfectamente qué queremos y qué no, y no a todos nos funciona lo mismo. No es inocente tampoco que haya escrito esto, ni que tú lo estés leyendo; de nuevo, en mi caso, es algo que me acerca un poco más al papel que quiero jugar en la vida. Ésto, y confiar siempre en que al final todo va a salir bien, que no sé cómo me las apaño pero siempre tengo la sensación de tener buena suerte.&lt;/p&gt;

&lt;p&gt;Ahora tú: ¿para qué has leído esto?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Fotografía &lt;a href="https://www.flickr.com/photos/codnewsroom/16373930560/in/photolist-qWUF6A-gVQB7-8CJsXa-hsRBts-8CJrir-8CMz3w-jwJ6Kc-jwDr4e-hsRoVo-hsPKV1-dxLw8e-hsSUqv-hsPgKf-dxLxYz-8q4cyb-dxLwEB-hsRWuo-dZYr9B-hsPHWd-hsPDaN-hsSui2-hsRfEp-dxS1X3-nGs5r-hsRxK7-cwDVp1-hsQGqp-hsPSXs-dxLx7P-hsPj1h-hsQXpT-hsNyyM-dxS1VC-hsR9pi-3pGmQz-dxLxqK-hsPpNE-hsNEyH-hsQTr2-dxRZLh-hsPbU2-jwGM2U-dxS1b3-dxLxGP-hsNSWD-hsSEAM-dxLvbr-hsRgL3-hsQDR4-hsP2tj"&gt;original de COD Newsroom&lt;/a&gt;.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 10 Dec 2016 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Hacia la e-Tauromaquia. Una propuesta para la convivencia y el emprendimiento</title>
  <guid>https://marcoscobena.com/?i=Hacia-la-e-Tauromaquia--Una-propuesta-para-la-convivencia-y-el-emprendimiento-fe84192e75c4</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Hacia la e-Tauromaquia. Una propuesta para la convivencia y el emprendimiento&lt;/p&gt;

&lt;p&gt;Motivación   --------&lt;/p&gt;

&lt;h3&gt;Hacia la e-Tauromaquia. Una propuesta para la convivencia y el emprendimiento&lt;/h3&gt;

&lt;h3&gt;&lt;strong&gt;Motivación&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;El Diccionario de la lengua española, perteneciente a la Real Academia Española,&lt;a href="http://dle.rae.es/?id=ZGSWKBT"&gt; define&lt;/a&gt; tauromaquia como el “arte de lidiar toros”. Lidiar, a su vez, tiene como&lt;a href="http://dle.rae.es/?id=NHImOL7"&gt; definición&lt;/a&gt; “burlar al toro esquivando sus acometidas según las reglas de la tauromaquia hasta darle muerte”. El final de ésa última ha provocado una división en la sociedad española entre aquellos que están a favor de la tauromaquia con el fin de la lidia, y aquellos que rechazan la tauromaquia en su totalidad, motivados por la lidia en sí: el daño -hasta la muerte- provocado sobre el animal.&lt;/p&gt;

&lt;p&gt;El autor de este documento se quiere situar en una postura intermedia. Entendiendo que no es admisible en una sociedad contemporánea el daño provocado al toro, y entendiendo igualmente que la abolición de la tauromaquia es dar la espalda a una tradición que aporta valores importantes como el sacrificio y la valentía ante la adversidad, este documento expone una propuesta de transformación de la tauromaquia como hoy día se conoce, mediante las tecnologías de la información y comunicación, para que futuras generaciones reciban lo mejor de esta, pero no la asocien nunca más al daño y muerte del animal.&lt;/p&gt;

&lt;p&gt;Lo aquí expuesto no persigue representar un estudio de fondo, ni una alternativa formal, sino proporcionar un conjunto de ideas básicas que puedan asegurar un futuro mediante la búsqueda de un término medio.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Si el plan ‘A’ no funciona, recuerda que el abecedario tiene 26 letras más” -Anónimo&lt;/p&gt;
  
  &lt;h3&gt;e-Tauromaquia&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;La transformación propuesta, bautizada como e-Tauromaquia (‘e’ representa ‘electrónica’, como medio de canalización de la información; véase e-mail) se divide en dos áreas de trabajo: por un lado, el toro, para el cual se propone la llamada Matriz de sensibilidad; por otro, las personas que actúan sobre el animal, cuyos útiles sufrirían una migración para entrar en juego con el primero.&lt;/p&gt;

&lt;p&gt;A continuación, se visita brevemente cada área, proporcionando una base de trabajo para una hipotética etapa de I+D sobre las mismas.&lt;/p&gt;

&lt;h4&gt;Matriz de sensibilidad&lt;/h4&gt;

&lt;p&gt;Al toro se le realizan las siguientes acciones (conocidas en el argot como suertes) principales durante una corrida: capotazo, clavado de banderillas y clavado de puntilla (se han omitido otras acciones por no ser significativas para el objetivo de este documento). Todas ellas tienen un punto en común: el roze, o toque, entre la piel del animal y el útil. A excepción del capotazo, que colabora en el aumento de cansancio sobre el animal, tanto la banderilla como la puntilla penetran la piel de este provocándole heridas hasta causar su muerte.&lt;/p&gt;

&lt;p&gt;Con objetivo primordial de reemplazar ésas dos últimas, al toro se le dotaría de una malla textil situada en la espalda y abarcando desde el cuello hasta el rabo, cubriendo igualmente los laterales izquierdo y derecho. Dicha malla iría sujeta mediante cierres con hebilla en la parte inferior.&lt;/p&gt;

&lt;p&gt;Siendo la malla de color oscuro, para pasar desapercibida al público de la plaza, ésta contendría una matriz cuadrada de puntos de sensibilidad, con una separación entre unos y otros de 1 cm. En una malla hipotética de 1 m² se dispondrían según este sistema 10.000 puntos de sensibilidad.&lt;/p&gt;

&lt;p&gt;Cada punto de sensibilidad está compuesto por un sensor de presión, localizado de forma unívoca dentro de la matriz. Cada sensor es capaz de detectar&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;la presión (&lt;em&gt;p&lt;/em&gt;) ejercida sobre el mismo, &lt;em&gt;p&lt;/em&gt; ∈ ℝ, &lt;em&gt;p&lt;/em&gt;~[0, 1]. Un sensor sobre el que no se actúe (es decir, no haya roce alguno) devolvería el valor &lt;em&gt;p&lt;/em&gt;=0. Aquel sobre el cual se ejerciese la presión máxima resultaría en &lt;em&gt;p&lt;/em&gt;=1;&lt;/li&gt;
&lt;li&gt;la puntuación (&lt;em&gt;v&lt;/em&gt;, del inglés &lt;em&gt;value&lt;/em&gt;) en función de la localización dentro de la malla, v ∈ ℤ, &lt;em&gt;v&lt;/em&gt;~[0, 10]. Nótese que, debido a ésto, la colocación de la misma en el toro es de vital importancia; y&lt;/li&gt;
&lt;li&gt;el instante de contacto (&lt;em&gt;t&lt;/em&gt;), que indica con precisión de milisegundos (ms) tal en el que un agente externo ha tenido contacto con un punto. Conociendo la disposición de los distintos puntos en la matriz, y siendo conocida la separación entre los mismos, es posible obtener la velocidad de contacto entre dos puntos (&lt;em&gt;x&lt;/em&gt;₁, &lt;em&gt;y&lt;/em&gt;₁) y (&lt;em&gt;x&lt;/em&gt;₂, &lt;em&gt;y&lt;/em&gt;₂)#### Transformación de los útiles principales&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Partiendo de la base de que la Matriz de sensibilidad está ya disponible en el animal, en los próximos puntos se detalla las modificaciones a los útiles principales de modo que interactúen con la primera.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*Capote&lt;br /&gt;
*&lt;/em&gt;En sí el capote no necesitaría modificación alguna, al recaer la detección de presión en la Matriz de sensibilidad. La acción de pasar el capote por la parte superior del animal provocaría el disparo de los puntos de sensibilidad, siendo posible medir el paso del mismo mediante:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;velocidad (&lt;em&gt;v&lt;/em&gt;): ocurriendo un pase, siendo (&lt;em&gt;x&lt;/em&gt;₁, &lt;em&gt;y&lt;/em&gt;₁) y (&lt;em&gt;x&lt;/em&gt;₂, &lt;em&gt;y&lt;/em&gt;₂) ambos puntos de contacto donde el primero es aquel con &lt;em&gt;t&lt;/em&gt;₁ (s) menor y el segundo con &lt;em&gt;t&lt;/em&gt;₂ (s) mayor, &lt;em&gt;d&lt;/em&gt; (m) la distancia entre ambos puntos: &lt;em&gt;v&lt;/em&gt; (m/s)=&lt;em&gt;d&lt;/em&gt;/(&lt;em&gt;t&lt;/em&gt;₂-&lt;em&gt;t&lt;/em&gt;₁)&lt;/li&gt;
&lt;li&gt;¹puntuación (&lt;em&gt;V&lt;/em&gt;): ocurriendo un pase, siendo (&lt;em&gt;x&lt;/em&gt;₁, &lt;em&gt;y&lt;/em&gt;₁), (&lt;em&gt;x&lt;/em&gt;₂, &lt;em&gt;y&lt;/em&gt;₂), …, (&lt;em&gt;xᵢ&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;ᵢ) todos aquellos puntos de contacto; &lt;em&gt;p&lt;/em&gt;₁, &lt;em&gt;p&lt;/em&gt;₂, …, &lt;em&gt;pᵢ&lt;/em&gt; las presiones asociadas a estos; &lt;em&gt;v&lt;/em&gt;₁, &lt;em&gt;v&lt;/em&gt;₂, …, &lt;em&gt;vᵢ&lt;/em&gt; las puntuaciones asociadas a cada punto: &lt;em&gt;V&lt;/em&gt;=∑ (&lt;em&gt;pᵢ·vᵢ&lt;/em&gt;)Ambas medidas cuantificarían la habilidad del torero al trabajar con el capote, pudiendo ordenar estos últimos en un ranking.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;*Banderilla&lt;br /&gt;
*&lt;/em&gt;Terminada en punta y con la finalidad de ser clavada en el toro, sobre esta se reemplazaría la punta metálica por una semiesfera de espuma semirígida (mismo material que el usado en los cilindros de natación para su aprendizaje).&lt;/p&gt;

&lt;p&gt;El ejercicio de clavado de la banderilla sería contemplado como el impacto de la semiesfera de espuma con la Matriz de sensibilidad. El contacto entre una y otra permitiría a la segunda, de inmediato, decidir cuál o cuáles han sido los puntos de impacto, la presión ejercida y el instante en el que ocurrió; de modo que se podría cuantificar la puntuación de dicho ejercicio de la misma forma al ocurrido anteriormente¹.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*Puntilla&lt;br /&gt;
*&lt;/em&gt;Del mismo modo que la punta metálica sería reemplazada en la banderilla, ocurriría igual en la puntilla. El clavado de la puntilla tiene sentido en el cuello, cerca de la cabeza del animal, con objeto de provocarle una muerte rápida.&lt;/p&gt;

&lt;p&gt;Persiguiendo mantener el procedimiento, pero eliminando el daño, se propone que la Matriz de sensibilidad tenga un segundo conjunto de presiones, de modo que los puntos más cercanos a la zona en cuestión tengan valores mucho más significativos que cualquier otro, pudiendo entonces aplicar la misma fórmula de puntuación¹ vista anteriormente. Solo entonces la puntilla, al entrar en contacto con la Matriz, tendrá una puntuación alta si ésta ocurre en una zona muy localizada de la malla.&lt;/p&gt;

&lt;h3&gt;Conclusiones&lt;/h3&gt;

&lt;p&gt;En este documento se han expuesto las ideas básicas de una futurible línea de trabajo para eliminar cualquier daño al toro, y favorecer una transición a esto perdurando la tauromaquia.&lt;/p&gt;

&lt;p&gt;No se ha tenido en cuenta que el daño provocado al toro durante una corrida provoca en este un cansancio, factor de vital importancia en el espectáculo. Al eliminar el daño también se ha eliminado el cansancio provocado de ésa forma, quedando únicamente el físico debido al ejercicio realizado en las distintas fases. A cambio, esta propuesta proporciona un sistema de puntuación que, sin llegar a la muerte del animal, consigue establecer un orden entre los distintos actores.&lt;/p&gt;

&lt;p&gt;La propuesta aquí detallada abre también la posibilidad de desarrollar la tauromaquia en industrias donde antes no tenían representación significativa, como los dispositivos móviles, o &lt;em&gt;smartphones&lt;/em&gt;. El público que acudiese a una corrida podría, en tiempo real, saber la puntuación obtenida, a la vez que poder comparar ésta en un ranking nacional o, por qué no, mundial. Ésto igualmente habilita el negocio on-line, de modo que se puedan realizar apuestas en tiempo real sobre una corrida, o simplemente seguir esta desde cualquier punto del mundo.&lt;/p&gt;

&lt;p&gt;Cabría también la posibilidad de que la comunicación no ocurriese solo de la plaza al público, sino al revés también. Desde la app se podría digitalizar la acción asociada al “pañuelo”, de modo que la agitación del terminal enviase un mensaje a una “central”, ubicada en la plaza, que provocase una determinada melodía en esta, o la activación de un mensaje de voz por los altavoces.&lt;/p&gt;

&lt;p&gt;De forma intrínseca a la propuesta, y en el contexto de una situación económica complicada en el país, la decisión de contemplar las ideas aquí expuestas, o la discusión que estas podrían generar, provocaría un revulsivo en la industria de la tauromaquia, tanto en la fabricación de los útiles, como en la digitalización de las plazas, pudiendo ser un punto de partida hacia el consenso que motivó este documento, pero también con ojos al emprendimiento y creación de puestos de trabajo.&lt;/p&gt;

&lt;p&gt;Marcos Cobeña Morián&lt;br /&gt;
&lt;a href="mailto:hello@marcoscobena.com"&gt;&lt;em&gt;hello@marcoscobena.com&lt;/em&gt;&lt;/a&gt;_&lt;br /&gt;
_Sevilla (Andalucía, España), 15 de agosto de 2016&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 14 Aug 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Mask Animation with Xamarin.iOS and AutoLayout</title>
  <guid>https://marcoscobena.com/?i=mask-animation-with-xamarin-ios-and-autolayout</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Our workmate &lt;a href="https://twitter.com/sescaladab"&gt;Sergio Escalada&lt;/a&gt; has just published a little gem on how to apply animations based in masks:&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-597 aligncenter" src="items/images/ezgif-2173528766.gif" alt="ezgif-2173528766" width="192" height="341" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://geeks.ms/xamarinteam/2016/07/26/mask-animation-with-xamarin-ios-and-autolayout/"&gt;Read the entire article in Plain Concepts' Xamarin Team blog...&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 25 Jul 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducing Xamarin.iOS to Objective-C/Swift developers</title>
  <guid>https://marcoscobena.com/?i=introducing-xamarin-ios-to-objective-c-swift-developers</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few months ago I had the chance to showcase &lt;a href="https://www.xamarin.com/platform"&gt;Xamarin.iOS&lt;/a&gt; to pure Objective-C/Swift developers, within a local group called &lt;a href="http://nscoder-sev.tumblr.com/"&gt;NSCoder Sevilla&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instead of making slides I thought it'd be more interesting to build a small app which'd do the same, as well as serving as a playground to showcase some topics: managed vs. native call stacks, &lt;a href="https://www.xamarin.com/forms"&gt;Xamarin.Forms&lt;/a&gt;, &lt;a href="https://developer.xamarin.com/guides/cross-platform/workbooks/"&gt;Xamarin Workbooks&lt;/a&gt; (&lt;a href="https://developer.xamarin.com/guides/cross-platform/inspector/"&gt;Inspector mode&lt;/a&gt;), etc. I think the most interesting piece for them was inspecting the app in real time with this last one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://appetize.io/app/nv2z753k2kjkggxcjkcgx72wcm?device=iphone6s&amp;amp;scale=100&amp;amp;orientation=landscape&amp;amp;osVersion=9.3" target="_blank"&gt;
&lt;em&gt;img class="wp-image-585 size-full" src="items/images/appetizenscodersevilla.png" alt="AppetizeNSCoderSevilla" width="888" height="434" /&gt;&lt;/a&gt; Microsoft/Xamarin &amp;lt;3 iOS demo app. Tap the image to play with it!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The full codebase can be found &lt;a href="https://github.com/MarcosCobena/MicrosoftXamarinLoveiOS"&gt;here&lt;/a&gt;. It may be interesting as well for anyone who's invited to a similar scenario :-)&lt;/p&gt;

&lt;p&gt;PS: Thanks &lt;a href="https://twitter.com/dfreniche"&gt;Diego Freniche&lt;/a&gt; for inviting me to this! ;-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 20 Jul 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Me gusta, no me gusta, me gusta...</title>
  <guid>https://marcoscobena.com/?i=me-gusta-no-me-gusta-me-gusta</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class="aligncenter size-full wp-image-574" src="items/images/7104203537_b1d010cdfe_o.jpg" alt="DSC_0001" width="1024" height="685" /&gt;
&lt;em&gt;&lt;a href="https://www.flickr.com/photos/centermez/7104203537/in/photolist-bPLUcT-aFQJzM-zVFQG-miT5Kw-8h84WL-4VwiJz-mp8rzZ-8dcMHs-nuKRie-peaprg-Cso2K-QkvfB-nvcArr-9Vivdn-j8ZyC9-QtZnj-5QziCM-nfXssr-7vdFmV-4ubqt8-KqRYy-8h4PDX-8izvkJ-HWRP76-ftFHcr-4fvwjZ-gSrtx1-c7oMhL-61Xvdk-dRbdLs-aLvQmP-9qN7nD-9ukdnh-r1Cdeh-gaCE3k-ppwwR3-p7yFhD-GD9iik-cf51zS-4JSSjq-oK9jxq-nnVDsX-B7pHF-9N9ms-4hRPQq-fg7iWd-fTyeGT-f2t5gC-XHpi-8rCnTy"&gt;Thinking&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hace poco más de un mes tuve la oportunidad de asistir a un evento de desarrollo de software donde me llamó mucho la atención una charla que mencionaba en su título "soft skills". ¿Se podría traducir como habilidades sociales? El resto de ponencias trataban sobre tecnología pero en ésta era lo último que importaba: importaban las personas.&lt;/p&gt;

&lt;p&gt;Me resulta curioso, y a veces desconcertante, que con el paso de los años la informática, mi pasión desde que soy chico, tiene más sentido para mí si lo que haga en relación involucra a las personas. Hoy en día, en mi trabajo, disfruto mucho yendo a la mesa de un compañero y preguntándole ¿te puedo ayudar en algo? Si tiene un problema, algo que le atasca, si puedo lo cojo para que él avance, e intento resolverlo. No me genera tanta ilusión el coger un problema técnico y enfangarme hasta los codos (que un poco también), como hacer que ésa persona tenga un momento de tranquilidad, pueda enfocarse en otro tema y, si he tenido "suerte", volver al día siguiente con una solución a nuestro problema. Porque los problema en los equipos son tuyos y míos, de los dos. Esto lo aprendí de mi primer trabajo en Microsoft y me ha acompañado ya más de diez años...&lt;/p&gt;

&lt;p&gt;Volviendo al tema, soft skills, "capacidades suaves" (qué romántico ¿no?), habilidades sociales. De todo lo que John Sonmez, la persona que lo impartía, habló, me dejó clavado en el asiento la siguiente afirmación:&lt;/p&gt;

&lt;blockquote&gt;Todo lo que te gusta en la vida dejará de gustarte&lt;/blockquote&gt;

&lt;p&gt;Quizá para ti que leas esto es &lt;em&gt;de cajón&lt;/em&gt;, lo has pensado 1.000.000 de veces, o no te mueve nada por dentro. Para mí fue entre revelador y doloroso. ¿Cómo que todo lo que me gusta en mi vida dejará de gustarme? ¿Que la informática dejará de gustarme? ¿Que dejará de gustarme leer sobre Steve Jobs? ¿Incluso una pareja? &lt;em&gt;Vamos no me jodas&lt;/em&gt;, pensé.&lt;/p&gt;

&lt;p&gt;Lo siguiente que se me vino a la cabeza fue: ¿si todo lo que me gusta me puede dejar de gustar, por qué entonces me esforcé tanto en ser un buen novio, en hacer mi trabajo de puta madre, por qué he decidido levantarme todos los días a las 6 de la mañana para dedicar 1 hora a mis proyectos personales? Si todo me puede dejar de gustar, quizá no merezca tanto la pena el esfuerzo...&lt;/p&gt;

&lt;p&gt;Digamos que aún, un mes y pico después, no tengo una estrategia clara para mí mismo respecto a esto. En 2015 conocí a un amigo de un amigo, una persona que me saca como unos veinte años que, en un momento hablando en privado, me regaló una joyita:&lt;/p&gt;

&lt;blockquote&gt;Marcos, ¿tú sabes qué he aprendido en la vida con mi edad? Que el truco está en el movimiento&lt;/blockquote&gt;

&lt;p&gt;Yo a veces tengo tantas cosas que me gustaría hacer que, todavía a veces me ocurre, acabo por no hacer ninguna de ellas, sólo porque no me decido, no las sé priorizar. Sin darme cuenta las ordeno por la vinculación emocional que me generan y, a veces, es mejor dejar las emociones a un lado. Últimamente estoy poniendo en práctica una técnica súper sencilla: cuando no sé que hacer, hago cualquier cosa. (&lt;em&gt;La madre que me trajo&lt;/em&gt; porque la conozco hace años, pero la he usado más bien poco...) Paso de la ansiedad de no saber escoger, al disfrute de hacer algo. Sea cocinar, escribir esto que lees, u ordenar una estantería.&lt;/p&gt;

&lt;p&gt;Cuando no sabes que todo te puede dejar de gustar, y algo te deja de gustar, le puedes coger hasta asco. A mí me ha pasado en algún momento con la informática. De tanto que me gustaba, de tanto tiempo que le dedicada, le cogí asco. Simplemente me vino bien entrelazarla con otras cosas, otros hobbies por ejemplo. Y me volvió a gustar. :-)&lt;/p&gt;

&lt;p&gt;Por último, cuando estás en un momento en el que algo no te gusta, te estás dando cuenta además, y se genera una situación incómoda, lo mejor que me ha funcionado hasta el día de hoy es tirar de disciplina. Si tengo que seguir haciéndolo, el componente de disfrute, que está bajo mínimos, lo voy cambiando por el "hacerlo porque sí", con la consciencia de que esto que me está pasando es normal, nos ocurre a todas las personas, y sigo con ello porque en el fondo sé que es algo bueno en mi vida. John Sonmez, además, es el consejo que dio en su &lt;a href="https://evolve.xamarin.com/session/56e20411fd00c0253cae33a2"&gt;charla&lt;/a&gt;: ser disciplinado.&lt;/p&gt;

&lt;p&gt;Si eres capaz de aquello que te gusta vivirlo gota a gota quizá no te ocurra jamás todo esto. O quizá sí pero en cosas muy puntuales. Sea como sea, recuerda que todo aquello que te gusta hoy, te dejará de gustar en algún momento. Depende de ti, de mí, qué hagamos entonces. Si sigue teniendo sentido, sigue haciéndolo, y busca el disfrute en otra cosa. Lo que sea: vete a lavar el coche, que seguro tiene más polvo que la tele por detrás.&lt;/p&gt;

&lt;p&gt;PD: Siempre que escribo estas cosas me imagino que habrá alguien que lo lea y se sentirá identificada/o. Si es tu caso, ¿eras consciente de esto, cómo lo gestionas? ¡Muchas gracias de antemano!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 28 Jun 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Si no lo tengo me lo invento</title>
  <guid>https://marcoscobena.com/?i=si-no-lo-tengo-me-lo-invento</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Seguimos con más patrones. En este caso: ¿cómo respondemos ante las necesidades? Solemos tener dos opciones: compramos algo que la solucione o nos inventamos algo que haga lo mismo. No quiero entrar en el punto de vista del consumismo sino de la felicidad. Pero ¿se puede ser feliz resolviendo necesidades?&lt;/p&gt;

&lt;p&gt;Los términos necesidad y problema a veces están tan cerca en nuestro día a día que actuámos (al menos a mí me pasa) con la solución más rápida: comprar. Se me rompe X, me compro otro. El acto de comprar comienza por la búsqueda, que disfrutamos como cuando éramos niños y caía en nuestras manos el catálogo de juguetes de El Corte Inglés. Seleccionamos n opciones y vamos bajando hasta llegar a dos o tres que, ante nuestra falta de decisión, dejamos decidir a lo que yo llamo &lt;i&gt;los factores limitantes&lt;/i&gt;: disponibilidad, precio, qué opina mi colega, etc. Compramos uno, disfrutamos el &lt;i&gt;efecto papel de regalo&lt;/i&gt;, los primeros días de novedad y, vuelta a la normalidad.&lt;/p&gt;

&lt;p&gt;Como tengo la enorme suerte de rodearme de gente que inventa más que compra, a veces me pregunto: &lt;i&gt;vaya, ¿y si me hubiese buscado una alternativa?&lt;/i&gt; Las alternativas, las invenciones, tienen una cosa mala: como te compares con otro, la has liado. Las únicas comparaciones buenas son contigo misma/o ayer. En cambio, todo lo demás es bueno:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Como has decidido buscar una alternativa, acabas de reforzar tu autoestima y tu poder de decisión. &lt;i&gt;Me lo podría comprar, pero no lo voy a hacer&lt;/i&gt;. Has sido capaz de decir NO, enhorabuena&lt;/li&gt;
    &lt;li&gt;Si vas a buscar una alternativa, ¡tienes que ser creativa/o! Empezarás por definir muy claramente qué necesitas exactamente y cuándo lo necesitas. Con ésto claro, comenzarás con el proceso creativo&lt;/li&gt;
    &lt;li&gt;Sentirás miedo. Porque dependerá en la mayor parte de ti que salga adelante, porque no es &lt;i&gt;lo normal&lt;/i&gt;, porque quizá no sepas por dónde empezar. Empieza por cualquier sitio en ése caso, da igual, confía. Confía mucho en ti. A mi me ayuda hacerme esta pregunta: ¿por qué yo no voy a poder si los demás sí?&lt;/li&gt;
    &lt;li&gt;Disfruta el proceso. A diferencia de la compra ahora disfrutas desde el boceto inicial en tu cabeza. Sin darte cuenta, es como si cayeses en que tienes fichas de LEGO a tu alrededor y toda la ilusión por hacer una figura de la cual no hay instrucciones. Pero sabes qué quieres que resuelva la figura&lt;/li&gt;
    &lt;li&gt;Aprenderás un montón. Quizá no te des cuenta pero estás aprendiendo haciendo. Mejor que leerlo, que verlo, es hacerlo. Así es además como mejor captamos la información los seres humanos&lt;/li&gt;
    &lt;li&gt;Lo valorarás más. Es una parte muy emocional de uno mismo, pero queremos más aquello que nos ha hecho esforzarnos. Y es curioso porque no funcionamos igual con el dinero: yo p.e. no valoro más aquello que más [dinero] me ha costado. Quizá los primeros días sí, pero acaba normalizándose. Y no lo fuerzo eh. En cambio, veo algo que hice después de años y ¡madre mía! hasta me puedo emocionar&lt;/li&gt;
    &lt;li&gt;Con lo que compras no te emocionas, con lo que fabricas sí. Y esto es un regalo para ti misma/o el día de mañana. Te estás preparando una cajita con un mensaje de amor para que la abras cuando quieras&lt;/li&gt;
    &lt;li&gt;Aunque menos importante, a veces me da vergüenza decir a alguien que me he comprado algo. En cambio, estoy deseando encontrarme a alguien para enseñarle lo que me he hecho&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No quería llevar esto por el consumismo, si compramos más de lo que necesitamos o de si compramos por comprar. Las personas en las que estoy pensando ahora mismo no creo sinceramente que a voluntad se construyan sus propias cosas por huír del consumismo. De verdad creo que lo hacen porque saben, sin ser conscientes quizá, que una vía les hace más feliz que la otra. Y por desgracia muchas veces ayuda no tener dinero, no poder permitírtelo.&lt;/p&gt;

&lt;p&gt;Tampoco vamos a pretender que todo todo ahora me lo haga yo, no se trata de eso, pero ¿y si probase con una sola cosa? ¿Te animas a ser más feliz?&lt;/p&gt;

&lt;p style="text-align:right;"&gt;&lt;a href="http://www.wired.com/2015/07/lego-makes-everything-bettereven-prosthetic-kids"&gt;&lt;img class="aligncenter size-large wp-image-522" src="items/images/img_0038.jpg" alt="img_0038" width="1024" height="538" /&gt;&lt;/a&gt;
&lt;i&gt;-Dedicado a dos Jose que me inspiran muchísimo, uno de L a V, otro de V a D&lt;/i&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 19 Jun 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>La mala-vergüenza</title>
  <guid>https://marcoscobena.com/?i=la-mala-verguenza</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Con los años he descubierto un patrón curioso que es súper potente unido al "&lt;a href="http://marcoscobena.com/2016/06/05/el-valor-de-ir-al-minimo-con-aquello-que-suenas-sin-querer/"&gt;ir al mínimo&lt;/a&gt;" de la semana pasada: algunas personas que triunfan, que les va bien, habían perdido antes la vergüenza. No la vergüenza buena de la educación, sino la mala, la "freno de mano".&lt;/p&gt;

&lt;p&gt;Desde chicos aprendemos que el sacrificio, en el tiempo, trae recompensa. Si estudias mucho tendrás buenas notas, si tienes buenas notas podrás elegir mejor qué hacer con 18 años (y las ideas claras, por supuesto), si decides ir a la Universidad y estudias mucho tendrás un buen trabajo, etc. Todo está ligado al sacrificio previo. Que no está mal ojo, pero falta algo. Conozco a personas, empezando por mí, que se sacrifican en exceso pero aún así les falta algo.&lt;/p&gt;

&lt;p&gt;Nadie te habla de la vergüenza. Cuando tenía 18 años y entré en la Universidad conocí a personas que compartían mis mismos gustos. En concreto, acabé pasando mucho tiempo con un grupo que -ahora sé- habían perdido la vergüenza. Nos aventuramos a "dar charlas", en plan informal, sobre cosas que aprendíamos en nuestro tiempo libre. Ni teníamos conocimiento suficiente, ni capacidades educativas, tampoco sabíamos hablar en público, ni otras muchas cosas. Pero no teníamos vergüenza. La pasión que traíamos cada uno rompía ése elástico una y otra vez. Éramos osados.&lt;/p&gt;

&lt;p&gt;Lo más curioso era que yo sí era vergonzoso. Para mí no sabía nunca lo suficiente como para ponerme delante de 15-20 personas y contarles qué aprendí la tarde anterior. Lo fantástico fue que me rodeé de personas que me empujaron a atreverme. Cogieron la base del &lt;a href="https://es.wikipedia.org/wiki/Principio_de_Pareto"&gt;Principio de Pareto&lt;/a&gt; (probablemente ni lo conocíamos por aquel entonces) y me transmitieron que &lt;em&gt;con un 20% de esfuerzo en el aprendizaje (¿recuerdas el valor de ir al mínimo?) el otro 80% puede ser usado para sacarle partido, y más si lo dedicas a los demás&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;¿Sabías que probablemente sepas el inglés mínimo como para mantener una vídeo-llamada para tu próximo trabajo? 20-80, mira Michael Robinson. ¿Te has dado cuenta ya de que eres capaz de tomar tus propias decisiones sobre temas vitales? 20-80, no te hace falta evaluar hiperminuciosamente cada posibilidad, la vas a cagar igual, a veces pasa, nos pasa a todos. La siguiente saldrá mejor. ¿Por qué no le envías un WhatsApp a esa persona que te gusta, y le dices que te gustaría verla? Quizá aún no sea el momento, estás en ello, mañana verás, etc. 20-80.&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-509 aligncenter" src="items/images/04-05-2015-por-quc3a9-es-importante-usar-el-freno-de-mano.jpg" alt="04-05-2015-Por-qué-es-importante-usar-el-freno-de-mano" width="400" height="266" /&gt;&lt;/p&gt;

&lt;p&gt;Si algo en tu vida te bloquea para ser más feliz, o quieres ayudar a alguien que aprecias mucho, agarra la palanca del freno, pulsa el botón y bájala. Tienes demasiada mala-vergüenza. Y si te rodeas de personas que ya la bajaron te estás haciendo un gran favor a ti misma/o. Quizá ni tú sepas que estás bloqueada/o.&lt;/p&gt;

&lt;p&gt;Si uno los puntos hacia detrás, hoy por ejemplo tengo el trabajo que tengo gracias a aquellas "charlas" que dimos.&lt;/p&gt;

&lt;p&gt;PD: Por cierto, por curiosidad, ¿a qué le tienes vergüenza tú, o cómo se la perdiste? Seguro que aprendo algo. ¡Gracias de antemano!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 11 Jun 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>El valor de ir al mínimo con aquello que sueñas sin querer</title>
  <guid>https://marcoscobena.com/?i=el-valor-de-ir-al-minimo-con-aquello-que-suenas-sin-querer</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Este fin de semana estuvimos mis amigos y yo hablando de la [conocida para algunos] ecuación de la felicidad:&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-440 aligncenter" src="items/images/gif-latex.gif" alt="gif.latex" width="171" height="64" /&gt;&lt;/p&gt;

&lt;p&gt;Las personas más felices, según ésto, son aquellas que acercan el numerador al denominador. Bien reduciendo el 1º, bien aumentando el 2º.&lt;/p&gt;

&lt;p&gt;A mi me ocurre que, por definición, el 1º suele estar muy por encima del 2º. Las personas que nacimos en España entre los 80 y los 90, nos solemos encontrar  en ésa tesitura: abuelos que mal-vivieron la Guerra Civil, padres que sobre-vivieron hasta la Transición e hijos que nacieron en el auge: "le daremos a nuestros hijos todo aquello que no hayamos podido tener nosotros". Resultado: personas que esperamos todo y más pero tenemos mucho menos de éso. Mucho / poco, infelicidad.&lt;/p&gt;

&lt;p&gt;"La culpa es de mis padres, ya me podrían haber educado en la humildad". Error. Los padres lo hacen lo mejor que pueden. No hay más. A nuestros hijos les daremos todo lo que podamos. Lo que también intentaremos es amueblarles la cabeza de modo que sepan gestionar racionalmente sus vidas.&lt;/p&gt;

&lt;p&gt;"Entonces, nada que hacer, como me han educado así, así me quedo". Sí y no. Sí porque hay una parte de abundancia en el interior acomodada desde que eres pequeño que cuesta eliminarla. Y no porque aún siendo difícil eliminarla, puedes corregirla poco a poco.&lt;/p&gt;

&lt;p&gt;Una persona a la que aprecio mucho me dijo hace años:&lt;/p&gt;

&lt;blockquote&gt;En tu caso tienes que ir al mínimo en lo que hagas&lt;/blockquote&gt;

&lt;p&gt;Un ejemplo: siempre me ha gustado ver bailar hip-hop/funky a los demás. La música R&amp;amp;B me da ese qué-sé-yo-que-yo-qué-sé que me hace sentir bien cuando la escucho, de buen rollo, con ganas de comenzar algo que tenga que hacer a continuación. A veces me doy cuenta que, de forma inconsciente, me imagino bailando de forma increíble, haciendo una coreografía rodeada con otros bailarines, como aquel que lleva toda su vida bailando, y se dedica en cuerpo y alma al baile.&lt;/p&gt;

&lt;p&gt;Pero yo no soy bailarín. Ni soy asiduo a las discotecas donde quizá podría más ponerlo en práctica. Me apunté a una academia y sólo estuve 1 ó 2 meses. Porque requiere tiempo ensayar. Y el tiempo es algo que comienza a escasear con los 30. Y tampoco, si pienso en serio qué quiero ser de mayor, me veo bailando R&amp;amp;B, la verdad.&lt;/p&gt;

&lt;p&gt;En cambio, me sigue encantado escuchar la misma música, y ver a los que saben bailar. Lo sigo haciendo. Es mi forma de "ir al mínimo". La forma de acercar expectativas a realidad. Y ser más feliz al final.&lt;/p&gt;

&lt;p&gt;¿Alguna vez te has parado a pensar esto? ¿Serías capaz de reconocer aquellos pensamientos que te sitúan sin esfuerzo más allá de donde es lógico? Dedícale 5 mins y piénsalo. Cuando encuentres alguno, ve al mínimo. Y, si quieres llegar más lejos, da un pasito.&lt;/p&gt;

&lt;p&gt;Esta mañana era feliz parándome a ver el papel que juega cada uno de los integrates de este grupo &lt;em&gt;acapella&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=W9LJDwZOprY"&gt;&lt;img src="https://img.youtube.com/vi/W9LJDwZOprY/0.jpg" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 04 Jun 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>ADAL and how to sign in with Microsoft accounts in Xamarin.iOS</title>
  <guid>https://marcoscobena.com/?i=adal-and-how-to-sign-in-with-microsoft-accounts-in-xamarin-ios</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One the latest bits we added to &lt;a href="https://github.com/Microsoft/HealthClinic.biz"&gt;HealthClinic.biz suite&lt;/a&gt; is Azure's Active Directory Authentication (ADAL from now on). Basically, you can authenticate users by their Microsoft account, and let them access the app or not. You can do some other things, but our mainly goal was that one. For instance, we added also Touch ID so your fingerprint is saved to avoid entering the credentials once and again. Superb.&lt;/p&gt;

&lt;p&gt;However, I got the feeling I should extract all that I learned into a simple sample (try to read it without spaces, new buzzword coming :-) ) just to clarify the concepts needed to achieve such authentication, plus best practices on how to handle, for example, recovering the session when waking the app up again from scratch.&lt;/p&gt;

&lt;p&gt;&lt;img src="items/images/ezgif-com-gif-maker.gif" alt="" width="480" height="847" /&gt;
&lt;em&gt;MS Graph Auth app&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/MarcosCobena/MicrosoftGraphAuthSample"&gt;MicrosoftGraphAuthSample&lt;/a&gt; does just that. And this' the list of key points:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://geeks.ms/xamarinteam/2016/05/16/adal-and-how-to-sign-in-with-microsoft-accounts-in-xamarin-ios/"&gt;Read the entire article...&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 15 May 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Inject Wave Engine into Xamarin.iOS Apps</title>
  <guid>https://marcoscobena.com/?i=inject-wave-engine-into-xamarin-ios-apps</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My good friend and workmate &lt;a href="https://twitter.com/sescaladab"&gt;Sergio Escalada&lt;/a&gt; and I wrote a few months ago a quick guide, along with a sample (find the link below), on how you can render Wave Engine on a Xamarin.iOS app: not a full-screen game it-self, but adding specific views which are handled from Wave Engine.&lt;/p&gt;

&lt;p&gt;Today, we've updated the article and sample app, because since Wave Engine v. 2.1.0 it's much more easier to accomplish this:&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-354 aligncenter" src="items/images/abr-19-2016-15-58-17.gif" alt="abr-19-2016 15-58-17" width="480" height="299" /&gt;
&lt;em&gt;A GIF nowadays is worth a thousand words&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It opens a new world of chances, like creating custom CAD apps, or playing with AR, for instance. We hope our users, &lt;em&gt;you&lt;/em&gt;, will take this and make wonderful things. Don't forget to please share those with all of us!&lt;/p&gt;

&lt;h3 style="text-align:center;"&gt;&lt;a href="http://geeks.ms/waveengineteam/2015/11/27/integrating-wave-engine-within-an-ios-storyboard/"&gt;Integrating Wave Engine within an iOS Storyboard&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;PS: I'll be at Xamarin Evolve next week, so we can discuss this topic if you're attending as well! :-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 18 Apr 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Álvaro and I fighting the crisis</title>
  <guid>https://marcoscobena.com/?i=alvaro-and-i-fighting-the-crisis</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-322 aligncenter" src="items/images/aromarcos.jpg" alt="aro&amp;amp;amp;marcos" width="590" height="441" /&gt;
&lt;em&gt;Álvaro and my-self (carrying my C# t-shirt :-) )&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/KimCausierTrans"&gt;Kim&lt;/a&gt;, a passionate translator who I met while working in &lt;a href="http://workincompany.com"&gt;workINcompany&lt;/a&gt;, has published an article where &lt;a href="https://twitter.com/reinoso_alvaro"&gt;Álvaro&lt;/a&gt; and I answer a few questions regarding our app &lt;a href="http://marcoscobena.com/apps/buenosdias/"&gt;¡Buenos días! aro&lt;/a&gt;. I like that thing of "Crisis Busters". I guess it's needed nowadays to look for different ways to solve common problems -like the crisis we're going through, or living with- without loosing our smile.&lt;/p&gt;

&lt;p&gt;Today I've noticed &lt;a href="https://twitter.com/J_A_Cobena"&gt;my Dad&lt;/a&gt; uses the alarm included in the app to remember when to take the next pill... Such are the small things I find beauty on, and push me forward.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks so much Kim!&lt;/em&gt; And thanks too because the reason why the app looks native in terms of English language is due to your work. Without asking anything back, truth be told:&lt;/p&gt;

&lt;h3 style="text-align:center;"&gt;&lt;a href="http://becomingsevillana.blogspot.com/2016/04/crisis-busters-buenos-dias-app.html" rel="bookmark"&gt;Crisis Busters: Buenos días app&lt;/a&gt;&lt;/h3&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 09 Apr 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Setting up Xamarin.iOS builds in Visual Studio Team Services (formerly Visual Studio Online) through MacinCloud, and a bonus (HockeyApp)</title>
  <guid>https://marcoscobena.com/?i=setting-up-xamarin-ios-builds-in-visual-studio-team-services-formerly-visual-studio-online-through-macincloud-and-a-bonus-hockeyapp</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few weeks ago we needed to setup CI/CD builds in HealthClinic.biz private repo (&lt;a href="https://github.com/Microsoft/HealthClinic.biz"&gt;here&lt;/a&gt; is the public one), hosted in &lt;a href="https://www.visualstudio.com/es-es/products/visual-studio-team-services-vs.aspx"&gt;Visual Studio Team Services&lt;/a&gt; (VSTS from now on), for the &lt;a href="https://github.com/Microsoft/HealthClinic.biz/tree/master/src/MyHealth.Client.iOS"&gt;Patients&lt;/a&gt; app made with Xamarin.iOS. Since the suite includes a Cordoba app for iOS as well, such was being built through &lt;a href="http://www.macincloud.com/"&gt;MacinCloud&lt;/a&gt;, so the agent pool was already configured (if not, &lt;a href="https://blogs.msdn.microsoft.com/visualstudioalm/2015/11/18/macincloud-visual-studio-team-services-build-and-improvements-to-ios-build-support/"&gt;here&lt;/a&gt; can be found how to).&lt;/p&gt;

&lt;p&gt;Nowadays, VSTS offers a Xamarin.iOS build step where, if the agent pools support such capability, wraps everything needed to generate the final APP/IPA (1st for Simulator, OK for CI; 2nd for device, needed for CD) just selecting a Visual Studio Solution to build. The issue is, what happens with &lt;strong&gt;all&lt;/strong&gt; the other steps needed prior to this point? And, which are those?&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.plainconcepts.com/xamarinteam/wp-content/uploads/sites/4/2016/03/Captura-de-pantalla-2016-03-22-a-las-11.30.02.png"&gt;&lt;img class="aligncenter size-full wp-image-1722" src="http://blogs.plainconcepts.com/xamarinteam/wp-content/uploads/sites/4/2016/03/Captura-de-pantalla-2016-03-22-a-las-11.30.02.png" alt="Xamarin.IOS CI Build Definition in VSTS" width="614" height="594" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the things to solve prior building a Xamarin.iOS app is its NuGet packages. Not just NuGet, but &lt;a href="https://components.xamarin.com/"&gt;Xamarin Components&lt;/a&gt; as well, since Patients has dependencies on both places.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.plainconcepts.com/xamarinteam/2016/03/28/setting-up-xamarin-ios-builds-in-visual-studio-team-services-formerly-visual-studio-online-through-macincloud-and-a-bonus-hockeyapp/"&gt;Read the entire article...&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 27 Mar 2016 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Monkey.Tap with Wave Engine</title>
  <guid>https://marcoscobena.com/?i=monkey-tap-with-wave-engine</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few weeks ago Xamarin published on their blog a bunch of entries with a &lt;a href="https://blog.xamarin.com/building-your-first-game-with-monogame-finishing-the-app/"&gt;nice step-by-step guide&lt;/a&gt; to create Monkey.Tap with MonoGame.&lt;/p&gt;

&lt;p&gt;We believe &lt;a href="https://waveengine.net/"&gt;Wave Engine &lt;/a&gt;can offer some advantages when creating games, such like its &lt;a href="https://github.com/WaveEngine/Documentation/wiki/Component-based-Architecture"&gt;component-based architecture&lt;/a&gt;, or the new cross-platform &lt;a href="http://blogs.plainconcepts.com/waveengineteam/2015/09/15/whats-new-in-2-0/"&gt;Wave Visual Editor&lt;/a&gt;, among other ones; so we've reproduced Monkey.Tap with Wave Engine.&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-295 aligncenter" src="items/images/wavevisualeditorscreenshot.png" alt="WaveVisualEditorScreenshot" width="1920" height="1032" /&gt;
&lt;em&gt;Game being edited in Wave Visual Editor&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I've spent 2 Wave-ternoons (we call those to Tuesday and Thursday afternoons, where people not belonging to Wave Engine Core Team work on it), 5 h total, making the port, which can be found &lt;a href="https://github.com/MarcosCobena/MonkeyTapWaveEngine"&gt;&lt;span style="color:#0066cc;"&gt;here&lt;/span&gt;&lt;/a&gt;. It's by default for Windows desktop, but takes &lt;a href="https://github.com/WaveEngine/Documentation/wiki/Convert-Your-Game-to-More-Platforms"&gt;&lt;span style="color:#0066cc;"&gt;just a few clicks &lt;/span&gt;&lt;/a&gt;to get Android, iOS, Windows 10, Mac OS X and Linux as well.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 14 Mar 2016 23:00:00 GMT</pubDate>
</item>
<item>
  <title>The Value on Microsoft-Xamarin Agreement</title>
  <guid>https://marcoscobena.com/?i=the-value-on-microsoft-xamarin-agreement</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's close to 24:00 and I've just arrived to the hotel after spending a wonderful day at #dotNetSpain2016. However, I couldn't go to bed without writting down how much I value the acquisition of Xamarin from Microsoft.&lt;/p&gt;

&lt;p&gt;I grew up with my father sharing with me his love for Microsoft. Love in terms of excitement on how this company was changing our lifes in '90s. My dream during childhood was to work with them. It was to join Microsoft and push my pixel in empowering people. The dream came true in my early 20s.&lt;/p&gt;

&lt;p&gt;During such decade I discovered Mono Project. My first lines with C# were making small GUI demos for Gnome 2 using .NET bindings. And I could reuse my code on Windows as well. Mind blowing.&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Eventually Mono "became" Xamarin, and made mobile development a joy; where I can actually discuss with a Java Android developer whether calling Set() or SetExact() in AlarmManager is feasible in Android &amp;lt;5; or even share AutoLayout tips with an Objective-C/Swift iOS developer in a same level basis. Or develop a game engine such like Wave Engine to assure people can tell stories though video-games on as much platforms as possible. But I keep  still with C# in the end.&lt;/p&gt;

&lt;p&gt;And today Microsoft acquires Xamarin. It's like the best father in the world for the son you're aware has an incredible intelligence, thus you feel in the need of protecting him to assure gives his best to everyone around.&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I'm quite happy. And strongly think fantastic years are to come for us at Plain Concepts and the Xamarin community. Congratulations to everyone who has made this happen. Really motivating shift guys, really motivating shift. Like in '90s revolution it was all about the PC, nowadays it's all about mobile devices. And C# will keep with me a few years more on all of those.&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Sent from my iPhone&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 24 Feb 2016 23:00:00 GMT</pubDate>
</item>
<item>
  <title>New App: ¡Buenos días! aro</title>
  <guid>https://marcoscobena.com/?i=new-app-buenos-dias-aro</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;During half 2015 I published a proof-of-concept app to deliver small pictures a friend of mine, "aro", creates every morning. I was delighted with his work done with those pictures, and I wanted to create the bridge to make them arrive to as much people as possible.&lt;/p&gt;

&lt;p&gt;&lt;img class=" size-full wp-image-258 alignright" src="items/images/icon.png" alt="Icon" width="144" height="144" /&gt;&lt;/p&gt;

&lt;p&gt;Today, and after almost four months of intense work during our spare time, I'd like to share with all of you we've rebuilt the initial app from scratch, re-imagining it. It's not Xamarin.Forms anymore (at least nowadays), but pure Xamarin.Android. And it has a nice bunch of small details which we believe will borrow one or two smiles. :-)&lt;/p&gt;

&lt;p&gt;In order to close the circle of love, and promote the app, we'll send a beautiful e-gift to the person you'd like to make happy on Valentine's Day:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;English: &lt;a href="http://tinyurl.com/GoodMorningValentinesDay" target="_blank"&gt;http://tinyurl.com/GoodMorningValentinesDay&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Spanish: &lt;a href="http://tinyurl.com/BuenosDiasSanValentin" target="_blank"&gt;http://tinyurl.com/BuenosDiasSanValentin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I went two weeks ago to watch &lt;a href="http://www.imdb.com/title/tt2080374/"&gt;Steve Jobs&lt;/a&gt;, and noticed what we all should know but maybe tend to forget easily: &lt;em&gt;love is the underlying engine in our lives&lt;/em&gt;. Elisa is mine, and she deserves some credits here as, &lt;a href="http://marcoscobena.com/2015/06/08/my-first-app-published-buenos-dias/" target="_blank"&gt;I stated with the other app&lt;/a&gt;, she's the reason for being back again. I've made it to wish here "buenos días" (good morning) everyday.&lt;/p&gt;

&lt;p&gt;And, if you can't wait for Sunday to be here, can already go and &lt;a href="https://play.google.com/store/apps/details?id=com.marcoscobena.buenosdiasaro"&gt;grab the app from Play Store&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;em&gt;everyone&lt;/em&gt; who has helped us in one way or another. We, aro and I, really appreciate it!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 10 Feb 2016 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Por qué voto a Podemos</title>
  <guid>https://marcoscobena.com/?i=Por-qu--voto-a-Podemos-a96b2bde0ba8</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="#/contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;# Por qué voto a Podemos&lt;/p&gt;

&lt;p&gt;Durante los últimos meses me he preguntado en muchas ocasiones si me sabría explicar a mí mismo por qué voto a Podemos, qué me atrae de…   --------&lt;/p&gt;

&lt;h3&gt;Por qué voto a Podemos&lt;/h3&gt;

&lt;p&gt;Durante los últimos meses me he preguntado en muchas ocasiones si me sabría explicar a mí mismo por qué voto a Podemos, qué me atrae de ellos y de su ideología. Siempre he apoyado al PSOE, incluso me “alisté” como simpatizante en su Organización porque me motivaba mucho pensar en todas aquellas cosas que se podían hacer mejor y, mi idealismo no veía fronteras.&lt;/p&gt;

&lt;p&gt;Llegando al final de un libro que mis padres me regalaron por mi 31 cumpleaños, &lt;a href="http://www.amazon.es/Cosas-Que-Cont%C3%B3-Pajarito-colecci%C3%B3n/dp/8498753996"&gt;Cosas que me contó un pajarito&lt;/a&gt;, de Biz Stone (uno de los cofundadores de Twitter), me he acordado de repente de todo aquel inconformismo que algunos compañeros y yo vivimos en nuestra etapa de universitarios. Etapa fantástica, por cierto.&lt;/p&gt;

&lt;p&gt;Cuando era un derecho que los alumnos pudiésemos tener una evaluación continúa, ésto no era una realidad en algunas asignaturas. Al preguntar en clase, la respuesta era “no podemos”, no tenemos recursos, no tenemos tiempo, etc. Cuando los alumnos de las Ingenierías Técnica en Informática, en asambleas llenas, pedían que se hiciese algo porque les exigían en Sistemas Operativos conocimientos de C (un lenguaje de programación), pero las asignaturas de 1º ya no los cubrían, la respuesta era otra vez la misma. Siempre un no…&lt;/p&gt;

&lt;p&gt;Y así en varias ocasiones más. Para el primer caso, la evaluación continúa, unos compañeros y yo nos preocupamos de leer la legislación vigente, concertar citas con los distintos profesores, y negociar con ellos. Recuerdo estar con dos en concreto, que tenían fama de cierta insensibilidad, que resultaron ser los más respetuosos, y los que accedieron a una mejor negociación. A nosotros nos estaba costando el tiempo, pero a ellos también porque les iba a requerir un esfuerzo extra. Suspendí la asignatura y tuve que examinarme al final de todo, pero cientos de compañeros disfrutaron de esa opción. También, encontré un lado más humano y aprendí a valorar mejor a los profesores con los que tratamos.&lt;/p&gt;

&lt;p&gt;Para el segundo caso, junto con otros compañeros creamos &lt;a href="https://groups.google.com/forum/#!forum/char-etsii-us"&gt;CHAR&lt;/a&gt; (&lt;em&gt;C, Histórico, Ágil y Rápido&lt;/em&gt;). Creamos una pequeña asignatura lateral, con su pequeño temario, horario y aulas (hasta hicimos un &lt;a href="https://docs.google.com/viewer?a=v&amp;amp;pid=forums&amp;amp;srcid=MTQ4OTk3NDE1OTE1OTEwMzg4MzABMDMxNDQxOTYzODYzNzcwNDQyMDMBTVlpemVnVDUtbklKATAuMQEBdjI"&gt;cartel&lt;/a&gt;, que pusimos al entrar al Centro). Los que impartíamos éramos nosotros mismos. Chavales de 20 y pocos años que nos faltaba de todo pero la ilusión nos sobraba a raudales. Recuerdo que hasta localizamos una profesora de lengua de signos para que una compañera nuestra también pudiese asistir. No nos faltó de nada.&lt;/p&gt;

&lt;p&gt;La adrenalina de aquellos años de darnos cuenta por nosotros mismos que los no se pueden en realidad eran no queremos, o simplemente no sabemos cómo hacerlo, era la invitación más formal para aquellos que no aceptamos un no por definición. Uno puede pensar que ante la imposibilidad de tener evaluación continua lo que le queda es darle un empujón mayor a los libros. O que ante la ausencia de formación en C y la posterior exigencia, lo que queda es aprenderlo por tu cuenta.&lt;/p&gt;

&lt;p&gt;Y aquí viene lo que más me gusta de Podemos. La consciencia tan alta de que no todos tenemos la maldita misma suerte en la vida. La mejor forma de equilibrar una sociedad no creo que sea que cada uno se esfuerce desde la meta de salida que le haya tocado, para llegar a una misma meta final para todos, sino de hacer que da igual si eres un corredor de élite como uno que nunca pudo correr, las metas hagan que a ambos les cueste un esfuerzo similar llegar.&lt;/p&gt;

&lt;p&gt;Ayer me fui a la cama pensando que Podemos es lo más parecido a nuestro inconformismo universitario, y en la vida en general. Es el compañero que he agradecido tener al lado cuando recibía un no pero yo creía que quizá sí. Es el ánimo que ante el miedo de ir a contracorriente, cuando lo consigues, cuando se pueden evaluar las asignaturas por evaluación continua, cuando se puede dar esa formación de C, te dices que has hecho bien. Y yo por fin me puedo explicar a mi mismo, como decía ayer Pablo Iglesias, en &lt;a href="https://www.youtube.com/watch?v=_38NtXXDR0Y"&gt;esos 50 s finales tan buenos&lt;/a&gt;, que por favor sonría, que sí que se podrá.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 10 Dec 2015 23:00:00 GMT</pubDate>
</item>
<item>
  <title>We've Reviewed Grial UI Kit at Plain Concepts</title>
  <guid>https://marcoscobena.com/?i=weve-reviewed-grial-ui-kit-at-plain-concepts</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Our workmate Juan Antonio Cano (&lt;a href="https://twitter.com/jacano35"&gt;@jacano35&lt;/a&gt;) has done a great review of this fantastic kit for Xamarin.Forms. We'd like to thank the guys from &lt;a href="http://www.uxdivers.com/"&gt;UXDivers&lt;/a&gt; for sharing a license with us, so we could analyze it deeply. Enjoy it!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;A few weeks ago we got access to the Regular version of Grial UIKit for Xamarin.Forms. Grial UIKit comes with more than 30 awesome Xamarin.Forms’ XAML screens which showcase this Xamarin Component, as well as, support for customization capabilities of Xamarin default controls, providing and unified Grial Theme that looks and feels great on every platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.plainconcepts.com/xamarinteam/wp-content/uploads/sites/4/2015/11/icon_114x114.png"&gt;&lt;img class=" size-full wp-image-1681 aligncenter" src="http://blogs.plainconcepts.com/xamarinteam/wp-content/uploads/sites/4/2015/11/icon_114x114.png" alt="icon_114x114" width="114" height="114" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Here, in Plain Concepts, we are always eager to leverage every platform in which we develop our apps for.&lt;/p&gt;

&lt;p&gt;We try to know as close as we could the strengths and weaknesses of the native UI frameworks of our platform apps, its customization capabilities, etc…&lt;/p&gt;

&lt;p&gt;That’s the reason why Grial UIKit grabbed our attention, so I decided to analize it from the following perspectives:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Size&lt;/li&gt;
    &lt;li&gt;Dependencies&lt;/li&gt;
    &lt;li&gt;Number of controls and screens&lt;/li&gt;
    &lt;li&gt;Degrees of freedom when it comes to customization&lt;/li&gt;
    &lt;li&gt;Performance&lt;/li&gt;
    &lt;li&gt;Animations&lt;/li&gt;
    &lt;li&gt;Binding support and MVVM design&lt;/li&gt;
    &lt;li&gt;Multiplatform suport&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s start with it.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.plainconcepts.com/xamarinteam/2015/12/01/grial-uikit-review/"&gt;Read more...&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 01 Dec 2015 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wave Engine: Frustum Culling</title>
  <guid>https://marcoscobena.com/?i=wave-engine-frustum-culling</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Below &lt;a href="https://github.com/WaveEngine/Documentation/wiki/Frustum-Culling"&gt;recipe&lt;/a&gt; belongs to &lt;a href="https://github.com/WaveEngine/Documentation/wiki"&gt;Wave Engine's official Documentation wiki&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Goal&lt;/h2&gt;

&lt;p&gt;Frustum Culling is the technique which does not draw those things which are out of the camera scope. Wave Engine has enabled by default such algorithm, but it is important to highlight some key points in order to assure its correct behavior. You can read more on Frustum Culling technique &lt;a href="https://en.wikipedia.org/wiki/Hidden_surface_determination"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-hands-on" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Frustum-Culling#hands-on"&gt;&lt;/a&gt;Hands-on&lt;/h2&gt;

&lt;p&gt;Every &lt;a href="http://doc.waveengine.net/index.html#topic_000000000000104C.html"&gt;Drawable2D&lt;/a&gt; and &lt;a href="http://doc.waveengine.net/index.html#topic_0000000000001059.html"&gt;Drawable3D&lt;/a&gt; component supports Frustum Culling technique through the &lt;a href="http://doc.waveengine.net/index.html#topic_0000000000001052.html"&gt;CullingEnabled&lt;/a&gt; and &lt;a href="http://doc.waveengine.net/index.html#topic_000000000000105A.html"&gt;FrustumCullingEnabled&lt;/a&gt; properties, respectively, which are &lt;code&gt;true&lt;/code&gt; by default. In order to Wave Engine detect whether an object is inside or outside the scope of the camera, such needs to pack a collider. Please refer to &lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Detect-3d-collisions"&gt;Detect 3d collisions&lt;/a&gt; and &lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Detect-2d-collisions"&gt;Detect 2D collisions&lt;/a&gt; which focus on how to work with colliders -this will not be covered here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/WaveEngine/Samples/tree/master/Performance/FrustumCulling"&gt;FrustumCulling&lt;/a&gt; sample graphically shows entities dis/appearing on demand, with a mesh representing the frustum culling area.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-with-wave-visual-editor" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Frustum-Culling#with-wave-visual-editor"&gt;&lt;/a&gt;With Wave Visual Editor&lt;/h3&gt;

&lt;p&gt;Since Wave Visual Editor supports seeing in real time the current scene rendered, it also supplies diagnostic info, with culling counters included. Follow &lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Activate-diagnostics-mode"&gt;Activate diagnostics mode&lt;/a&gt;to achieve this. The "Culled" label which will be printed on the top left corner of the Viewport will do just that.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-with-visual-studioxamarin-studio" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Frustum-Culling#with-visual-studioxamarin-studio"&gt;&lt;/a&gt;With Visual Studio/Xamarin Studio&lt;/h3&gt;

&lt;p&gt;This technique can be disabled globally also through &lt;a href="http://doc.waveengine.net/index.html#topic_0000000000001289.html"&gt;RenderManager&lt;/a&gt;'s&lt;a href="http://doc.waveengine.net/index.html#topic_000000000000129D.html"&gt;FrustumCullingEnabled&lt;/a&gt; property, setting it as &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Further, this recipe does not involve source code which would require Visual Studio/Xamarin Studio.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-wrap-up" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Frustum-Culling#wrap-up"&gt;&lt;/a&gt;Wrap-up&lt;/h2&gt;

&lt;p&gt;Wave Engine has built-in support for Frustum Culling technique, which does not draw those meshes which are out of the camera scope. Such is activated by default, but require entities to pack a collider.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 09 Nov 2015 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Quick Dump of Things I've Learned This Week Developing on Apple Watch</title>
  <guid>https://marcoscobena.com/?i=quick-dump-of-things-ive-learned-this-week-developing-on-apple-watch</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It turns out we're lately at &lt;a href="http://www.plainconcepts.com" target="_blank"&gt;Plain Concepts&lt;/a&gt; working on a few iOS apps which involve Apple Watch. And we're using Xamarin. :-) The one I'm working on is quite simple, but I've learned a few things which can be interesting to any other one making a first landing into a similar project.&lt;/p&gt;

&lt;p&gt;I've noticed some differences with Storyboards on iPhone/iPad (iPod Touch keeps alive?) By default, the Watch App's UI lives inside an stack layout. You drop an element, it stacks at the bottom of the last one. It opens an small world of interesting effects, as you can hide/show elements to simulate different states of the app life-cycle.&lt;/p&gt;

&lt;p&gt;AutoLayout? Well, no more. Margins to the Watch edges aren't longer needed, since the bezel implicitly has those. Just assume it'll look good on the device. And labels, buttons, etc. look good also when stacked. Simply I haven't seen my-self needing those, although we've been able to reproduce our Design quite good.&lt;/p&gt;

&lt;p&gt;Group is also a joy: just be aware you can set an image as background, it opens also more possibilities.&lt;/p&gt;

&lt;p&gt;Typefaces can't be modified within the Designer, it must be done from the Controller:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c-sharp
var attrString = new NSAttributedString(&amp;amp;quot;Foo&amp;amp;quot;, 
    new UIStringAttributes 
    { 
        Font = UIFont.SystemFontOfSize(14, UIFontWeight.Medium) 
    });
fooLabel.SetText(attrString);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Strip-like animations can be easily done. Just add the whole list of images to the App's Resources, with a common patten such like "stripX.png", where X is a number, and the following code will do the rest for you (here the animation is set on a Group's background, &lt;code&gt;step&lt;/code&gt; is an int with a value within the strip limits):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c-sharp
fooGroup.SetBackgroundImage(&amp;amp;quot;strip&amp;amp;quot;);
countdownGroup.StartAnimating(new NSRange(0, step), 1, 1);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Clancey/WormHoleSharp" target="_blank"&gt;WormHoleSharp&lt;/a&gt; is our friend (James Clancey, thanks for your effort). If the app is quite small, and only needs iPhone to Watch communication, you may find it better to lay on &lt;code&gt;AppDelegate.HandleWatchKitExtensionRequest()&lt;/code&gt;. Stop! It can be tricky, at least under my opinion, to forward the communication through the AppDelegate (messaging, for instance, can be an option). Instead, it's much more elegant, wherever you need to send/receive info (did I mention you can also send info from the Watch back?), to do something like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c-sharp
_wormhole.PassMessage(FooMessage.MessageType, 
    new FooMessage 
    { 
        Text = &amp;amp;quot;Hello, Watch!&amp;amp;quot; 
    });
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And... that's all for now. Maybe those small things make you landing on Apple Watch easier.&lt;/p&gt;

&lt;p&gt;Happy weekend!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Thu, 05 Nov 2015 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wave Engine: Create a Custom UI Control</title>
  <guid>https://marcoscobena.com/?i=wave-engine-create-a-custom-ui-control</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;div class="gh-header"&gt;
&lt;div class="gh-header-show"&gt;
&lt;p class="gh-header-title instapaper_title"&gt;We're at the team finishing the first bunch of &lt;a href="https://github.com/WaveEngine/Documentation/wiki/"&gt;recipes&lt;/a&gt; synced with 2.0 version of the engine. Let me share with you &lt;a href="https://github.com/WaveEngine/Documentation/wiki/Create-a-Custom-UI-Control"&gt;this one&lt;/a&gt; where we explain quickly how to create your own UI controls. Enjoy it!&lt;/p&gt;


&lt;hr /&gt;

&lt;h2&gt;Goal&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="wiki-content"&gt;
&lt;div class="wrap has-rightbar"&gt;
&lt;div id="wiki-body" class="gollum-markdown-content instapaper_body"&gt;
&lt;div class="markdown-body"&gt;

It is a common pattern to begin a game though a menu: new game, load game, options, etc. Such elements are built by composition of UI controls, like buttons and labels. Wave Engine ships with a list of &lt;a href="http://doc.waveengine.net/index.html#topic_0000000000001C02.html"&gt;predefined controls&lt;/a&gt;, along with layer types, which can solve multiple situations in your games.

However, what happens if you need an specific UI element which does not exist? This recipe gives a quick hint to cover this question, providing a simple pattern to build a typical alert box, with accept and cancel buttons.
&lt;h2&gt;&lt;a id="user-content-hands-on" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Create-a-Custom-UI-Control#hands-on"&gt;&lt;/a&gt;Hands-on&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-with-wave-visual-editor" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Create-a-Custom-UI-Control#with-wave-visual-editor"&gt;&lt;/a&gt;With Wave Visual Editor&lt;/h3&gt;
This recipe cannot be done just by using the Editor, although it is needed to create the initial project, and choose the 2D camera (UIs work in 2D mode), by cliking on the 3D toggle button from the icons bar. You will notice it switches to 2D, and the Viewport follows accordingly by switching to the default 2D camera.

In order to continue, please keep reading below section.
&lt;h3&gt;&lt;a id="user-content-with-visual-studioxamarin-studio" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Create-a-Custom-UI-Control#with-visual-studioxamarin-studio"&gt;&lt;/a&gt;With Visual Studio/Xamarin Studio&lt;/h3&gt;
Once the project is correctly set-up following above instructions, open the C# solution through the File menu.

Our alert control will be added like any other &lt;code&gt;Entity&lt;/code&gt;, and will have a &lt;code&gt;Show()&lt;/code&gt; method with the following signature:
&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; Show(&lt;span class="pl-k"&gt;string&lt;/span&gt; message, Action okAction, Action cancelAction)&lt;/pre&gt;
&lt;/div&gt;
, where 'message' will be the alert's title, and the two following &lt;code&gt;Action&lt;/code&gt; the specific logic to execute upon clicking on accept and cancel buttons, respectively.

The &lt;code&gt;Alert&lt;/code&gt; control will inherit &lt;a href="http://doc.waveengine.net/index.html#topic_0000000000001C4B.html"&gt;Grid&lt;/a&gt;, as it fits perfectly to align the internal controls: a&lt;a href="http://doc.waveengine.net/topic_0000000000001D57.html"&gt;TextBlock&lt;/a&gt;, and two &lt;a href="http://doc.waveengine.net/topic_0000000000001C03.html"&gt;Button&lt;/a&gt;. The firts step it to configure such &lt;code&gt;Grid&lt;/code&gt; to handle such:
&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Alert&lt;/span&gt; : &lt;span class="pl-k"&gt;Grid&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;Alert&lt;/span&gt;()
        : &lt;span class="pl-c1"&gt;base&lt;/span&gt;()
    {
        &lt;span class="pl-c1"&gt;this&lt;/span&gt;.SetUpGrid();

        […]

        &lt;span class="pl-c1"&gt;this&lt;/span&gt;.IsVisible = &lt;span class="pl-c1"&gt;false&lt;/span&gt;;
    }

    […]&lt;/pre&gt;
&lt;/div&gt;
By default, the control will be hidden upon creating it, and &lt;code&gt;Show()&lt;/code&gt; will "wake" it up on demand when needed.
&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; SetUpGrid()
{
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Width = &lt;span class="pl-c1"&gt;320&lt;/span&gt;;
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Height = &lt;span class="pl-c1"&gt;240&lt;/span&gt;;

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.IsBorder = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.HorizontalAlignment = HorizontalAlignment.Center;
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.VerticalAlignment = VerticalAlignment.Center;

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.RowDefinitions.Add(&lt;span class="pl-k"&gt;new&lt;/span&gt; RowDefinition() { Height = &lt;span class="pl-k"&gt;new&lt;/span&gt; GridLength(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, GridUnitType.Proportional) });
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.RowDefinitions.Add(&lt;span class="pl-k"&gt;new&lt;/span&gt; RowDefinition() { Height = &lt;span class="pl-k"&gt;new&lt;/span&gt; GridLength(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, GridUnitType.Proportional) });
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.ColumnDefinitions.Add(&lt;span class="pl-k"&gt;new&lt;/span&gt; ColumnDefinition() { Width = &lt;span class="pl-k"&gt;new&lt;/span&gt; GridLength(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, GridUnitType.Proportional) });
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.ColumnDefinitions.Add(&lt;span class="pl-k"&gt;new&lt;/span&gt; ColumnDefinition() { Width = &lt;span class="pl-k"&gt;new&lt;/span&gt; GridLength(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, GridUnitType.Proportional) });
}&lt;/pre&gt;
&lt;/div&gt;
As it can be appreciated, the latest lines configure the &lt;code&gt;Grid&lt;/code&gt; rows and columns, which will later allow us to place the rest of controls:
&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; CreateHeader()
{
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.headerTextBlock = &lt;span class="pl-k"&gt;new&lt;/span&gt; TextBlock
    {
        Width = &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Width,
        Height = &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Height / &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
        Text = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        TextWrapping = &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        TextAlignment = TextAlignment.Center,
        VerticalAlignment = VerticalAlignment.Center
    };

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.headerTextBlock.SetValue(GridControl.RowProperty, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.headerTextBlock.SetValue(GridControl.ColumnProperty, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.headerTextBlock.SetValue(GridControl.ColumnSpanProperty, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Add(&lt;span class="pl-c1"&gt;this&lt;/span&gt;.headerTextBlock);
}&lt;/pre&gt;
&lt;/div&gt;
&lt;code&gt;CreateHeader()&lt;/code&gt; must be called within &lt;code&gt;Alert&lt;/code&gt; ctor. In the same way, the other two buttons:
&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; CreateCancelButton()
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; cancelButton = &lt;span class="pl-k"&gt;new&lt;/span&gt; Button()
    {
        Text = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cancel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        HorizontalAlignment = HorizontalAlignment.Center,
        VerticalAlignment = VerticalAlignment.Center
    };

    cancelButton.Click += (sender, args) =&amp;gt;
    {
        &lt;span class="pl-c1"&gt;this&lt;/span&gt;.IsVisible = &lt;span class="pl-c1"&gt;false&lt;/span&gt;;

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;this&lt;/span&gt;.cancelAction != &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        {
            &lt;span class="pl-c1"&gt;this&lt;/span&gt;.cancelAction();
        }
    };

    cancelButton.SetValue(GridControl.RowProperty, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    cancelButton.SetValue(GridControl.ColumnProperty, &lt;span class="pl-c1"&gt;0&lt;/span&gt;);

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Add(cancelButton);
}

&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; CreateOKButton()
{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; okButton = &lt;span class="pl-k"&gt;new&lt;/span&gt; Button
    {
        Text = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        HorizontalAlignment = HorizontalAlignment.Center,
        VerticalAlignment = VerticalAlignment.Center
    };

    okButton.Click += (sender, args) =&amp;gt;
    {
        &lt;span class="pl-c1"&gt;this&lt;/span&gt;.IsVisible = &lt;span class="pl-c1"&gt;false&lt;/span&gt;;

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;this&lt;/span&gt;.okAction != &lt;span class="pl-c1"&gt;null&lt;/span&gt;)
        {
            &lt;span class="pl-c1"&gt;this&lt;/span&gt;.okAction();
        }
    };

    okButton.SetValue(GridControl.RowProperty, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    okButton.SetValue(GridControl.ColumnProperty, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Add(okButton);
}&lt;/pre&gt;
&lt;/div&gt;
The code is almost the same on both cases, but are placed on different spaces within the main &lt;code&gt;Grid&lt;/code&gt;.

Finally, &lt;code&gt;Show()&lt;/code&gt; will make the control visible again, triggering the specific &lt;code&gt;Action&lt;/code&gt; when the user interacts with it:
&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; Show(&lt;span class="pl-k"&gt;string&lt;/span&gt; message, Action okAction, Action cancelAction)
{
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.headerTextBlock.Text = message;

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.okAction = okAction;
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.cancelAction = cancelAction;

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.IsVisible = &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
}&lt;/pre&gt;
&lt;/div&gt;
Within a sample use scenario, this would be the final result:
&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; CreateScene()
{
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.Load(WaveContent.Scenes.MyScene);

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.alert = &lt;span class="pl-k"&gt;new&lt;/span&gt; Alert();
    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.EntityManager.Add(&lt;span class="pl-c1"&gt;this&lt;/span&gt;.alert);
}

&lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; Start()
{
    &lt;span class="pl-c1"&gt;base&lt;/span&gt;.Start();

    &lt;span class="pl-c1"&gt;this&lt;/span&gt;.alert.Show(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Would you like to download the game assets?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        () =&amp;gt; Debug.WriteLine(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Yes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
        () =&amp;gt; Debug.WriteLine(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;No&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
}&lt;/pre&gt;
&lt;/div&gt;
&lt;img src="https://raw.githubusercontent.com/WaveEngine/Documentation/9da23b148f021bab5c5ca1a451daf41c80efac28/WikiResources/Images/UI/CreateACustomUIControl/AlertScreenshot.PNG" alt="" /&gt;
&lt;h2&gt;&lt;a id="user-content-wrap-up" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Create-a-Custom-UI-Control#wrap-up"&gt;&lt;/a&gt;Wrap-up&lt;/h2&gt;
You have learned how to extend the existing UI, through composition, to build a new alert control.

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 28 Oct 2015 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Wave Engine: Play Sound (Sound Effects &amp; Themes)</title>
  <guid>https://marcoscobena.com/?i=wave-engine-play-sound-effects-and-themes</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Some members of the &lt;a href="https://waveengine.net/"&gt;Wave Engine&lt;/a&gt; Team are working on updating recipes to 2.0, and extend those to achieve more and more features of the engine. Past week, I wrote &lt;a href="https://github.com/WaveEngine/Documentation/wiki/Play-Sound-%28Sound-Effects-%26-Themes%29"&gt;this one&lt;/a&gt; at &lt;a href="https://github.com/WaveEngine/Documentation/wiki"&gt;Wave Engine Documentation wiki&lt;/a&gt;. I hope it'll move you something inside to give a chance to &lt;a href="https://waveengine.net/Downloads"&gt;Wave&lt;/a&gt;!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2&gt;Goal&lt;/h2&gt;

&lt;p&gt;Games without music and sound effects is like a whole day without bread. It is well knows by everyone Tetris’ background music, while the blocks are falling; or the sound effect of Mario Bros. jumping, even taking a coin. Wave Engine makes it super easy to add those to your games, you will learn how to achieve such with just a few steps.&lt;/p&gt;

&lt;p&gt;Note: Wave Engine also supports 3D sounds, which is not covered on this recipe.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-hands-on" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Play-Sound-%28Sound-Effects-%26-Themes%29#hands-on"&gt;&lt;/a&gt;Hands-on&lt;/h2&gt;

&lt;h3&gt;&lt;a id="user-content-with-wave-visual-editor" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Play-Sound-%28Sound-Effects-%26-Themes%29#with-wave-visual-editor"&gt;&lt;/a&gt;With Wave Visual Editor&lt;/h3&gt;

&lt;p&gt;Start by importing both a sound file (WAV format, for example) and a music one (i.e., MP3). Enter on the Assets folder, at Asset Details panel, right-click button, Import Asset.&lt;/p&gt;

&lt;p&gt;A double click on the MP3 file will launch OS by-default player. However, doing the same on the WAV one will open the Asset Viewer window, with a live preview of the sound, and some characteristics which can be tweaked:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;ZipCompress: whether the intermediate file generated is also zipped (default), reducing on-disk memory. The first time a compressed asset is loaded into a game, it is uncompressed for future access.&lt;/li&gt;
    &lt;li&gt;ChannelFormat: Stereo (default) or Mono. Note: in order to add the sound to be used in 3D, you must change this value to mono.&lt;/li&gt;
    &lt;li&gt;AudioQuality: Low, Medium or High (default).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest of steps are done in code, so please continue with below section.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-with-visual-studioxamarin-studio" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Play-Sound-%28Sound-Effects-%26-Themes%29#with-visual-studioxamarin-studio"&gt;&lt;/a&gt;With Visual Studio/Xamarin Studio&lt;/h3&gt;

&lt;p&gt;Once the sound and music files are added through Wave Visual Editor, open the associated C# solution (remember: File &amp;gt; Open C# Solution…)&lt;/p&gt;

&lt;h4&gt;&lt;a id="user-content-playing-sound" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Play-Sound-%28Sound-Effects-%26-Themes%29#playing-sound"&gt;&lt;/a&gt;Playing Sound&lt;/h4&gt;

&lt;p&gt;There are two pieces which "play" toguether to reproduce sounds in Wave Engine:&lt;a href="http://builds.waveengine.net/WaveDoc/index.html#topic_0000000000000F9C.html"&gt;SoundBank&lt;/a&gt; and &lt;a href="http://builds.waveengine.net/WaveDoc/index.html#topic_0000000000000EF5.html"&gt;SoundPlayer&lt;/a&gt; service. &lt;code&gt;SoundBank&lt;/code&gt; allows us to associate every sound to be played, with the option to define an &lt;a href="http://builds.waveengine.net/WaveDoc/index.html#topic_0000000000000DFD.html"&gt;AssetsContainer&lt;/a&gt; (this will assure, for instance, to be unloaded when an &lt;a href="http://builds.waveengine.net/WaveDoc/index.html#topic_0000000000000DCA.html"&gt;Scene&lt;/a&gt; ends, if used this last one's container). &lt;code&gt;SoundPlayer&lt;/code&gt; is the service in charge of registering the previous bank, plus playing sounds contained within it.&lt;/p&gt;

&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; soundBank = &lt;span class="pl-k"&gt;new&lt;/span&gt; SoundBank(Assets);
&lt;span class="pl-c"&gt;// Sound.wav was added through Wave Visual Editor&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; sound = &lt;span class="pl-k"&gt;new&lt;/span&gt; SoundInfo(WaveContent.Assets.Sound_wav);

soundBank.Add(sound);

WaveServices.SoundPlayer.RegisterSoundBank(soundBank);
WaveServices.SoundPlayer.Play(sound);&lt;/pre&gt;
&lt;/div&gt;

&lt;h4&gt;&lt;a id="user-content-playing-music" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Play-Sound-%28Sound-Effects-%26-Themes%29#playing-music"&gt;&lt;/a&gt;Playing Music&lt;/h4&gt;

&lt;p&gt;Music follows a similar pattern, without the need to work with a bank, just the &lt;a href="http://builds.waveengine.net/WaveDoc/topic_0000000000000E65.html"&gt;MusicPlayer&lt;/a&gt;.&lt;/p&gt;

&lt;div class="highlight highlight-source-cs"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// Song.mp3 was added through Wave Visual Editor&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; music = &lt;span class="pl-k"&gt;new&lt;/span&gt; MusicInfo(WaveContent.Assets.Song_mp3);

WaveServices.MusicPlayer.Play(music);&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Both sound and music player services contain multiple methods which allow common use cases like stopping, pausing, etc. Please refer to their &lt;a href="http://builds.waveengine.net/WaveDoc/"&gt;API&lt;/a&gt; to see a full description of those.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-wrap-up" class="anchor" href="https://github.com/WaveEngine/Documentation/wiki/Play-Sound-%28Sound-Effects-%26-Themes%29#wrap-up"&gt;&lt;/a&gt;Wrap-up&lt;/h2&gt;

&lt;p&gt;We have learned how to play sound effects and songs. Adding those files to our project is done through Wave Visual Editor, while the playback is handled by code.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Mon, 12 Oct 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Colors in iOS: Same Value, Different Tonality</title>
  <guid>https://marcoscobena.com/?i=colors-in-ios-same-value-different-tonality</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This entry was originally written at &lt;a href="http://blogs.plainconcepts.com/xamarinteam/2015/10/05/colors-in-ios-same-value-different-tonality/"&gt;Plain Concepts' Xamarin Team Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While working on a native Xamarin.iOS app, I noticed a difference between the same color applied through source code to the navigation bar and through Interface Builder to the background of a scroll view. There was a small difference between both colors' tonality, although I had entered the same RGB values on both places. You can appreciate the difference on this small sample app, where pure red (&lt;span style="color:#ff0000;"&gt;#ff0000&lt;/span&gt;) is used on both views:&lt;/p&gt;

&lt;p&gt;&lt;img class="aligncenter size-full wp-image-127" src="items/images/screenshot-color-issue.png" alt="screenshot-color-issue" width="573" height="500" /&gt;&lt;/p&gt;

&lt;p&gt;When you enter an RGB value in code, through an &lt;code&gt;UIColor&lt;/code&gt; for instance, it's rendered fine. The color you see on the emulator/device is correct, and should match the one on the design (take care not to have a semi-transparent layer on top of it, or something similar).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c-sharp
redView.BackgroundColor = UIColor.Red;
&lt;/code&gt;&lt;/p&gt;

&lt;p style="text-align:center;"&gt;&lt;img class="aligncenter size-full wp-image-128" src="items/images/screenshot-color-debugging.png" alt="screenshot-color-debugging" width="947" height="418" /&gt;&lt;em&gt;Note the RGB matches the one we're expecting: 255, 0, 0; or #ff0000&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Doing the same through Interface Builder... well, it's a little bit different. It's done through the Colors window and, more specifically, the Color Sliders tab (2&lt;sup&gt;nd&lt;/sup&gt; one from left), where you can enter an RGB value in hex format.&lt;/p&gt;

&lt;p&gt;&lt;img class="aligncenter size-full wp-image-129" src="items/images/screenshot-color-picker.png" alt="screenshot-color-picker" width="450" height="518" /&gt;&lt;/p&gt;

&lt;p&gt;So, if I entered the same exact value on both places, why those look different? The answer is not so easy to see by one-self.&lt;/p&gt;

&lt;p&gt;Back on the Colors window, do you see the small "settings" button at the top-right side? Doing click on it presents you all the available color spaces, which understand in a different way the color value entered previously. In my case, sRGB IEC61966-2.1 is predefined. If I change it to Generic RGB, the &lt;span style="color:#ff0000;"&gt;#ff0000&lt;/span&gt; red value is updated to &lt;span style="color:#fb0007;"&gt;#fb0007&lt;/span&gt;, which's indeed the color being rendered when the app is run on the emulator. Then, If I want exact #ff0000 to be rendered, I must assure to choose first Generic RGB and, just after, modify the R, G, B sliders manually, until matching the value 255, 0, 0; or #ff0000. This way pure red color will be codified on the Storyboard, thus correctly shown on the device:&lt;/p&gt;

&lt;p&gt;&lt;img class="aligncenter size-full wp-image-130" src="items/images/screenshot-color-issue-fixed.png" alt="screenshot-color-issue-fixed" width="582" height="500" /&gt;&lt;/p&gt;

&lt;p&gt;Dear Reader: if you know a different way to quickly set the dessired color exactly as you intend in Interface Builder, please share it as a comment, or ping me at &lt;a href="https://twitter.com/CobenaMarcos"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I hope it'll be useful for anyone else! &lt;a href="https://en.wikipedia.org/wiki/The_Devil_is_in_the_detail"&gt;The Devil is in the detail&lt;/a&gt;. :-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 04 Oct 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Missing Shadows on Lollipop's CardView</title>
  <guid>https://marcoscobena.com/?i=missing-shadows-on-lollipops-cardview</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Have you ever tried to drop shadows from CardViews? Did those happen on pre-Lollipop but don't on newer ones? Did you look for "android cardview shadow issue lollipop" and find just a few answers and none of them worked? Do even the shadows margins are just there, you can see those?&lt;/p&gt;

&lt;p&gt;&lt;img class="aligncenter size-full wp-image-98" src="items/images/googlenowcardviewsshadows.png" alt="Google Now CardViews' Shadows" width="356" height="486" /&gt;&lt;/p&gt;

&lt;p style="text-align:center;"&gt;&lt;em&gt;CardViews in Google Now. Note the shadows around white frames&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you nodded your head once and again, stop searching for the answer, the reason why shadows weren't showing on Lollipop was this missing piece:&lt;/p&gt;

&lt;p&gt;```c-sharp&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; ...&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;application android:hardwareAccelerated=&amp;quot;true&amp;quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/manifest&amp;gt;&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;Credits go for &lt;a href="http://stackoverflow.com/a/30949352"&gt;this answer&lt;/a&gt;, from vcapra1, whose just has 1 single point but definitely made my day past Friday, when the burndown was about to intersect with 0.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 20 Sep 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>My First App Published: ¡Buenos días!</title>
  <guid>https://marcoscobena.com/?i=my-first-app-published-buenos-dias</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dedicado a Elisa, que siempre me ha empujado para que siguiera con ello, y no lo dejara. Gracias, mi amor. ¡Te quiero!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;¡Buenos días!&lt;/em&gt; is the spanish translation for Good morning! What does this have in common with mobile apps or Xamarin?&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.aroideas.com/"&gt;Álvaro Reinoso&lt;/a&gt; (Aro) is a freelance artist who takes a picture of the reality around him every day (from monday to friday), and draws up to transform it into something very valuable. He shares it on Twitter every morning, accompanied by the hashtag #buenosdias, translated into multiple languages. I met Aro when I was going to work at &lt;a href="http://workincompany.com/"&gt;workINcompany&lt;/a&gt; (a coworking space in Seville), and since then I have always had the idea of making an app that takes his work to each mobile device.&lt;/p&gt;

&lt;p style="text-align:center;"&gt;[![](https://img.youtube.com/vi/wJbvQn98N-Y/0.jpg)](https://www.youtube.com/watch?v=wJbvQn98N-Y)&lt;/p&gt;

&lt;p style="text-align:center;"&gt;&lt;em&gt;Why saying good morning is a good idea? (Only available in spanish, sorry; but drawings are self-explanatory)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I had some meetings with Aro, sketching what we both would like the app to do. Everything said, it was much more further what the app does actually. However, as I learned do not remember where about &lt;a href="http://en.wikipedia.org/wiki/Minimum_viable_product"&gt;MVPs&lt;/a&gt; (not Microsoft/Xamarin ones hehe, but Minimum Viable Products), it is important to focus on &lt;em&gt;that&lt;/em&gt; functionality which holds the reason why the app should exist. I liked reading on &lt;a href="http://motzcod.es/post/112797487377/coffee-filter-a-c-powered-android-app-in-2-days"&gt;Coffee Filter&lt;/a&gt;, from James Montemagno and Frank Krueger, because I feel in the roots the same concerning bringing ideas to apps.&lt;/p&gt;

&lt;p&gt;The app ¡Buenos días! just does that: shows the last image, created that same morning. I have tried to display it with the same affection with which Aro creates it, and also make it super simple to share. I really enjoyed working on it. I guess it comes from the times when I was a child, and was everyday with LEGO blocks, dreaming with inventing new stuff.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://xamarin.com/"&gt;Xamarin&lt;/a&gt; is for me with 30 years old what LEGO was with 10. I have made it using my beloved &lt;a href="http://xamarin.com/forms"&gt;Xamarin.Forms&lt;/a&gt;, with a little bit of XAML, querying &lt;a href="https://twitter.com/reinoso_alvaro"&gt;Aro's Twitter account&lt;/a&gt; through &lt;a href="https://linqtotwitter.codeplex.com/"&gt;LINQ to Twitter&lt;/a&gt;. Some &lt;a href="https://github.com/MarcosCobena/BuenosDias#buenos-días"&gt;plugins&lt;/a&gt; have made my life easier too. Initially, the idea was to share the source code on my GitHub account, and write a post here, but I did not feel comfortable with that: this app should be available to anyone, with ease:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://marcoscobena.com/buenosdias"&gt;&lt;img class="wp-image-79 size-thumbnail aligncenter" src="items/images/buenos-dc3adas-icono-hi-def-300x300.png" alt="Buenos días" width="150" height="150" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I would like to thank my parents, neighborhood friends and workmates at &lt;a href="http://www.plainconcepts.com/"&gt;Plain Concepts&lt;/a&gt;, which have played around with it those days, specially: Javier Fernández, thank you guy for sharing that crash trace; David Ávila, he made me think about the animations which happen on the app, thank you dude. Both sent me even some features which would be cool to have. &lt;a href="https://github.com/MarcosCobena/BuenosDias/issues"&gt;Written down&lt;/a&gt;.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 07 Jun 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>¡Buenos días! aro</title>
  <guid>https://marcoscobena.com/?i=buenosdias</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.marcoscobena.buenosdiasaro&amp;amp;utm_source=global_co&amp;amp;utm_medium=prtnr&amp;amp;utm_content=Mar2515&amp;amp;utm_campaign=PartBadge&amp;amp;pcampaignid=MKT-AC-global-none-all-co-pr-py-PartBadges-Oct1515-1"&gt;&lt;img class="alignleft" src="https://play.google.com/intl/en_us/badges/images/apps/en-play-badge.png" alt="Get it on Google Play" width="250" height="74" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(On Feb. 2016, this app was unpublished from Android, publishing instead an even better version created from scratch / &lt;em&gt;En feb. de 2016, se anuló la publicación de esta app en Android, publicando en su lugar una versión incluso mejor creada desde cero&lt;/em&gt;: &lt;a href="https://play.google.com/store/apps/details?id=com.marcoscobena.buenosdiasaro"&gt;¡Buenos días! aro&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.windowsphone.com/s?appid=28d71d6e-df0b-4875-bcf8-b34d89a68888" target="_blank"&gt;&lt;img class="alignleft" src="items/images/258x67_wps_download_blk.png" alt="Download from Windows Phone Store" width="250" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Windows Phone version corresponds to the old POC app, not the one currently in Android / &lt;em&gt;La versión de Windows Phone corresponde con la antigua app POC, no con la actual en Android&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img class="alignnone wp-image-267" src="items/images/ios-download.png" alt="ios-download" width="250" height="74" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Abajo puedes encontrar la versión en español.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update Feb. 2016:&lt;/strong&gt; We've &lt;a href="http://marcoscobena.com/2016/02/11/new-app-buenos-dias-aro/"&gt;rewritten the app from scratch&lt;/a&gt;. :-)&lt;/p&gt;

&lt;p&gt;¡Buenos días! is a &lt;a href="http://www.aroideas.com/buenos-dias/"&gt;beautiful initiative&lt;/a&gt;, where &lt;a href="http://www.aroideas.com/contact/"&gt;Álvaro Reinoso&lt;/a&gt; (ARO) takes a picture of the reality around him every day, and draws up to transform it into something very valuable.&lt;/p&gt;

&lt;p&gt;I met Álvaro when I went to work at &lt;a href="http://workincompany.com/"&gt;workINcompany&lt;/a&gt; (a coworking space in Seville), and since then I have always had the idea of making an app that takes his work to each phone.&lt;/p&gt;

&lt;p&gt;The app ¡Buenos días! just does that: shows the last image, created that same morning. I have tried the image is displayed with the same affection with which Álvaro creates it, and also make it super simple to share.&lt;/p&gt;

&lt;p&gt;Because, in the end, what we both pursue is to make you too happy every morning. And, if it makes you smile, to me it is already worth the work.&lt;/p&gt;

&lt;p&gt;I hope you enjoy it as much as me doing it!&lt;/p&gt;

&lt;p&gt;PS: Hey, are you a developer? Take a look at the &lt;a href="https://github.com/MarcosCobena/BuenosDias" target="_blank"&gt;GitHub repo.&lt;/a&gt; then! (Such corresponds to the initial Xamarin.Forms POC I made.)&lt;/p&gt;

&lt;p style="text-align:right;"&gt;-&lt;a href="http://marcoscobena.com/contact/"&gt;Marcos Cobeña Morián&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Actualización feb. 2016:&lt;/strong&gt; Hemos &lt;a href="http://marcoscobena.com/2016/02/11/new-app-buenos-dias-aro/"&gt;reescrito la app desde cero&lt;/a&gt;. :-)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;¡Buenos días! es una &lt;a href="http://www.aroideas.com/buenos-dias/"&gt;iniciativa preciosa&lt;/a&gt;, donde &lt;a href="http://www.aroideas.com/contact/"&gt;Álvaro Reinoso&lt;/a&gt; (ARO) hace una fotografía de la realidad que le rodea cada día, y dibuja encima para transformarla en algo con mucho valor.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Conocí a Álvaro cuando iba a trabajar a &lt;a href="http://workincompany.com/"&gt;workINcompany&lt;/a&gt; (un espacio de coworking en Sevilla), y desde entonces siempre he tenido la idea de hacer una app que lleve su obra a cada teléfono.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;La app ¡Buenos días! sólo hace eso: mostrar la última imagen, creada ésa misma mañana. He intentado que la imagen se muestre con el mismo cariño con el que Álvaro la crea, y también que sea súper sencillo compartirla.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Porque, al final, lo que ambos perseguimos es hacerte a ti también feliz cada mañana. Y, si te provoca una sonrisa, para mi ya ha valido la pena el trabajo.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;¡Espero que la disfrutes tanto como yo haciéndola!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PD: Ey, ¿eres desarrollador? ¡Echa un vistazo al &lt;a href="https://github.com/MarcosCobena/BuenosDias" target="_blank"&gt;repo. en GitHub&lt;/a&gt; entonces! (Éste corresponde al POC inicial con Xamarin.Forms que hice.)&lt;/em&gt;&lt;/p&gt;

&lt;p style="text-align:right;"&gt;-&lt;a href="http://marcoscobena.com/contact/"&gt;Marcos Cobeña Morián&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 03 Jun 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Recipes for Wave Engine</title>
  <guid>https://marcoscobena.com/?i=recipes-for-wave-engine</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Appart from my day-to-day job with the Xamarin Team, I spend a few hours per week collaborating with small tasks of &lt;a href="http://waveengine.net/"&gt;Wave Engine&lt;/a&gt;. It is our 2D/3D cross-platform game engine, written and coded in .NET/C#, which targets all those mobile devices you have in mind (running on Android and iOS through Xamarin products). And, it is free. &lt;a href="https://www.youtube.com/watch?v=DvTzWrJltQU"&gt;&lt;img src="https://img.youtube.com/vi/DvTzWrJltQU/0.jpg" alt="" /&gt;&lt;/a&gt; When I was reading Adam Wolf's &lt;a href="https://www.syntaxismyui.com/the-xamarin-forms-chef/"&gt;post&lt;/a&gt; summarizing his recipes for Xamarin.Forms (thank you Master Chef!), I came up with the idea of doing the same, but with those I have been lately writting for Wave Engine. We are currently hosting those at the official Wave Engine's &lt;a href="https://github.com/WaveEngine/"&gt;GitHub account&lt;/a&gt;, at the Documentation repository's &lt;a href="https://github.com/WaveEngine/Documentation/wiki"&gt;Wiki&lt;/a&gt;, so anyone can help us to improve them:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Screen-Transitions"&gt;Screen Transitions&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Sprites"&gt;Sprites&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Cameras"&gt;Cameras&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/2D-Colliders"&gt;2D Colliders&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/How-to-add-Components-to-an-Entity"&gt;How to add Components to an Entity&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Draw-a-Sprite-from-an-Atlas"&gt;Draw a Sprite from an Atlas&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Create-a-Button-and-subscribe-to-Click-event"&gt;Create a Button and subscribe to Click event&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Play-2D-animations-through-sprite-sheets"&gt;Play 2D animations through sprite sheets&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Play-2D-animations-made-with-Spine"&gt;Play 2D animations made with Spine&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Create-2D-particles"&gt;Create 2D particles&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Create-a-2D-physic-object"&gt;Create a 2D physic object&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="internal present" href="https://github.com/WaveEngine/Documentation/wiki/Add-a-label"&gt;Add a label&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, for those doing the first steps, the &lt;a href="https://github.com/WaveEngine/Documentation/wiki/Getting-Started"&gt;Getting Started&lt;/a&gt; section can be quite helpful. Enjoy them!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 27 May 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>FormsPresenters: Setting Up MvvmCross with Xamarin.Forms</title>
  <guid>https://marcoscobena.com/?i=formspresenters-setting-up-mvvmcross-with-xamarin-forms</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;During the last months, we have made some improvements to the &lt;a href="https://github.com/Cheesebaron/Cheesebaron.MvxPlugins/tree/master/FormsPresenters/WindowsPhone"&gt;FormsPresenters plug-in&lt;/a&gt; taken from real-world projects we are working on with our customers, at Plain Concepts. Since we did not have some NuGet packages to make an easy install of the scaffolding needed, we dedicated some effort to add a small documentation to the GitHub repository it-self, so everyone can easily set-up MvvmCross on their Xamarin.Forms projects.&lt;/p&gt;

&lt;p&gt;The first step is to clone the entire repo. locally, and build the MvvmCross &lt;a href="https://github.com/Cheesebaron/Cheesebaron.MvxPlugins/tree/master/submodules"&gt;submodule&lt;/a&gt;. Apart from here, the rest of the steps are done within the &lt;a href="https://github.com/Cheesebaron/Cheesebaron.MvxPlugins/tree/master/FormsPresenters"&gt;FormsPresenters directory&lt;/a&gt;. You will find four different projects inside: Core one, which handles the common logic among every supported platform (Android, iOS and Windows Phone); and one project per supported platform, which basically contains the final &lt;a href="http://gregshackles.com/presenters-in-mvvmcross-a-primer/"&gt;Presenters&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.plainconcepts.com/xamarinteam/2015/05/21/formspresenters-setting-up-mvvmcross-with-xamarin-forms/"&gt;Read the entire article...&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Wed, 20 May 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducing SVQXDG</title>
  <guid>https://marcoscobena.com/?i=introducing-svqxdg</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Going back from past dotNet Conference Spain 2015, &lt;a href="https://twitter.com/jsuarezruiz" target="_blank"&gt;Javier Suárez&lt;/a&gt; and I shared our passion on Xamarin at the train's cafeteria. We both liked the idea of having a local user group where talking about our projects made with Xamarin, which are the latest news, meet some other people doing the same things, etc.&lt;/p&gt;

&lt;p&gt;Today I would like to introduce &lt;a href="http://www.meetup.com/SevillaXamarinDevelopers/" target="_blank"&gt;Sevilla Xamarin Developer Group&lt;/a&gt;, specially our &lt;a href="http://www.meetup.com/SevillaXamarinDevelopers/events/222107171/" target="_blank"&gt;first meetup&lt;/a&gt;, this following Wednesday 6th. We will have people who are landing from Build 2015, and it is thrilling for me to chat with those since the past days have been quite interesting for cross-platform mobile developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.meetup.com/SevillaXamarinDevelopers/"&gt;&lt;img class="aligncenter size-full wp-image-42" src="items/images/svqxdg-blue.png" alt="SVQXDG" width="500" height="100" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are around Seville during this week (hey Andalusians we are looking at you!), and would like to attend, please visit our &lt;a href="http://www.meetup.com/SevillaXamarinDevelopers/" target="_blank"&gt;Meetup group&lt;/a&gt; and join us! Thank you!&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 02 May 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Case Study: Sage</title>
  <guid>https://marcoscobena.com/?i=case-study-sage</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few weeks ago Xamarin published one of our Case Studies: Sage.&lt;/p&gt;

&lt;p&gt;&lt;img class="aligncenter size-large wp-image-1567" src="http://blogs.plainconcepts.com/xamarinteam/wp-content/uploads/sites/4/2015/04/sage-showcase-1024x576.png" alt="sage-showcase" width="660" height="371" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.plainconcepts.com/xamarinteam/2015/04/08/case-study-sage/"&gt;Read the entire article...&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Tue, 07 Apr 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Translating Designs into Layouts: Units Conversion</title>
  <guid>https://marcoscobena.com/?i=translating-designs-into-layouts-units-conversion</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title="Ruler by Scott Akerman, on Flickr" href="https://www.flickr.com/photos/sterlic/4299631538"&gt;&lt;img class=" aligncenter" src="https://farm3.staticflickr.com/2730/4299631538_220c9c9448_z.jpg" alt="Ruler" width="640" height="396" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One aspect that Apple pushed to the limits is the union between Designers and Developers. Instead of understanding the product development process as a chain, it is done as a very close relationship walking in the same direction. Both of them speak different languages: they use different tools during their day-to-day job, they see different aspects of the product, their definition of done is different, etc.&lt;/p&gt;

&lt;p&gt;But there is something in common, which turns out to be a quite important thing: both want the product to succeed. Both want to deliver the best shape of what they are working on, and want to exceed the customer's expectations. Thus, it is worth looking for ways to improve this beautiful marriage.&lt;/p&gt;

&lt;p&gt;Within the following paragraphs, we will cover how to translate design sizes into numbers which can be written directly into the UI designers (Xamarin's one for Android and iOS, and Microsoft's one for Windows Phone). Even for Xamarin.Forms' XAML. Building UI layouts takes a large amount of time of the development process, and we have found quite helpful at &lt;a href="http://www.plainconcepts.com/"&gt;&lt;span style="text-decoration:underline;"&gt;Plain Concepts&lt;/span&gt;&lt;/a&gt; to accelerate this task.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.plainconcepts.com/xamarinteam/2015/04/06/translating-designs-into-layouts-units-conversion/"&gt;Read the entire article...&lt;/a&gt;&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sun, 05 Apr 2015 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Xamarin.Forms and Design challenges</title>
  <guid>https://marcoscobena.com/?i=xamarin-forms-and-design-challenges</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Everyone looking forward to use Xamarin.Forms is asking the same question: &lt;em&gt;would we be able to match our Designer's layouts with Xamarin.Forms?&lt;/em&gt; One week ago, I installed again the official Twitter app on my iPhone, and it recalled my attention the opening: it has a beautiful animation which goes from the Twitter's bird to your timeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="items/images/tumblr_inline_n6zoo1ve6a1qh9cw7.gif"&gt;&lt;img class="aligncenter wp-image-27 size-full" src="items/images/tumblr_inline_n6zoo1ve6a1qh9cw7.gif" alt="tumblr_inline_n6zoo1ve6a1qh9cw7" width="500" height="362" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple, but gorgeous. Those things make apps beautiful, a joy on our hands.&lt;/p&gt;

&lt;p&gt;So, during the last days, I have been asking my-self: could we replicate this with Xamarin.Forms? I am aware of having &lt;a href="http://iosapi.xamarin.com/?link=T%3aXamarin.Forms.ViewExtensions%2fM"&gt;a small subset of animations&lt;/a&gt;, so maybe it can be done. Google-ing I have found this &lt;a href="http://iosdevtips.co/post/88481653818/twitter-ios-app-bird-zoom-animation"&gt;page&lt;/a&gt;, which explains in detail how to achieve the same with plain Objective-C on iOS. What I was looking for are which specific animations are executed on the "storyboard" (here that just means a consecution of animations one after the other, nothing to do with iOS' Storyboards nor nothing like that). So the trick can be done with just two of them:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Scaling down the logo with a cubic-out easing (from fast to slow, decelerating)&lt;/li&gt;
    &lt;li&gt;Scaling up "to the infinite" with a cubic-in one (from slow to fast, acelerating)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hands to the keyboard: &lt;a href="https://github.com/MarcosCobena/XamarinFormsZoomStartupAnimation"&gt;the following sample app&lt;/a&gt; is composed of two pages, where the first one, &lt;code&gt;LoadingPage&lt;/code&gt;, does just that, the storyboard -which can be used to load content on the background asynchronously, indeed; and, the second one, &lt;code&gt;MainPage&lt;/code&gt;, which allows to revisit the first without having to kill the app.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;LoadingPage&lt;/code&gt; just has the logo in the middle, and in the code behind happens all "the magic":&lt;/p&gt;

&lt;p&gt;```c-sharp
public partial class LoadingPage : ContentPage
{
    public LoadingPage()
    {
        InitializeComponent();&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    Initialize();
}

async void Initialize()
{
    await ExecuteStoryboardAsync();
    await this.Navigation.PushAsync(new MainPage());
}

async Task ExecuteStoryboardAsync()
{
    await Task.Delay(3000);
    await LogoImage.ScaleTo(0.75f, length: 1000, easing: Easing.CubicOut);
    await LogoImage.ScaleTo(25, length: 250, easing: Easing.CubicIn);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
```&lt;/p&gt;

&lt;p&gt;The interesting thing here, as I pointed above, is not just the animations them-selves, but being able to do async. operations in parallel and, in the meantime, make the user feel he/she has a great app on his/her hand:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcoscobena.files.wordpress.com/2015/01/zoomstartupanimationandroid.gif"&gt;&lt;img class="alignnone wp-image-20 size-medium" style="border:1px solid #000000;" src="items/images/zoomstartupanimationandroid.gif" alt="ZoomStartupAnimationAndroid" width="184" height="300" /&gt;&lt;/a&gt; &lt;a href="https://marcoscobena.files.wordpress.com/2015/01/zoomstartupanimationios.gif"&gt;&lt;img class="alignnone wp-image-21 size-medium" style="border:1px solid #000000;" src="items/images/zoomstartupanimationios.gif" alt="ZoomStartupAnimationiOS" width="169" height="300" /&gt;&lt;/a&gt; &lt;a href="https://marcoscobena.files.wordpress.com/2015/01/zoomstartupanimationwindowsphone.gif"&gt;&lt;img class="alignnone wp-image-22 size-medium" style="border:1px solid #000000;" src="items/images/zoomstartupanimationwindowsphone.gif" alt="ZoomStartupAnimationWindowsPhone" width="181" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Android, iOS and Windows Phone apps)&lt;/p&gt;

&lt;p&gt;Why do not you get motivated and help us push Xamarin.Forms to all those design challenges out there? If you do, please share them with us. Thank you in advance! :-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 31 Jan 2015 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Enabling Xamarin.Forms with MVVMCross on Windows Phone</title>
  <guid>https://marcoscobena.com/?i=enabling-xamarin-forms-with-mvvmcross-on-windows-phone</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We are at &lt;a href="http://www.plainconcepts.com/"&gt;Plain Concepts&lt;/a&gt;, the Xamarin Team, investigating new ways to make use of &lt;a href="http://xamarin.com/forms"&gt;Xamarin.Forms&lt;/a&gt; to help our customers success on the main three mobile platforms: Android, iOS and Windows Phone. Most of our projects have been made using &lt;a href="https://github.com/MvvmCross/MvvmCross"&gt;MVVMCross&lt;/a&gt; as backend plus native UI for each target. Our company has special care for the visual side of every project, so this approach has given us the chance to follow the designs provided by our lovely Design &amp;amp; UX Team. But, after being playing around with Xamarin.Forms since the last year, we have seen a great opportunity to build apps with it, specially for those customers where the main goal is to reach every market, and not having strong visual requirements.&lt;/p&gt;

&lt;p&gt;Instead of starting a Xamarin.Forms project from scratch, we took a small piece of an existing one and tried to mimic the same app. Such was made with MVVMCross. As you probably already know there is no need to put an MVVM framework for Xamarin.Forms, as this last one brings its own navigation model, etc.; in the end, most of the needed stuff to make your app following the MVVM pattern. So, at the beginning, we started adding every ViewModel to our Xamarin.Forms solution, removing all those "Mvx" coincidences. It took some minutes to have the first view being rendered with its corresponding ViewModel set as DataContext, but the hard work came when it was time to move every Service. And not just that, but also every MVVMCross plug-in which made our life happier by that time, now we had to look for a different approach for each one of them. Senseless. So much work. There should be an easier approach...&lt;/p&gt;

&lt;p&gt;We kept looking on Google whether people had already solved this issue: "xamarin.forms mvvmcross". And, we landed on &lt;a href="http://blog.ostebaronen.dk/2014/07/xamarinforms-and-mvvmcross.html"&gt;this post from Tomasz Cielecki&lt;/a&gt; (BTW, congratulations for the Xamarin MVP award, you deserve it!) Exactly what we needed. With almost no change on the entire MVVMCross solution, we could just add the Xamarin.Forms pages and done. To be honest, there was one change to make which is to add &lt;code&gt;IValueConverter&lt;/code&gt; (the one from Xamarin.Forms) interface to all those converters which are used on the new pages' bindings. But nothing else, it is an easy one. Within a few hours we had the above mentioned portion running with Xamarin.Forms on Android, iOS and... Ops, no Windows Phone side currently, the example from Tomasz did not include such one.&lt;/p&gt;

&lt;p&gt;Why do not we code it? Tomasz's approach relies on MVVMCross' custom presenters, which is something we have already customized a few times for our customers. We took the iOS approach as the base for the Windows Phone one, and thanks to our mate &lt;a href="https://twitter.com/danielcaceresm"&gt;Daniel Cáceres&lt;/a&gt; which has a solid background on Windows Phone development, the app then was able to run on Windows Phone as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="items/images/01w-main.png"&gt;
&lt;em&gt;img class="wp-image-12 size-full" src="items/images/01w-main.png" alt="01w.main" width="480" height="800" /&gt;&lt;/a&gt; Tomasz's Xamarin.Forms/MVVMCross sample app running on Windows Phone&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This week I &lt;a href="https://github.com/MarcosCobena/Xam.Forms.Mvx"&gt;published all those changes on my personal GitHub account&lt;/a&gt;, which is a fork from Tomasz's repository, and made him a pull request. Through Twitter he pointed us to his Cheesebaron.MvxPlugins, where &lt;a href="https://github.com/Cheesebaron/Cheesebaron.MvxPlugins/tree/master/FormsPresenters"&gt;he has already made the Windows Phone side also&lt;/a&gt;, and ready to be consumed as an MVVMCross plug-in. We are working on it to check everything works with the latest Xamarin.Forms release, which changes the way the engine gets initialized, and will make a new pull request if needed during the following days.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="es"&gt;&lt;a href="https://twitter.com/CobenaMarcos"&gt;@CobenaMarcos&lt;/a&gt; &lt;a href="https://twitter.com/slodge"&gt;@slodge&lt;/a&gt; &lt;a href="https://twitter.com/plainconcepts"&gt;@plainconcepts&lt;/a&gt; cool stuff. I pulled some of the Presenters out and they are now in MvxPlugins. Could you take a look?

— Tomasz Cielecki (@Cheesebaron) &lt;a href="https://twitter.com/Cheesebaron/status/557949784078954496"&gt;enero 21, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Using Xamarin.Forms with MVVMCross is a huge WIN for us at Plain Concepts. We have acquired a strong confidence on MVVMCross during the last year, and has been beautiful to discover Xamarin.Forms just works on top of it. The next logical question is: would it be possible to blend Xamarin.Forms' pages and native UIs during a navigation? :-)&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 24 Jan 2015 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Error handling with Promises, and how to block the UI meanwhile</title>
  <guid>https://marcoscobena.com/?i=error-handling-with-promises-and-how-to-block-the-ui-meanwhile</guid>
  <description>&lt;p&gt;&lt;em&gt;(This post was imported, please &lt;a href="/?i=contact"&gt;contact&lt;/a&gt; me if there's anything wrong with it. Thanks in advance)&lt;/em&gt;&lt;/p&gt;

&lt;div&gt;

During my day-to-day job I’ve found out my-self again with a programming question I didn’t manage to answer the 1st time: which is a proper way to handle errors on a chain of async calls, and how to avoid the user to interact with the UI while the ops. are working. Well, actually those are 2 different questions, but let’s say I’ve always found both blended.

&lt;/div&gt;

&lt;p&gt;The 1st time I worked on this was on a Windows Store App (a.k.a. Windows Style UI App –former Metro- for Windows 8) done with HTML5. Microsoft provides such sandbox with WinJS, which abstracts the underlying OS for ops. like taking a photo, recording a video, and so on. Most of these are async ops. so Microsoft also provides an implementation of JavaScript Promises in order to handle all the async stuff.&lt;/p&gt;

&lt;p&gt;My current Project is a SPA (Single Page Application) so there’s no WinJS anymore but jQuery among other ones. And, good for me, I’ve discovered jQuery provides also an implementation of Promises but they call these &lt;a href="http://api.jquery.com/category/deferred-object/"&gt;Deferreds&lt;/a&gt;. There are some differences between ones and the others but what I’d like to point out here is that thanks to following the same patterns on both places I’ve been able to reuse what I learnt some months ago.&lt;/p&gt;

&lt;p&gt;One of the things I got for clear is that when one is programming with Promises, and chaining a bunch of those, must be careful with the way those are chained. I read &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/hh700334.aspx"&gt;an article from Microsoft’s MSDN&lt;/a&gt; that was pretty clear on this: make use of the plain syntax.&lt;/p&gt;

&lt;p&gt;So let’s go back to the road, and we’ll start 1st with the error handling. Suppose we have a few different async functions that we’ve got to chain in order to get something done (for instance, a loginWithFacebookAsync() that returns a token that need to be passed by to authenticateAsync(token) and after that we navigate to the home page), so we’d write something like this:&lt;/p&gt;

&lt;p&gt;```c-sharp
opAsync(1)&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(2);&lt;/p&gt;

&lt;p&gt;})&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(3);&lt;/p&gt;

&lt;p&gt;});
```&lt;/p&gt;

&lt;p&gt;In order to simplify the explanation I’ve used the same function but changing the param these receive:&lt;/p&gt;

&lt;p&gt;```c-sharp
function opAsync(number) {&lt;/p&gt;

&lt;p&gt;console.log(&amp;quot;Starting op. &amp;quot; + number + &amp;quot;...&amp;quot;);&lt;/p&gt;

&lt;p&gt;var dfd = $.Deferred();&lt;/p&gt;

&lt;p&gt;setTimeout(function () {&lt;/p&gt;

&lt;p&gt;var random = Math.random(),&lt;/p&gt;

&lt;p&gt;message;&lt;/p&gt;

&lt;p&gt;if (random &amp;amp;gt; 0.75) {&lt;/p&gt;

&lt;p&gt;message = &amp;quot;Error on op. &amp;quot; + number + &amp;quot;!&amp;quot;;&lt;/p&gt;

&lt;p&gt;console.log(message);&lt;/p&gt;

&lt;p&gt;dfd.reject(message);&lt;/p&gt;

&lt;p&gt;} else {&lt;/p&gt;

&lt;p&gt;message = &amp;quot;Success on op. &amp;quot; + number + &amp;quot;!&amp;quot;;&lt;/p&gt;

&lt;p&gt;console.log(message);&lt;/p&gt;

&lt;p&gt;dfd.resolve(message);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}, 1000);&lt;/p&gt;

&lt;p&gt;console.log(&amp;quot;Finished op. &amp;quot; + number + &amp;quot;&amp;quot;);&lt;/p&gt;

&lt;p&gt;return dfd.promise();&lt;/p&gt;

&lt;p&gt;}
```&lt;/p&gt;

&lt;p&gt;I’ve introduced a random component so from time to time the op. could fail. But on an ideal execution –no fails- the op. 1 would be executed, once it ends goes #2, and the same happens with 3rd one. But what happens if one fails? As we’ve followed the plain form of chaining Promises the error will be spread along the pipeline, avoiding the following functions to execute, but just passing by the error to the next one.&lt;/p&gt;

&lt;p&gt;The way I’ve gone to handle errors on this situation until yesterday was adding a 2nd param to the last then() for the error callback:&lt;/p&gt;

&lt;p&gt;```c-sharp
opAsync(1)&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(2);&lt;/p&gt;

&lt;p&gt;})&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(3);&lt;/p&gt;

&lt;p&gt;}, function (error) {&lt;/p&gt;

&lt;p&gt;alert(error);&lt;/p&gt;

&lt;p&gt;});
```&lt;/p&gt;

&lt;p&gt;BIG FAIL. Maybe from a brief analysis one could think, and the way the chain is written invited me to do so, that as the error callback is at the end and after the last op. call, the 1st would handle every error occurred. But sadly it wasn’t true, I misunderstood the chain process, at least at this particular point. If opAsync(1) or opAsync(2) fail, in fact the error will be catch because such handler is “subscribed” to a then() after both functions, but if opAsync(3) barks the alert() will never be called as both are at the same level of the chain. Actually, it was so easy to understand but maybe not for one which was touching Promises for the very first time like I did.&lt;/p&gt;

&lt;p&gt;But the fix is really easy: move the error handling one step further on the calls chain. Even more, we can make use of done() instead of then() as there won’t be any async op. after that, in case of a success result; and add a call to fail() to handle whatever error could happen during the async calls (we move the error callback to such one). So the code would result on this:&lt;/p&gt;

&lt;p&gt;```c-sharp
opAsync(1)&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(2);&lt;/p&gt;

&lt;p&gt;})&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(3);&lt;/p&gt;

&lt;p&gt;// Bad practice: handling errors just here avoids the last call (return) ones&lt;/p&gt;

&lt;p&gt;//}, function (error) {&lt;/p&gt;

&lt;p&gt;//    alert(error);&lt;/p&gt;

&lt;p&gt;//});&lt;/p&gt;

&lt;p&gt;})&lt;/p&gt;

&lt;p&gt;.done(function () {&lt;/p&gt;

&lt;p&gt;alert(“Yeah!”);&lt;/p&gt;

&lt;p&gt;}).fail(function (error) {&lt;/p&gt;

&lt;p&gt;alert(error);&lt;/p&gt;

&lt;p&gt;});
```&lt;/p&gt;

&lt;p&gt;Param error will contain the one passed to reject() on the Deferred object. Here are just strings, but you could make use of Error (btw, this is something I’d like to investigate further: what’s the benefit of using Error, any hint is appreciated :-)).&lt;/p&gt;

&lt;p&gt;And do you remember the other point of the main question, how to block the UI? Well that’s been pretty surprising for me the last weekend to find out a jQuery UI plug-in called &lt;a href="http://www.malsup.com/jquery/block/"&gt;jQuery BlockUI&lt;/a&gt; that solves my particular question just adding 3 lines to the above code:&lt;/p&gt;

&lt;p&gt;```c-sharp
$.blockUI();&lt;/p&gt;

&lt;p&gt;opAsync(1)&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(2);&lt;/p&gt;

&lt;p&gt;})&lt;/p&gt;

&lt;p&gt;.then(function () {&lt;/p&gt;

&lt;p&gt;return opAsync(3);&lt;/p&gt;

&lt;p&gt;// Bad practice: handling errors just here avoids the last call (return) ones&lt;/p&gt;

&lt;p&gt;//}, function (error) {&lt;/p&gt;

&lt;p&gt;//    alert(error);&lt;/p&gt;

&lt;p&gt;//});&lt;/p&gt;

&lt;p&gt;})&lt;/p&gt;

&lt;p&gt;.done(function () {&lt;/p&gt;

&lt;p&gt;$.unblockUI();&lt;/p&gt;

&lt;p&gt;})&lt;/p&gt;

&lt;p&gt;.fail(function (error) {&lt;/p&gt;

&lt;p&gt;alert(error);&lt;/p&gt;

&lt;p&gt;$.unblockUI();&lt;/p&gt;

&lt;p&gt;});
```&lt;/p&gt;

&lt;p&gt;And voilá! Less is more. :-) You can see all this in action, and modify as you desire, &lt;a href="http://jsfiddle.net/HVH8Z/"&gt;here&lt;/a&gt;. Remember to enable the developer panel (F12 uses to do that) to see the output in the console.&lt;/p&gt;

&lt;p&gt;Thanks for reading the whole thing, it’s of the sort of those that I find important to have a clear picture of how to work with.&lt;/p&gt;</description>
  <author>marcoscm.digital@gmail.com (Marcos Cobeña Morián)</author>
  <pubDate>Sat, 18 May 2013 22:00:00 GMT</pubDate>
</item></channel>
</rss>